import os
import numpy as np
import pandas as pd
import xarray as xr
from IRF_parameters import *

dir_path = 'D:/科研相关/我的/tCDR/tCDR'
os.chdir(dir_path)


#==============================================================================
# Closed-form functions 
#==============================================================================

def UnitStep(a, b=None):
    if b is None:
        return np.where(a >= 0, 1, 0)
    else:
        return np.where((a >= 0) & (b >= 0), 1, 0)
    
# Distributed CO2 emission
def E_Exp(t, decay):
    e_t = (3/decay) * np.exp(-3*t/decay)
    return e_t

def E_Linear(t, decay):
    e_t = np.where((t >= 0) & (t <= decay),  (2/decay**2) * (decay-t), 0)
    return e_t

def E_Constant(t, decay):
    e_t = np.where((t >= 0) & (t <= decay), np.ones(len(t))*(1/decay), 0)
    return e_t

def E_Impulse(t, decay):

    return np.where(t == decay, 1/0.1, 0)  

# Distributed CO2 capture and emission
def F_Exp(t, decay):
    dirac_delta = np.where(t == 0, 1/0.1, 0)  
    e_t = (3/decay) * np.exp(-3*t/decay)
    return e_t - dirac_delta

def F_Linear(t, decay):
    dirac_delta = np.where(t == 0,  1/0.1, 0)  
    e_t = np.where((t >= 0) & (t <= decay),  (2/decay**2) * (decay-t), 0)
    return e_t - dirac_delta

def F_Constant(t, decay):
    dirac_delta = np.where(t == 0,  1/0.1, 0)  
    e_t = np.where((t >= 0) & (t <= decay), np.ones(len(t))*(1/decay), 0)
    return e_t - dirac_delta

def F_Impulse(t, decay):
    dirac_delta = np.where(t == 0, 1/0.1, 0)  
    e_t = np.where(t == decay, 1/0.1, 0)  
    return e_t - dirac_delta

def F_Rotation_Exp(t, decay, a, v1, v2, rotation):
    condition1 = rotation >= t
    value1 = a * (-np.exp(-t * v1) + np.exp(-t * v2))
    default_value = (3 * np.exp((3 * (rotation - t)) / decay)) / decay
    
    result = np.where(condition1, value1, default_value)
    return result

def F_Rotation_Linear(t, decay, a, v1, v2, rotation):
    condition1 = rotation >= t
    condition2 = (rotation < t) & (decay + rotation < t)
    
    value1 = a * (-np.exp(-t * v1) + np.exp(-t * v2))
    value2 = 0
    default_value = (2 * (decay + rotation - t)) / (decay ** 2)
    
    result = np.where(condition1, value1, np.where(condition2, value2, default_value))
    return result

def F_Rotation_Constant(t, decay, a, v1, v2, rotation):
    condition1 = rotation >= t
    condition2 = (rotation < t) & (decay + rotation < t)
    
    value1 = a * (-np.exp(-t * v1) + np.exp(-t * v2))
    value2 = 0
    default_value = 1 / decay
    
    result = np.where(condition1, value1, np.where(condition2, value2, default_value))

    return result

def F_Linear_Exp(t, decay, rotation):
    condition1 = rotation >= t
    value1 = (-2 * (rotation - t)) / rotation ** 2
    default_value = (3 * np.exp((3 * (rotation - t)) / decay)) / decay
    return np.where(condition1, value1, default_value)

def F_Linear_Linear(t, decay, rotation):
    condition1 = rotation >= t
    condition2 = (rotation < t) & (decay + rotation < t)
    value1 = (-2 * (rotation - t)) / rotation ** 2
    value2 = 0
    default_value = (2 * (decay + rotation - t)) / decay ** 2
    return np.where(condition1, value1, np.where(condition2, value2, default_value))

def F_Linear_Constant(t, decay, rotation):
    condition1 = rotation >= t
    condition2 = (rotation < t) & (decay + rotation < t)
    value1 = (-2 * (rotation - t)) / rotation ** 2
    value2 = 0
    default_value = 1 / decay
    return np.where(condition1, value1, np.where(condition2, value2, default_value))

def F_Constant_Exp(t, decay, rotation):
    condition1 = rotation >= t
    value1 = -1 / rotation
    default_value = (3 * np.exp((3 * (rotation - t)) / decay)) / decay
    return np.where(condition1, value1, default_value)

def F_Constant_Linear(t, decay, rotation):
    condition1 = rotation >= t
    condition2 = (rotation < t) & (decay + rotation < t)
    value1 = -1 / rotation
    value2 = 0
    default_value = (2 * (decay + rotation - t)) / decay ** 2
    return np.where(condition1, value1, np.where(condition2, value2, default_value))

def F_Constant_Constant(t, decay, rotation):
    condition1 = rotation >= t
    condition2 = (rotation < t) & (decay + rotation < t)
    value1 = -1 / rotation
    value2 = 0
    default_value = 1 / decay
    return np.where(condition1, value1, np.where(condition2, value2, default_value))

def F_Constant_Impulse(t, decay, rotation):
    condition1 = rotation >= t
    condition2 = (rotation < t) & (decay + rotation < t)
    value1 = -1 / rotation
    value2 = 0
    default_value = np.where(t == decay + rotation, 1/0.1, 0)  
    return np.where(condition1, value1, np.where(condition2, value2, default_value))

def F_Trian_Exp(t, decay, p, rotation):

    condition1 = t < p

    condition2 = t == p

    condition3 = (p < t) & (t <= rotation)

    condition4 = t <= rotation

    condition5 = t > rotation
    

    result_inner = np.where(
        condition1, -2 * t / (p * rotation),
        np.where(
            condition2, -2 / rotation,
            np.where(
                condition3, -2 * (rotation - t) / (rotation * (-p + rotation)),
                0
            )
        )
    )

    result = np.where(
        condition4, result_inner,
        np.where(
            condition5, 3 * np.exp(3 * (rotation - t) / decay) / decay,
            0
        )
    )
    
    return result

def F_Trian_Linear(t, decay, p, rotation):
   
    condition1 = (rotation >= t) & (p > t)
    condition2 = (rotation >= t) & (p == t)
    condition3 = (rotation >= t) & (p < t)
    condition4 = (rotation >= t) | (decay + rotation < t)


    term1 = -2 * t / (p * rotation)
    term2 = -2 / rotation
    term3 = 2 * (rotation - t) / ((p - rotation) * rotation)
    term4 = 0
    term5 = 2 * (decay + rotation - t) / (decay**2)


    result = np.where(condition1, term1,
                     np.where(condition2, term2,
                             np.where(condition3, term3,
                                      np.where(condition4, term4, term5))))

    return result

def F_Trian_Constant(t, decay, p, rotation):
   
    condition1 = (rotation >= t) & (p > t)
    condition2 = (rotation >= t) & (p == t)
    condition3 = (rotation >= t) & (p < t)
    condition4 = (rotation >= t) | (decay + rotation < t)

    term1 = -2 * t / (p * rotation)
    term2 = -2 / rotation
    term3 = 2 * (rotation - t) / ((p - rotation) * rotation)
    term4 = 0
    term5 = 1 / decay

    result = np.where(condition1, term1,
                     np.where(condition2, term2,
                             np.where(condition3, term3,
                                      np.where(condition4, term4, term5))))

    return result

def F_Trian_Impulse(t, decay, p, rotation):
   
    condition1 = (rotation >= t) & (p > t)
    condition2 = (rotation >= t) & (p == t)
    condition3 = (rotation >= t) & (p < t)
    condition4 = (rotation >= t) | (decay + rotation < t)

    term1 = -2 * t / (p * rotation)
    term2 = -2 / rotation
    term3 = 2 * (rotation - t) / ((p - rotation) * rotation)
    term4 = 0
    term5 = np.where(t == decay + rotation, 1/0.1, 0)  

    result = np.where(condition1, term1,
                     np.where(condition2, term2,
                             np.where(condition3, term3,
                                      np.where(condition4, term4, term5))))

    return result


# IRF
# carbon IRF function 
def IRFCO2(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3):
    return aC1 + np.exp(-t / tauC1) * aC2 + np.exp(-t / tauC2) * aC3 + np.exp(-t / tauC3) * aC4

# climate IRF function 
def IRFPulseT(t, kPulseT, aT1, tauT1, aT2, tauT2):
    term1 = (np.exp(-t / tauT1) * aT1) / tauT1
    term2 = (np.exp(-t / tauT2) * aT2) / tauT2
    return (term1 + term2) * kPulseT

# fdbk IRF function 
def IRFCCfdbk(t, gamma, aS1, aS2, aS3, tauS1, tauS2, tauS3):
    dirac_delta = np.where(t == 0, 1/0.1, 0)  
    term1 = -(np.exp(-t / tauS1) * aS1) / tauS1
    term2 = -(np.exp(-t / tauS2) * aS2) / tauS2
    term3 = -(np.exp(-t / tauS3) * aS3) / tauS3
    return gamma * (dirac_delta + term1 + term2 + term3)

def IRFNonCO2(t, tauNonCO2):
    return np.exp(-t / tauNonCO2)

def PRF_Exp(t, decay, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3):

    term1 = -aC1 * np.exp(-3 * t / decay)
    
    term2 = (aC2 * (-decay * np.exp(-t / tauC1) + 3 * np.exp(-3 * t / decay) * tauC1)) / (decay - 3 * tauC1)
    
    term3 = -(aC3 * decay * np.exp(-t / tauC2)) / (decay - 3 * tauC2) + (3 * aC3 * np.exp(-3 * t / decay) * tauC2) / (decay - 3 * tauC2)
    
    term4 = -(aC4 * decay * np.exp(-t / tauC3)) / (decay - 3 * tauC3) + (3 * aC4 * np.exp(-3 * t / decay) * tauC3) / (decay - 3 * tauC3)

    return (term1 + term2 + term3 + term4) 

def PRF_Linear(t, decay, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3):

    term1_1 = aC1 - (2 * np.exp(-t * (1/tauC1 + 1/tauC2 + 1/tauC3)) * 
                    (aC2 * np.exp(t * (1/tauC2 + 1/tauC3)) * tauC1 * (decay + tauC1 - np.exp(decay / tauC1) * tauC1) + 
                     np.exp(t / tauC1) * (aC3 * np.exp(t / tauC3) * tauC2 * (decay + tauC2 - np.exp(decay / tauC2) * tauC2) + 
                     aC4 * np.exp(t / tauC2) * tauC3 * (decay + tauC3 - np.exp(decay / tauC3) * tauC3)))) / decay**2
    
    term1_2 = (-aC1 * t * (-2 * decay + t) + 2 * (aC2 * tauC1 * (decay - decay * np.exp(-t / tauC1) - t + tauC1 - np.exp(-t / tauC1) * tauC1) +
                                                  aC3 * tauC2 * (decay - decay * np.exp(-t / tauC2) - t + tauC2 - np.exp(-t / tauC2) * tauC2) +
                                                  aC4 * tauC3 * (decay - decay * np.exp(-t / tauC3) - t + tauC3 - np.exp(-t / tauC3) * tauC3))) / decay**2
    
    term2 = -aC1 - aC2 * np.exp(-t / tauC1) - aC3 * np.exp(-t / tauC2) - aC4 * np.exp(-t / tauC3)
    
    result = np.where((decay > 0) & (decay < t), term1_1, np.where((decay > 0) & (t > 0) & (decay >= t), term1_2, 0))  + term2 

    return result

def PRF_Constant(t, decay, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3):
    
    term1 = (aC1 * decay + np.exp((decay - t) / tauC1) * aC2 * tauC1 - np.exp(-t / tauC1) * aC2 * tauC1 + 
            np.exp((decay - t) / tauC2) * aC3 * tauC2 - np.exp(-t / tauC2) * aC3 * tauC2 +
            np.exp((decay - t) / tauC3) * aC4 * tauC3 - np.exp(-t / tauC3) * aC4 * tauC3) / decay
    
    term2 = (aC1 * t + aC2 * tauC1 - np.exp(-t / tauC1) * aC2 * tauC1 + 
            aC3 * tauC2 - np.exp(-t / tauC2) * aC3 * tauC2 + 
            aC4 * tauC3 - np.exp(-t / tauC3) * aC4 * tauC3) / decay
    
    term3 = -aC1 - np.exp(-t / tauC1) * aC2 - np.exp(-t / tauC2) * aC3 - np.exp(-t / tauC3) * aC4
    
    result = np.where((decay > 0) & (decay < t), term1, np.where((decay > 0) & (t > 0) & (decay >= t), term2, 0))  + term3

    return result

def PRF_Impulse(t, decay, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3):
    
    result = -(aC1 + aC2*np.exp(-t/tauC1) + aC3*np.exp(-t/tauC2) + aC4*np.exp(-t/tauC3))*UnitStep(t) + (aC1 + aC2*np.exp((decay - t)/tauC1) + aC3*np.exp((decay - t)/tauC2) + aC4*np.exp((decay - t)/tauC3))*UnitStep(decay, -decay + t)
    
    return result

def PRF_Rotation_Exp(t, decay, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, a, v1, v2, rotation):

    term1 = a*(-aC1*np.exp(t*v1)/v2 + aC1*np.exp(t*v2)/v1 + aC1*(v1 - v2)*np.exp(t*(v1 + v2))/(v1*v2) - aC2*tauC1*(-tauC1*(v1 - v2)*np.exp(t*(tauC1*(v1 + v2) - 1)/tauC1) + (tauC1*v1 - 1)*np.exp(t*v1) + (-tauC1*v2 + 1)*np.exp(t*v2))/((tauC1*v1 - 1)*(tauC1*v2 - 1)) - aC3*tauC2*(-tauC2*(v1 - v2)*np.exp(t*(tauC2*(v1 + v2) - 1)/tauC2) + (tauC2*v1 - 1)*np.exp(t*v1) + (-tauC2*v2 + 1)*np.exp(t*v2))/((tauC2*v1 - 1)*(tauC2*v2 - 1)) - aC4*tauC3*(-tauC3*(v1 - v2)*np.exp(t*(tauC3*(v1 + v2) - 1)/tauC3) + (tauC3*v1 - 1)*np.exp(t*v1) + (-tauC3*v2 + 1)*np.exp(t*v2))/((tauC3*v1 - 1)*(tauC3*v2 - 1)))*np.exp(-t*(v1 + v2))
    
    term2 = (a*aC1*(-v1*np.exp(rotation*v1) + v2*np.exp(rotation*v2) + (v1 - v2)*np.exp(rotation*(v1 + v2)))*np.exp(-rotation*(v1 + v2) + t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(v1*v2) + a*(-aC2*tauC1*(-tauC1*(v1 - v2)*np.exp(rotation*(v1 + v2)) + (tauC1*v1 - 1)*np.exp(rotation*(v1 + 1/tauC1)) + (-tauC1*v2 + 1)*np.exp(rotation*(v2 + 1/tauC1)))*np.exp(t*(1/tauC3 + 1/tauC2))/((tauC1*v1 - 1)*(tauC1*v2 - 1)) - aC3*tauC2*(-tauC2*(v1 - v2)*np.exp(rotation*(v1 + v2)) + (tauC2*v1 - 1)*np.exp(rotation*(v1 + 1/tauC2)) + (-tauC2*v2 + 1)*np.exp(rotation*(v2 + 1/tauC2)))*np.exp(t*(1/tauC3 + 1/tauC1))/((tauC2*v1 - 1)*(tauC2*v2 - 1)) - aC4*tauC3*(-tauC3*(v1 - v2)*np.exp(rotation*(v1 + v2)) + (tauC3*v1 - 1)*np.exp(rotation*(v1 + 1/tauC3)) + (-tauC3*v2 + 1)*np.exp(rotation*(v2 + 1/tauC3)))*np.exp(t*(1/tauC2 + 1/tauC1))/((tauC3*v1 - 1)*(tauC3*v2 - 1)))*np.exp(-rotation*(v1 + v2)) + aC1*(-np.exp(3*rotation/decay) + np.exp(3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 - 3/decay)) + 3*aC2*tauC1*(-np.exp(rotation/tauC1 + 3*t/decay) + np.exp(t/tauC1 + 3*rotation/decay))*np.exp(t*(1/tauC3 + 1/tauC2 - 3/decay))/(decay - 3*tauC1) + 3*(aC3*tauC2*(-decay + 3*tauC3)*(np.exp(rotation/tauC2 + 3*t/decay) - np.exp(t/tauC2 + 3*rotation/decay))*np.exp(t/tauC3) + aC4*tauC3*(-decay + 3*tauC2)*(np.exp(rotation/tauC3 + 3*t/decay) - np.exp(t/tauC3 + 3*rotation/decay))*np.exp(t/tauC2))*np.exp(t*(1/tauC1 - 3/decay))/((decay - 3*tauC2)*(decay - 3*tauC3)))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1))
   
    result = np.where((t > 0) & (t <= rotation), term1, np.where((t > rotation), term2, 0)) 

    return result

def PRF_Rotation_Linear(t, decay, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, a, v1, v2, rotation):

    term1 = a*(-aC1*np.exp(t*v1)/v2 + aC1*np.exp(t*v2)/v1 + aC1*(v1 - v2)*np.exp(t*(v1 + v2))/(v1*v2) - aC2*tauC1*(-tauC1*(v1 - v2)*np.exp(t*(tauC1*(v1 + v2) - 1)/tauC1) + (tauC1*v1 - 1)*np.exp(t*v1) + (-tauC1*v2 + 1)*np.exp(t*v2))/((tauC1*v1 - 1)*(tauC1*v2 - 1)) - aC3*tauC2*(-tauC2*(v1 - v2)*np.exp(t*(tauC2*(v1 + v2) - 1)/tauC2) + (tauC2*v1 - 1)*np.exp(t*v1) + (-tauC2*v2 + 1)*np.exp(t*v2))/((tauC2*v1 - 1)*(tauC2*v2 - 1)) - aC4*tauC3*(-tauC3*(v1 - v2)*np.exp(t*(tauC3*(v1 + v2) - 1)/tauC3) + (tauC3*v1 - 1)*np.exp(t*v1) + (-tauC3*v2 + 1)*np.exp(t*v2))/((tauC3*v1 - 1)*(tauC3*v2 - 1)))*np.exp(-t*(v1 + v2))

    term2 = (a*aC1*(-v1*np.exp(rotation*v1) + v2*np.exp(rotation*v2) + (v1 - v2)*np.exp(rotation*(v1 + v2)))*np.exp(-rotation*(v1 + v2) + t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(v1*v2) + a*(-aC2*tauC1*(-tauC1*(v1 - v2)*np.exp(rotation*(v1 + v2)) + (tauC1*v1 - 1)*np.exp(rotation*(v1 + 1/tauC1)) + (-tauC1*v2 + 1)*np.exp(rotation*(v2 + 1/tauC1)))*np.exp(t*(1/tauC3 + 1/tauC2))/((tauC1*v1 - 1)*(tauC1*v2 - 1)) - aC3*tauC2*(-tauC2*(v1 - v2)*np.exp(rotation*(v1 + v2)) + (tauC2*v1 - 1)*np.exp(rotation*(v1 + 1/tauC2)) + (-tauC2*v2 + 1)*np.exp(rotation*(v2 + 1/tauC2)))*np.exp(t*(1/tauC3 + 1/tauC1))/((tauC2*v1 - 1)*(tauC2*v2 - 1)) - aC4*tauC3*(-tauC3*(v1 - v2)*np.exp(rotation*(v1 + v2)) + (tauC3*v1 - 1)*np.exp(rotation*(v1 + 1/tauC3)) + (-tauC3*v2 + 1)*np.exp(rotation*(v2 + 1/tauC3)))*np.exp(t*(1/tauC2 + 1/tauC1))/((tauC3*v1 - 1)*(tauC3*v2 - 1)))*np.exp(-rotation*(v1 + v2)) + aC1*(-rotation + t)*(2*decay + rotation - t)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1))/decay**2 + 2*aC2*tauC1*(decay*(-np.exp(rotation/tauC1) + np.exp(t/tauC1)) - tauC1*np.exp(rotation/tauC1) + (rotation - t + tauC1)*np.exp(t/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2))/decay**2 + 2*(aC3*tauC2*(decay*(-np.exp(rotation/tauC2) + np.exp(t/tauC2)) - tauC2*np.exp(rotation/tauC2) + (rotation - t + tauC2)*np.exp(t/tauC2))*np.exp(t/tauC3) + aC4*tauC3*(decay*(-np.exp(rotation/tauC3) + np.exp(t/tauC3)) - tauC3*np.exp(rotation/tauC3) + (rotation - t + tauC3)*np.exp(t/tauC3))*np.exp(t/tauC2))*np.exp(t/tauC1)/decay**2)*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1))

    term3 = a*aC1*(v1 - v1*np.exp(-rotation*v2) + v2*(-1 + np.exp(-rotation*v1)))/(v1*v2) + a*(-aC2*tauC1*(-tauC1*(v1 - v2)*np.exp(rotation*(v1 + v2)) + (tauC1*v1 - 1)*np.exp(rotation*(v1 + 1/tauC1)) + (-tauC1*v2 + 1)*np.exp(rotation*(v2 + 1/tauC1)))*np.exp(t*(2/tauC3 + 2/tauC2 + 1/tauC1))/((tauC1*v1 - 1)*(tauC1*v2 - 1)) - aC3*tauC2*(-tauC2*(v1 - v2)*np.exp(rotation*(v1 + v2)) + (tauC2*v1 - 1)*np.exp(rotation*(v1 + 1/tauC2)) + (-tauC2*v2 + 1)*np.exp(rotation*(v2 + 1/tauC2)))*np.exp(t*(2/tauC3 + 1/tauC2 + 2/tauC1))/((tauC2*v1 - 1)*(tauC2*v2 - 1)) - aC4*tauC3*(-tauC3*(v1 - v2)*np.exp(rotation*(v1 + v2)) + (tauC3*v1 - 1)*np.exp(rotation*(v1 + 1/tauC3)) + (-tauC3*v2 + 1)*np.exp(rotation*(v2 + 1/tauC3)))*np.exp(t*(1/tauC3 + 2/tauC2 + 2/tauC1))/((tauC3*v1 - 1)*(tauC3*v2 - 1)))*np.exp(-rotation*(v1 + v2) - 2*t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + aC1 - 2*(aC2*tauC1*(decay - tauC1*np.exp(decay/tauC1) + tauC1)*np.exp(rotation/tauC1 + t*(1/tauC3 + 1/tauC2)) + (aC3*tauC2*(decay - tauC2*np.exp(decay/tauC2) + tauC2)*np.exp(rotation/tauC2 + t/tauC3) + aC4*tauC3*(decay - tauC3*np.exp(decay/tauC3) + tauC3)*np.exp(rotation/tauC3 + t/tauC2))*np.exp(t/tauC1))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1))/decay**2

    result = np.where((rotation >= t) & (decay + rotation >= t) & (t > 0), term1, 
            np.where((rotation < t) & (decay + rotation >= t), term2, 
            np.where((rotation < t) & (decay + rotation < t), term3, 0)))

    return result

def PRF_Rotation_Constant(t, decay, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, a, v1, v2, rotation):

    term1 = a*(-aC1*np.exp(t*v1)/v2 + aC1*np.exp(t*v2)/v1 + aC1*(v1 - v2)*np.exp(t*(v1 + v2))/(v1*v2) - aC2*tauC1*(-tauC1*(v1 - v2)*np.exp(t*(tauC1*(v1 + v2) - 1)/tauC1) + (tauC1*v1 - 1)*np.exp(t*v1) + (-tauC1*v2 + 1)*np.exp(t*v2))/((tauC1*v1 - 1)*(tauC1*v2 - 1)) - aC3*tauC2*(-tauC2*(v1 - v2)*np.exp(t*(tauC2*(v1 + v2) - 1)/tauC2) + (tauC2*v1 - 1)*np.exp(t*v1) + (-tauC2*v2 + 1)*np.exp(t*v2))/((tauC2*v1 - 1)*(tauC2*v2 - 1)) - aC4*tauC3*(-tauC3*(v1 - v2)*np.exp(t*(tauC3*(v1 + v2) - 1)/tauC3) + (tauC3*v1 - 1)*np.exp(t*v1) + (-tauC3*v2 + 1)*np.exp(t*v2))/((tauC3*v1 - 1)*(tauC3*v2 - 1)))*np.exp(-t*(v1 + v2))

    term2 = (a*aC1*(-v1*np.exp(rotation*v1) + v2*np.exp(rotation*v2) + (v1 - v2)*np.exp(rotation*(v1 + v2)))*np.exp(-rotation*(v1 + v2) + t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(v1*v2) + a*(-aC2*tauC1*(-tauC1*(v1 - v2)*np.exp(rotation*(v1 + v2)) + (tauC1*v1 - 1)*np.exp(rotation*(v1 + 1/tauC1)) + (-tauC1*v2 + 1)*np.exp(rotation*(v2 + 1/tauC1)))*np.exp(t*(1/tauC3 + 1/tauC2))/((tauC1*v1 - 1)*(tauC1*v2 - 1)) - aC3*tauC2*(-tauC2*(v1 - v2)*np.exp(rotation*(v1 + v2)) + (tauC2*v1 - 1)*np.exp(rotation*(v1 + 1/tauC2)) + (-tauC2*v2 + 1)*np.exp(rotation*(v2 + 1/tauC2)))*np.exp(t*(1/tauC3 + 1/tauC1))/((tauC2*v1 - 1)*(tauC2*v2 - 1)) - aC4*tauC3*(-tauC3*(v1 - v2)*np.exp(rotation*(v1 + v2)) + (tauC3*v1 - 1)*np.exp(rotation*(v1 + 1/tauC3)) + (-tauC3*v2 + 1)*np.exp(rotation*(v2 + 1/tauC3)))*np.exp(t*(1/tauC2 + 1/tauC1))/((tauC3*v1 - 1)*(tauC3*v2 - 1)))*np.exp(-rotation*(v1 + v2)) + aC1*(-rotation + t)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1))/decay - aC2*tauC1*(np.exp(rotation/tauC1) - np.exp(t/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2))/decay + (aC3*tauC2*(-np.exp(rotation/tauC2) + np.exp(t/tauC2))*np.exp(t/tauC3) + aC4*tauC3*(-np.exp(rotation/tauC3) + np.exp(t/tauC3))*np.exp(t/tauC2))*np.exp(t/tauC1)/decay)*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1))

    term3 = a*aC1*(v1 - v1*np.exp(-rotation*v2) + v2*(-1 + np.exp(-rotation*v1)))/(v1*v2) + a*(-aC2*tauC1*(-tauC1*(v1 - v2)*np.exp(rotation*(v1 + v2)) + (tauC1*v1 - 1)*np.exp(rotation*(v1 + 1/tauC1)) + (-tauC1*v2 + 1)*np.exp(rotation*(v2 + 1/tauC1)))*np.exp(t*(1/tauC3 + 1/tauC2))/((tauC1*v1 - 1)*(tauC1*v2 - 1)) - aC3*tauC2*(-tauC2*(v1 - v2)*np.exp(rotation*(v1 + v2)) + (tauC2*v1 - 1)*np.exp(rotation*(v1 + 1/tauC2)) + (-tauC2*v2 + 1)*np.exp(rotation*(v2 + 1/tauC2)))*np.exp(t*(1/tauC3 + 1/tauC1))/((tauC2*v1 - 1)*(tauC2*v2 - 1)) - aC4*tauC3*(-tauC3*(v1 - v2)*np.exp(rotation*(v1 + v2)) + (tauC3*v1 - 1)*np.exp(rotation*(v1 + 1/tauC3)) + (-tauC3*v2 + 1)*np.exp(rotation*(v2 + 1/tauC3)))*np.exp(t*(1/tauC2 + 1/tauC1))/((tauC3*v1 - 1)*(tauC3*v2 - 1)))*np.exp(-rotation*(v1 + v2) - t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + aC1 + aC2*tauC1*(np.exp(decay/tauC1) - 1)*np.exp((rotation - t)/tauC1)/decay + (aC3*tauC2*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2 + t/tauC3) + aC4*tauC3*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3 + t/tauC2))*np.exp(-t*(1/tauC3 + 1/tauC2))/decay

    result = np.where((rotation >= t) & (decay + rotation >= t) & (t > 0), term1, 
        np.where((rotation < t) & (decay + rotation >= t), term2, 
        np.where((rotation < t) & (decay + rotation < t), term3, 0)))

    return result

def PRF_Linear_Exp(t, decay, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, rotation):

    term1 = -(aC1*t*(2*rotation - t) + 2*aC2*tauC1*(rotation - rotation*np.exp(-t/tauC1) - t + tauC1 - tauC1*np.exp(-t/tauC1)) + 2*aC3*tauC2*(rotation - rotation*np.exp(-t/tauC2) - t + tauC2 - tauC2*np.exp(-t/tauC2)) + 2*aC4*tauC3*(rotation - rotation*np.exp(-t/tauC3) - t + tauC3 - tauC3*np.exp(-t/tauC3)))/rotation**2
    
    term2 = (-aC1*rotation**2*(decay - 3*tauC1)*(decay - 3*tauC2)*(decay - 3*tauC3)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1) + 3*rotation/decay) + aC2*tauC1*(decay - 3*tauC2)*(decay - 3*tauC3)*(2*decay*(rotation - tauC1*np.exp(rotation/tauC1) + tauC1)*np.exp(3*t/decay) + 3*rotation**2*np.exp(t/tauC1 + 3*rotation/decay) - 6*tauC1*(rotation + tauC1)*np.exp(3*t/decay) - 3*(rotation**2 - 2*tauC1**2)*np.exp(rotation/tauC1 + 3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC2)) + (decay - 3*tauC1)*(aC3*tauC2*(decay - 3*tauC3)*(2*decay*(rotation - tauC2*np.exp(rotation/tauC2) + tauC2)*np.exp(3*t/decay) + 3*rotation**2*np.exp(t/tauC2 + 3*rotation/decay) - 6*tauC2*(rotation + tauC2)*np.exp(3*t/decay) - 3*(rotation**2 - 2*tauC2**2)*np.exp(rotation/tauC2 + 3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC1)) + aC4*tauC3*(decay - 3*tauC2)*(2*decay*(rotation - tauC3*np.exp(rotation/tauC3) + tauC3)*np.exp(3*t/decay) + 3*rotation**2*np.exp(t/tauC3 + 3*rotation/decay) - 6*tauC3*(rotation + tauC3)*np.exp(3*t/decay) - 3*(rotation**2 - 2*tauC3**2)*np.exp(rotation/tauC3 + 3*t/decay))*np.exp(t*(1/tauC2 + 1/tauC1))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 3/decay))/(rotation**2*(decay - 3*tauC1)*(decay - 3*tauC2)*(decay - 3*tauC3))

    result = np.where((rotation >= t) & (t > 0), term1, np.where((rotation < t), term2, 0))

    return result

def PRF_Linear_Linear(t, decay, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, rotation):

    term1 = -(aC1*t*(2*rotation - t) + 2*aC2*tauC1*(rotation - rotation*np.exp(-t/tauC1) - t + tauC1 - tauC1*np.exp(-t/tauC1)) + 2*aC3*tauC2*(rotation - rotation*np.exp(-t/tauC2) - t + tauC2 - tauC2*np.exp(-t/tauC2)) + 2*aC4*tauC3*(rotation - rotation*np.exp(-t/tauC3) - t + tauC3 - tauC3*np.exp(-t/tauC3)))/rotation**2

    term2 = 2*(aC2*tauC1*(decay**2*(rotation - tauC1*np.exp(rotation/tauC1) + tauC1) - decay*rotation**2*np.exp(rotation/tauC1) + rotation**2*tauC1*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2)) + (aC3*tauC2*(decay**2*(rotation - tauC2*np.exp(rotation/tauC2) + tauC2) - decay*rotation**2*np.exp(rotation/tauC2) + rotation**2*tauC2*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t/tauC3) + aC4*tauC3*(decay**2*(rotation - tauC3*np.exp(rotation/tauC3) + tauC3) - decay*rotation**2*np.exp(rotation/tauC3) + rotation**2*tauC3*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t/tauC2))*np.exp(t/tauC1))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(decay**2*rotation**2)

    term3 = -(aC1*(decay + rotation - t)**2 + 2*(aC2*tauC1*(-decay**2*(rotation - tauC1*np.exp(rotation/tauC1) + tauC1) + decay*rotation**2*(np.exp(rotation/tauC1) - np.exp(t/tauC1)) + rotation**2*(tauC1*np.exp(rotation/tauC1) + (-rotation + t - tauC1)*np.exp(t/tauC1)))*np.exp(t*(2/tauC3 + 2/tauC2 + 1/tauC1)) + aC3*tauC2*(-decay**2*(rotation - tauC2*np.exp(rotation/tauC2) + tauC2) + decay*rotation**2*(np.exp(rotation/tauC2) - np.exp(t/tauC2)) + rotation**2*(tauC2*np.exp(rotation/tauC2) + (-rotation + t - tauC2)*np.exp(t/tauC2)))*np.exp(t*(2/tauC3 + 1/tauC2 + 2/tauC1)) + aC4*tauC3*(-decay**2*(rotation - tauC3*np.exp(rotation/tauC3) + tauC3) + decay*rotation**2*(np.exp(rotation/tauC3) - np.exp(t/tauC3)) + rotation**2*(tauC3*np.exp(rotation/tauC3) + (-rotation + t - tauC3)*np.exp(t/tauC3)))*np.exp(t*(1/tauC3 + 2/tauC2 + 2/tauC1)))*np.exp(-2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))/rotation**2)/decay**2

    result = np.where((rotation >= t) & (t > 0), term1, np.where((rotation < t) & (rotation + decay < t), term2, np.where((rotation < t) & (rotation + decay >= t),term3,0)))

    return result

def PRF_Linear_Constant(t, decay, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, rotation):

    term1 = -(aC1*t*(2*rotation - t) + 2*aC2*tauC1*(rotation - rotation*np.exp(-t/tauC1) - t + tauC1 - tauC1*np.exp(-t/tauC1)) + 2*aC3*tauC2*(rotation - rotation*np.exp(-t/tauC2) - t + tauC2 - tauC2*np.exp(-t/tauC2)) + 2*aC4*tauC3*(rotation - rotation*np.exp(-t/tauC3) - t + tauC3 - tauC3*np.exp(-t/tauC3)))/rotation**2

    term2 = (-aC2*tauC1*(-2*decay*(rotation - tauC1*np.exp(rotation/tauC1) + tauC1) - rotation**2*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t*(2/tauC3 + 2/tauC2 + 1/tauC1)) - (aC3*tauC2*(-2*decay*(rotation - tauC2*np.exp(rotation/tauC2) + tauC2) - rotation**2*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t/tauC3) + aC4*tauC3*(-2*decay*(rotation - tauC3*np.exp(rotation/tauC3) + tauC3) - rotation**2*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t/tauC2))*np.exp(t*(1/tauC3 + 1/tauC2 + 2/tauC1)))*np.exp(-2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(decay*rotation**2)

    term3 = (-aC1*rotation**2*(decay + rotation - t)*np.exp(2*t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + aC2*tauC1*(2*decay*(rotation - tauC1*np.exp(rotation/tauC1) + tauC1) - rotation**2*(np.exp(rotation/tauC1) - np.exp(t/tauC1)))*np.exp(t*(2/tauC3 + 2/tauC2 + 1/tauC1)) + (aC3*tauC2*(2*decay*(rotation - tauC2*np.exp(rotation/tauC2) + tauC2) - rotation**2*(np.exp(rotation/tauC2) - np.exp(t/tauC2)))*np.exp(t/tauC3) + aC4*tauC3*(2*decay*(rotation - tauC3*np.exp(rotation/tauC3) + tauC3) - rotation**2*(np.exp(rotation/tauC3) - np.exp(t/tauC3)))*np.exp(t/tauC2))*np.exp(t*(1/tauC3 + 1/tauC2 + 2/tauC1)))*np.exp(-2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(decay*rotation**2)
    
    result = np.where((rotation >= t) & (t > 0), term1, np.where((rotation < t) & (rotation + decay < t), term2, np.where((rotation < t) & (rotation + decay >= t),term3,0)))

    return result

def PRF_Constant_Exp(t, decay, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, rotation):

    term1 = -(aC1*t + aC2*tauC1 - aC2*tauC1*np.exp(-t/tauC1) + aC3*tauC2 - aC3*tauC2*np.exp(-t/tauC2) + aC4*tauC3 - aC4*tauC3*np.exp(-t/tauC3))/rotation

    term2 = (-aC1*rotation*(decay - 3*tauC1)*(decay - 3*tauC2)*(decay - 3*tauC3)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1) + 3*rotation/decay) + aC2*tauC1*(-decay + 3*tauC2)*(decay - 3*tauC3)*(decay*(np.exp(rotation/tauC1) - 1)*np.exp(3*t/decay) - 3*rotation*np.exp(t/tauC1 + 3*rotation/decay) + 3*tauC1*np.exp(3*t/decay) + 3*(rotation - tauC1)*np.exp(rotation/tauC1 + 3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC2)) - (decay - 3*tauC1)*(aC3*tauC2*(decay - 3*tauC3)*(decay*(np.exp(rotation/tauC2) - 1)*np.exp(3*t/decay) - 3*rotation*np.exp(t/tauC2 + 3*rotation/decay) + 3*tauC2*np.exp(3*t/decay) + 3*(rotation - tauC2)*np.exp(rotation/tauC2 + 3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC1)) - aC4*tauC3*(decay - 3*tauC2)*(-decay*(np.exp(rotation/tauC3) - 1)*np.exp(3*t/decay) + 3*rotation*np.exp(t/tauC3 + 3*rotation/decay) - 3*tauC3*np.exp(3*t/decay) - 3*(rotation - tauC3)*np.exp(rotation/tauC3 + 3*t/decay))*np.exp(t*(1/tauC2 + 1/tauC1))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 3/decay))/(rotation*(decay - 3*tauC1)*(decay - 3*tauC2)*(decay - 3*tauC3))

    result = np.where((t > 0) & (t <= rotation), term1, np.where((t > rotation), term2, 0)) 

    return result

def PRF_Constant_Linear(t, decay, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, rotation):

    term1 = -(aC1*t + aC2*tauC1 - aC2*tauC1*np.exp(-t/tauC1) + aC3*tauC2 - aC3*tauC2*np.exp(-t/tauC2) + aC4*tauC3 - aC4*tauC3*np.exp(-t/tauC3))/rotation

    term2 = -(aC1*rotation*(decay + rotation - t)**2 + aC2*decay**2*tauC1*np.exp((rotation - t)/tauC1) - aC2*decay**2*tauC1*np.exp(-t/tauC1) + 2*aC2*decay*rotation*tauC1*np.exp((rotation - t)/tauC1) - 2*aC2*decay*rotation*tauC1 - 2*aC2*rotation**2*tauC1 + 2*aC2*rotation*t*tauC1 + 2*aC2*rotation*tauC1**2*np.exp((rotation - t)/tauC1) - 2*aC2*rotation*tauC1**2 + aC3*decay**2*tauC2*np.exp((rotation - t)/tauC2) - aC3*decay**2*tauC2*np.exp(-t/tauC2) + 2*aC3*decay*rotation*tauC2*np.exp((rotation - t)/tauC2) - 2*aC3*decay*rotation*tauC2 - 2*aC3*rotation**2*tauC2 + 2*aC3*rotation*t*tauC2 + 2*aC3*rotation*tauC2**2*np.exp((rotation - t)/tauC2) - 2*aC3*rotation*tauC2**2 + aC4*decay**2*tauC3*np.exp((rotation - t)/tauC3) - aC4*decay**2*tauC3*np.exp(-t/tauC3) + 2*aC4*decay*rotation*tauC3*np.exp((rotation - t)/tauC3) - 2*aC4*decay*rotation*tauC3 - 2*aC4*rotation**2*tauC3 + 2*aC4*rotation*t*tauC3 + 2*aC4*rotation*tauC3**2*np.exp((rotation - t)/tauC3) - 2*aC4*rotation*tauC3**2)/(decay**2*rotation)

    term3 = (-aC2*tauC1*(decay**2*(np.exp(rotation/tauC1) - 1) + 2*decay*rotation*np.exp(rotation/tauC1) - 2*rotation*tauC1*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t*(2/tauC3 + 2/tauC2 + 1/tauC1)) + (aC3*tauC2*(-decay**2*(np.exp(rotation/tauC2) - 1) - 2*decay*rotation*np.exp(rotation/tauC2) + 2*rotation*tauC2*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t/tauC3) + aC4*tauC3*(-decay**2*(np.exp(rotation/tauC3) - 1) - 2*decay*rotation*np.exp(rotation/tauC3) + 2*rotation*tauC3*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t/tauC2))*np.exp(t*(1/tauC3 + 1/tauC2 + 2/tauC1)))*np.exp(-2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(decay**2*rotation)

    result = np.where((rotation >= t) & (t > 0), term1, np.where((rotation < t) & (rotation + decay < t), term3, np.where((rotation < t) & (rotation + decay >= t), term2, 0)))

    return result

def PRF_Constant_Constant(t, decay, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, rotation):

    term1 = -(aC1*t + aC2*tauC1 - aC2*tauC1*np.exp(-t/tauC1) + aC3*tauC2 - aC3*tauC2*np.exp(-t/tauC2) + aC4*tauC3 - aC4*tauC3*np.exp(-t/tauC3))/rotation

    term2 = (-aC2*tauC1*(decay*(np.exp(rotation/tauC1) - 1) - rotation*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2)) - (aC3*tauC2*(decay*(np.exp(rotation/tauC2) - 1) - rotation*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t/tauC3) + aC4*tauC3*(decay*(np.exp(rotation/tauC3) - 1) - rotation*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t/tauC2))*np.exp(t/tauC1))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(decay*rotation)

    term3 = -(aC1*rotation*(decay + rotation - t) + aC2*tauC1*(decay*(np.exp(rotation/tauC1) - 1) + rotation*(np.exp(rotation/tauC1) - np.exp(t/tauC1)))*np.exp(-t/tauC1) + (aC3*tauC2*(decay*(np.exp(rotation/tauC2) - 1) + rotation*(np.exp(rotation/tauC2) - np.exp(t/tauC2)))*np.exp(t/tauC3) + aC4*tauC3*(decay*(np.exp(rotation/tauC3) - 1) + rotation*(np.exp(rotation/tauC3) - np.exp(t/tauC3)))*np.exp(t/tauC2))*np.exp(-t*(1/tauC3 + 1/tauC2)))/(decay*rotation)
    
    result = np.where((rotation >= t) & (t > 0), term1, np.where((rotation < t) & (rotation + decay < t), term2, np.where((rotation < t) & (rotation + decay >= t), term3, 0)))

    return result

def PRF_Constant_Impulse(t, decay, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, rotation):

    term1 = aC1 * np.where(rotation < t, -1, np.where((rotation >= t) & (t > 0), -t / rotation, 0))
    
    term2 = aC2 * np.where(
        rotation < t, 
       -tauC1*(np.exp(rotation/tauC1) - 1)*np.exp(-t/tauC1)/rotation, 
        np.where((rotation >= t) & (t > 0), tauC1*(-1 + np.exp(-t/tauC1))/rotation, 0)
    )
    
    term3 = aC3 * np.where(
        rotation < t, 
        -tauC2*(np.exp(rotation/tauC2) - 1)*np.exp(-t/tauC2)/rotation, 
        np.where((rotation >= t) & (t > 0),tauC2*(-1 + np.exp(-t/tauC2))/rotation, 0)
    )
    
    term4 = aC4 * np.where(
        rotation < t, 
       -tauC3*(np.exp(rotation/tauC3) - 1)*np.exp(-t/tauC3)/rotation, 
        np.where((rotation >= t) & (t > 0), tauC3*(-1 + np.exp(-t/tauC3))/rotation, 0)
    )
    
    unit_step_terms = UnitStep(decay + rotation, -decay - rotation + t) * (aC1 + aC2*np.exp((decay + rotation - t)/tauC1) + aC3*np.exp((decay + rotation - t)/tauC2) + aC4*np.exp((decay + rotation - t)/tauC3))
    
    return term1 + term2 + term3 + term4 + unit_step_terms

def PRF_Trian_Exp(t, decay, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, p, rotation):

    term1 = (-aC1*t**2 + 2*aC2*tauC1*(-t + tauC1 - tauC1*np.exp(-t/tauC1)) + 2*aC3*tauC2*(-t + tauC2 - tauC2*np.exp(-t/tauC2)) + 2*aC4*tauC3*(-t + tauC3 - tauC3*np.exp(-t/tauC3)))/(p*rotation)
    term2 = -(aC1*(p*rotation + t*(-2*rotation + t)) + 2*(aC2*tauC1*(p*(-rotation + t - tauC1)*np.exp(t/tauC1) + rotation*tauC1*np.exp(p/tauC1) + tauC1*(p - rotation))*np.exp(t*(2/tauC3 + 2/tauC2 + 1/tauC1)) + aC3*tauC2*(p*(-rotation + t - tauC2)*np.exp(t/tauC2) + rotation*tauC2*np.exp(p/tauC2) + tauC2*(p - rotation))*np.exp(t*(2/tauC3 + 1/tauC2 + 2/tauC1)) + aC4*tauC3*(p*(-rotation + t - tauC3)*np.exp(t/tauC3) + rotation*tauC3*np.exp(p/tauC3) + tauC3*(p - rotation))*np.exp(t*(1/tauC3 + 2/tauC2 + 2/tauC1)))*np.exp(-2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))/p)/(rotation*(p - rotation))
    term3 = (-aC1*rotation*(decay - 3*tauC1)*(decay - 3*tauC2)*(decay - 3*tauC3)*(p*np.exp(3*rotation/decay) + (-p + rotation)*np.exp(3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + aC2*tauC1*(-decay + 3*tauC2)*(decay - 3*tauC3)*(2*decay*(tauC1 + (rotation - tauC1)*np.exp(rotation/tauC1))*np.exp(3*t/decay) - 3*p*rotation*np.exp(t/tauC1 + 3*rotation/decay) - 6*tauC1**2*np.exp(3*t/decay) + (3*p*rotation + 6*tauC1*(-rotation + tauC1))*np.exp(rotation/tauC1 + 3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC2)) - (decay - 3*tauC1)*(aC3*tauC2*(decay - 3*tauC3)*(2*decay*(tauC2 + (rotation - tauC2)*np.exp(rotation/tauC2))*np.exp(3*t/decay) - 3*p*rotation*np.exp(t/tauC2 + 3*rotation/decay) - 6*tauC2**2*np.exp(3*t/decay) + (3*p*rotation + 6*tauC2*(-rotation + tauC2))*np.exp(rotation/tauC2 + 3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC1)) + aC4*tauC3*(decay - 3*tauC2)*(2*decay*(tauC3 + (rotation - tauC3)*np.exp(rotation/tauC3))*np.exp(3*t/decay) - 3*p*rotation*np.exp(t/tauC3 + 3*rotation/decay) - 6*tauC3**2*np.exp(3*t/decay) + (3*p*rotation + 6*tauC3*(-rotation + tauC3))*np.exp(rotation/tauC3 + 3*t/decay))*np.exp(t*(1/tauC2 + 1/tauC1))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 3/decay))/(p*rotation*(decay - 3*tauC1)*(decay - 3*tauC2)*(decay - 3*tauC3))
    term4 = (aC1*p*rotation*(decay - 3*tauC1)*(decay - 3*tauC2)*(decay - 3*tauC3)*(-p + rotation)*np.exp(2*t*(1/tauC3 + 1/tauC2 + 1/tauC1) + 3*rotation/decay) + aC2*tauC1*(decay - 3*tauC2)*(decay - 3*tauC3)*(-3*p*rotation*(-p + rotation)*np.exp(t/tauC1 + 3*rotation/decay) + p*(-3*p*rotation + 3*rotation**2 + 2*tauC1*(decay - 3*tauC1))*np.exp(rotation/tauC1 + 3*t/decay) - 2*rotation*tauC1*(decay - 3*tauC1)*np.exp(p/tauC1 + 3*t/decay) - 2*tauC1*(decay - 3*tauC1)*(p - rotation)*np.exp(3*t/decay))*np.exp(t*(2/tauC3 + 2/tauC2 + 1/tauC1)) + (decay - 3*tauC1)*(aC3*tauC2*(decay - 3*tauC3)*(-3*p*rotation*(-p + rotation)*np.exp(t/tauC2 + 3*rotation/decay) + p*(-3*p*rotation + 3*rotation**2 + 2*tauC2*(decay - 3*tauC2))*np.exp(rotation/tauC2 + 3*t/decay) - 2*rotation*tauC2*(decay - 3*tauC2)*np.exp(p/tauC2 + 3*t/decay) - 2*tauC2*(decay - 3*tauC2)*(p - rotation)*np.exp(3*t/decay))*np.exp(t*(2/tauC3 + 1/tauC2 + 2/tauC1)) + aC4*tauC3*(decay - 3*tauC2)*(-3*p*rotation*(-p + rotation)*np.exp(t/tauC3 + 3*rotation/decay) + p*(-3*p*rotation + 3*rotation**2 + 2*tauC3*(decay - 3*tauC3))*np.exp(rotation/tauC3 + 3*t/decay) - 2*rotation*tauC3*(decay - 3*tauC3)*np.exp(p/tauC3 + 3*t/decay) - 2*tauC3*(decay - 3*tauC3)*(p - rotation)*np.exp(3*t/decay))*np.exp(t*(1/tauC3 + 2/tauC2 + 2/tauC1))))*np.exp(-t*(2/tauC3 + 2/tauC2 + 2/tauC1 + 3/decay))/(p*rotation*(decay - 3*tauC1)*(decay - 3*tauC2)*(decay - 3*tauC3)*(p - rotation))

    # (p == rotation & rotation == t) ||(t > 0 & rotation >= t & (p >= rotation | p >= t))
    condition1 = ((p == rotation) & (rotation == t)) | ((t > 0) & (rotation >= t) & ((p >= rotation) | (p >= t)))

    # p < rotation & p < t & rotation >= t
    condition2 = (p < rotation) & (p < t) & (rotation >= t)

    # rotation < t & p >= rotation
    condition3 = (rotation < t) & (p >= rotation)

    # p < rotation & p < t & rotation < t
    condition4 = (p < rotation) & (p < t) & (rotation < t)

    
    result = np.where(condition1, term1,
                    np.where(condition2, term2,
                            np.where(condition3, term3,
                                        np.where(condition4, term4, 0
                                                ))))

    return result

def PRF_Trian_Linear(t, decay, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, p, rotation):

    term1 = (-aC1*t**2 + 2*aC2*tauC1*(-t + tauC1 - tauC1*np.exp(-t/tauC1)) + 2*aC3*tauC2*(-t + tauC2 - tauC2*np.exp(-t/tauC2)) + 2*aC4*tauC3*(-t + tauC3 - tauC3*np.exp(-t/tauC3)))/(p*rotation)

    term2 = -(aC1*(p*rotation + t*(-2*rotation + t)) + 2*(aC2*tauC1*(p*(-rotation + t - tauC1)*np.exp(t/tauC1) + rotation*tauC1*np.exp(p/tauC1) + tauC1*(p - rotation))*np.exp(t*(2/tauC3 + 2/tauC2 + 1/tauC1)) + aC3*tauC2*(p*(-rotation + t - tauC2)*np.exp(t/tauC2) + rotation*tauC2*np.exp(p/tauC2) + tauC2*(p - rotation))*np.exp(t*(2/tauC3 + 1/tauC2 + 2/tauC1)) + aC4*tauC3*(p*(-rotation + t - tauC3)*np.exp(t/tauC3) + rotation*tauC3*np.exp(p/tauC3) + tauC3*(p - rotation))*np.exp(t*(1/tauC3 + 2/tauC2 + 2/tauC1)))*np.exp(-2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))/p)/(rotation*(p - rotation))

    term3 = (aC1*(p - rotation) - 2*(aC2*tauC1*(decay**2*(tauC1 + (rotation - tauC1)*np.exp(rotation/tauC1)) + decay*p*rotation*np.exp(rotation/tauC1) - p*rotation*tauC1*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2)) + (aC3*tauC2*(decay**2*(tauC2 + (rotation - tauC2)*np.exp(rotation/tauC2)) + decay*p*rotation*np.exp(rotation/tauC2) - p*rotation*tauC2*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t/tauC3) + aC4*tauC3*(decay**2*(tauC3 + (rotation - tauC3)*np.exp(rotation/tauC3)) + decay*p*rotation*np.exp(rotation/tauC3) - p*rotation*tauC3*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t/tauC2))*np.exp(t/tauC1))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(decay**2*rotation))/p

    term4 = -(aC1*(decay**2*rotation + 2*decay*p*(rotation - t) + p*(rotation - t)**2) + 2*(aC2*tauC1*(decay**2*(tauC1 + (rotation - tauC1)*np.exp(rotation/tauC1)) + decay*p*rotation*(np.exp(rotation/tauC1) - np.exp(t/tauC1)) + p*rotation*(tauC1*np.exp(rotation/tauC1) + (-rotation + t - tauC1)*np.exp(t/tauC1)))*np.exp(t*(2/tauC3 + 2/tauC2 + 1/tauC1)) + aC3*tauC2*(decay**2*(tauC2 + (rotation - tauC2)*np.exp(rotation/tauC2)) + decay*p*rotation*(np.exp(rotation/tauC2) - np.exp(t/tauC2)) + p*rotation*(tauC2*np.exp(rotation/tauC2) + (-rotation + t - tauC2)*np.exp(t/tauC2)))*np.exp(t*(2/tauC3 + 1/tauC2 + 2/tauC1)) - aC4*tauC3*(-decay**2*(tauC3 + (rotation - tauC3)*np.exp(rotation/tauC3)) - decay*p*rotation*(np.exp(rotation/tauC3) - np.exp(t/tauC3)) + p*rotation*(-tauC3*np.exp(rotation/tauC3) + (rotation - t + tauC3)*np.exp(t/tauC3)))*np.exp(t*(1/tauC3 + 2/tauC2 + 2/tauC1)))*np.exp(-2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))/rotation)/(decay**2*p)
    
    term5 = (-2*aC2*tauC1*(decay**2*tauC1*(-p*np.exp(rotation/tauC1) + p + rotation*(np.exp(p/tauC1) - 1)) - decay*p*rotation*(-p + rotation)*np.exp(rotation/tauC1) + p*rotation*tauC1*(-p + rotation)*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t*(2/tauC3 + 2/tauC2 + 1/tauC1)) - 2*aC3*tauC2*(decay**2*tauC2*(-p*np.exp(rotation/tauC2) + p + rotation*(np.exp(p/tauC2) - 1)) - decay*p*rotation*(-p + rotation)*np.exp(rotation/tauC2) + p*rotation*tauC2*(-p + rotation)*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t*(2/tauC3 + 1/tauC2 + 2/tauC1)) - 2*aC4*tauC3*(decay**2*tauC3*(-p*np.exp(rotation/tauC3) + p + rotation*(np.exp(p/tauC3) - 1)) - decay*p*rotation*(-p + rotation)*np.exp(rotation/tauC3) + p*rotation*tauC3*(-p + rotation)*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t*(1/tauC3 + 2/tauC2 + 2/tauC1)))*np.exp(-2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(decay**2*p*rotation*(p - rotation))

    term6 = -(aC1*(decay + rotation - t)**2 + 2*(aC2*tauC1*(decay**2*tauC1*(-p*np.exp(rotation/tauC1) + p + rotation*(np.exp(p/tauC1) - 1)) - decay*p*rotation*(-p + rotation)*(np.exp(rotation/tauC1) - np.exp(t/tauC1)) + p*rotation*(-p + rotation)*(-tauC1*np.exp(rotation/tauC1) + (rotation - t + tauC1)*np.exp(t/tauC1)))*np.exp(t*(3/tauC3 + 3/tauC2 + 1/tauC1)) + aC3*tauC2*(decay**2*tauC2*(-p*np.exp(rotation/tauC2) + p + rotation*(np.exp(p/tauC2) - 1)) + decay*p*rotation*(-p + rotation)*(-np.exp(rotation/tauC2) + np.exp(t/tauC2)) + p*rotation*(-p + rotation)*(-tauC2*np.exp(rotation/tauC2) + (rotation - t + tauC2)*np.exp(t/tauC2)))*np.exp(t*(3/tauC3 + 2/tauC2 + 2/tauC1)) + aC4*tauC3*(decay**2*tauC3*(-p*np.exp(rotation/tauC3) + p + rotation*(np.exp(p/tauC3) - 1)) + decay*p*rotation*(-p + rotation)*(-np.exp(rotation/tauC3) + np.exp(t/tauC3)) + p*rotation*(-p + rotation)*(-tauC3*np.exp(rotation/tauC3) + (rotation - t + tauC3)*np.exp(t/tauC3)))*np.exp(t*(2/tauC3 + 3/tauC2 + 2/tauC1)))*np.exp(-t*(3/tauC3 + 3/tauC2 + 2/tauC1))/(p*rotation*(p - rotation)))/decay**2
    

    condition1 = (rotation >= t) & (t > 0) & (decay + rotation >= t) & ((p >= rotation) | (p >= t))

    condition2 = (rotation >= t) & (p < rotation) & (p < t) & (decay + rotation >= t)

    condition3 = (p >= rotation) & (rotation < t) & (decay + rotation < t)

    condition4 = (p >= rotation) & (rotation < t) & (decay + rotation >= t)

    condition5 = (p < rotation) & (p < t) & (rotation < t) & (decay + rotation < t)

    condition6 = (p < rotation) & (p < t) & (rotation < t) & (decay + rotation >= t)


    
    result = np.where(condition1, term1,
                    np.where(condition2, term2,
                            np.where(condition3, term3,
                                        np.where(condition4, term4,
                                                 np.where(condition5, term5,
                                                          np.where(condition6, term6, 0
                                                ))))))

    return result

def PRF_Trian_Constant(t, decay, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, p, rotation):

    term1 = (-aC1*t**2 + 2*aC2*tauC1*(-t + tauC1 - tauC1*np.exp(-t/tauC1)) + 2*aC3*tauC2*(-t + tauC2 - tauC2*np.exp(-t/tauC2)) + 2*aC4*tauC3*(-t + tauC3 - tauC3*np.exp(-t/tauC3)))/(p*rotation)

    term2 = (aC1*decay*rotation*(p - rotation)*np.exp(2*t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + aC2*tauC1*(-2*decay*(tauC1 + (rotation - tauC1)*np.exp(rotation/tauC1)) + p*rotation*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t*(2/tauC3 + 2/tauC2 + 1/tauC1)) + (aC3*tauC2*(-2*decay*(tauC2 + (rotation - tauC2)*np.exp(rotation/tauC2)) + p*rotation*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t/tauC3) + aC4*tauC3*(-2*decay*(tauC3 + (rotation - tauC3)*np.exp(rotation/tauC3)) + p*rotation*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t/tauC2))*np.exp(t*(1/tauC3 + 1/tauC2 + 2/tauC1)))*np.exp(-2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(decay*p*rotation)

    term3 = (-aC1*rotation*(decay*rotation + p*(rotation - t))*np.exp(2*t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + aC2*tauC1*(-2*decay*(tauC1 + (rotation - tauC1)*np.exp(rotation/tauC1)) + p*rotation*(-np.exp(rotation/tauC1) + np.exp(t/tauC1)))*np.exp(t*(2/tauC3 + 2/tauC2 + 1/tauC1)) + (aC3*tauC2*(-2*decay*(tauC2 + (rotation - tauC2)*np.exp(rotation/tauC2)) + p*rotation*(-np.exp(rotation/tauC2) + np.exp(t/tauC2)))*np.exp(t/tauC3) + aC4*tauC3*(-2*decay*(tauC3 + (rotation - tauC3)*np.exp(rotation/tauC3)) + p*rotation*(-np.exp(rotation/tauC3) + np.exp(t/tauC3)))*np.exp(t/tauC2))*np.exp(t*(1/tauC3 + 1/tauC2 + 2/tauC1)))*np.exp(-2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(decay*p*rotation)

    term4 = -(aC1*(p*rotation + t*(-2*rotation + t)) + 2*(aC2*tauC1*(p*(-rotation + t - tauC1)*np.exp(t/tauC1) + rotation*tauC1*np.exp(p/tauC1) + tauC1*(p - rotation))*np.exp(t*(2/tauC3 + 2/tauC2 + 1/tauC1)) + aC3*tauC2*(p*(-rotation + t - tauC2)*np.exp(t/tauC2) + rotation*tauC2*np.exp(p/tauC2) + tauC2*(p - rotation))*np.exp(t*(2/tauC3 + 1/tauC2 + 2/tauC1)) + aC4*tauC3*(p*(-rotation + t - tauC3)*np.exp(t/tauC3) + rotation*tauC3*np.exp(p/tauC3) + tauC3*(p - rotation))*np.exp(t*(1/tauC3 + 2/tauC2 + 2/tauC1)))*np.exp(-2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))/p)/(rotation*(p - rotation))

    term5 = (-aC2*tauC1*(2*decay*rotation*tauC1*np.exp(p/tauC1) + 2*decay*tauC1*(p - rotation) + p*rotation*(-p + rotation)*np.exp((decay + rotation)/tauC1) + p*(-2*decay*tauC1 + p*rotation - rotation**2)*np.exp(rotation/tauC1))*np.exp(t*(3/tauC3 + 3/tauC2 + 1/tauC1)) + aC3*tauC2*(-2*decay*rotation*tauC2*np.exp(p/tauC2) + 2*decay*tauC2*(-p + rotation) - p*rotation*(-p + rotation)*np.exp((decay + rotation)/tauC2) + p*(2*decay*tauC2 - p*rotation + rotation**2)*np.exp(rotation/tauC2))*np.exp(t*(3/tauC3 + 2/tauC2 + 2/tauC1)) + aC4*tauC3*(-2*decay*rotation*tauC3*np.exp(p/tauC3) + 2*decay*tauC3*(-p + rotation) - p*rotation*(-p + rotation)*np.exp((decay + rotation)/tauC3) + p*(2*decay*tauC3 - p*rotation + rotation**2)*np.exp(rotation/tauC3))*np.exp(t*(2/tauC3 + 3/tauC2 + 2/tauC1)))*np.exp(-t*(3/tauC3 + 3/tauC2 + 2/tauC1))/(decay*p*rotation*(p - rotation))
    
    term6 = -(aC1*p*rotation*(p - rotation)*(decay + rotation - t) - aC2*tauC1*(-2*decay*rotation*tauC1*np.exp(p/tauC1) + 2*decay*tauC1*(-p + rotation) + p*rotation*(p - rotation)*np.exp(t/tauC1) + p*(2*decay*tauC1 - p*rotation + rotation**2)*np.exp(rotation/tauC1))*np.exp(-t/tauC1) - 2*aC3*decay*p*tauC2**2*np.exp((rotation - t)/tauC2) + 2*aC3*decay*p*tauC2**2*np.exp(-t/tauC2) + 2*aC3*decay*rotation*tauC2**2*np.exp((p - t)/tauC2) - 2*aC3*decay*rotation*tauC2**2*np.exp(-t/tauC2) + aC3*p**2*rotation*tauC2*np.exp((rotation - t)/tauC2) - aC3*p**2*rotation*tauC2 - aC3*p*rotation**2*tauC2*np.exp((rotation - t)/tauC2) + aC3*p*rotation**2*tauC2 - 2*aC4*decay*p*tauC3**2*np.exp((rotation - t)/tauC3) + 2*aC4*decay*p*tauC3**2*np.exp(-t/tauC3) + 2*aC4*decay*rotation*tauC3**2*np.exp((p - t)/tauC3) - 2*aC4*decay*rotation*tauC3**2*np.exp(-t/tauC3) + aC4*p**2*rotation*tauC3*np.exp((rotation - t)/tauC3) - aC4*p**2*rotation*tauC3 - aC4*p*rotation**2*tauC3*np.exp((rotation - t)/tauC3) + aC4*p*rotation**2*tauC3)/(decay*p*rotation*(p - rotation))

    condition1 = (rotation >= t) & (t > 0) & (decay + rotation >= t) & ((p >= rotation) | (p >= t))

    condition2 = (p >= rotation) & (rotation < t) & (decay + rotation < t)

    condition3 = (p >= rotation) & (rotation < t) & (decay + rotation >= t)

    condition4 = (rotation >= t) & (p < rotation) & (p < t) & (decay + rotation >= t)

    condition5 = (p < rotation) & (p < t) & (rotation < t) & (decay + rotation < t)

    condition6 = (p < rotation) & (p < t) & (rotation < t) & (decay + rotation >= t)


    
    result = np.where(condition1, term1,
                    np.where(condition2, term2,
                            np.where(condition3, term3,
                                        np.where(condition4, term4,
                                                 np.where(condition5, term5,
                                                          np.where(condition6, term6, 0
                                                ))))))

    return result

def PRF_Trian_Impulse(t, decay, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, p, rotation):

    condition1 = (p < rotation) & (rotation < t)
    condition2 = (p < t) & (p >= rotation)
    condition3 = (t != 0) & ((p >= rotation) | (rotation >= t)) & (p >= t)
    condition4 = (p < rotation) & (p < t) & (rotation >= t)

    term1 = np.where(condition1, -1, 0)
    term2 = np.where(condition2, -p / rotation, 0)
    term3 = np.where(condition3, -t**2 / (p * rotation), 0)
    term4 = np.where(condition4, -((p * rotation - 2 * rotation * t + t**2) / (p * rotation - rotation**2)), 0)

    result = aC1 * (term1 + term2 + term3 + term4)

    term1 = np.where(condition1, 2*tauC1**2*(p*(np.exp(rotation/tauC1) - 1) - rotation*np.exp(p/tauC1) + rotation)*np.exp(-t/tauC1)/(p*rotation*(p - rotation)), 0)
    term2 = np.where(condition2, 2*tauC1*(-tauC1 + (-p + tauC1)*np.exp(p/tauC1))*np.exp(-t/tauC1)/(p*rotation), 0)
    term3 = np.where(condition3, -2*tauC1*(t + tauC1*(-1 + np.exp(-t/tauC1)))/(p*rotation), 0)
    term4 = np.where(condition4, 2*tauC1*(p*(rotation - t + tauC1)*np.exp(t/tauC1) - rotation*tauC1*np.exp(p/tauC1) + tauC1*(-p + rotation))*np.exp(-t/tauC1)/(p*rotation*(p - rotation)), 0)

    result += aC2 * (term1 + term2 + term3 + term4)


    term1 = np.where(condition1, 2*tauC2**2*(p*(np.exp(rotation/tauC2) - 1) - rotation*np.exp(p/tauC2) + rotation)*np.exp(-t/tauC2)/(p*rotation*(p - rotation)), 0)
    term2 = np.where(condition2, 2*tauC2*(-tauC2 + (-p + tauC2)*np.exp(p/tauC2))*np.exp(-t/tauC2)/(p*rotation), 0)
    term3 = np.where(condition3, -2*tauC2*(t + tauC2*(-1 + np.exp(-t/tauC2)))/(p*rotation), 0)
    term4 = np.where(condition4, 2*tauC2*(p*(rotation - t + tauC2)*np.exp(t/tauC2) - rotation*tauC2*np.exp(p/tauC2) + tauC2*(-p + rotation))*np.exp(-t/tauC2)/(p*rotation*(p - rotation)), 0)

    result += aC3 * (term1 + term2 + term3 + term4)


    term1 = np.where(condition1, 2*tauC3**2*(p*(np.exp(rotation/tauC3) - 1) - rotation*np.exp(p/tauC3) + rotation)*np.exp(-t/tauC3)/(p*rotation*(p - rotation)), 0)
    term2 = np.where(condition2, 2*tauC3*(-tauC3 + (-p + tauC3)*np.exp(p/tauC3))*np.exp(-t/tauC3)/(p*rotation), 0)
    term3 = np.where(condition3, -2*tauC3*(t + tauC3*(-1 + np.exp(-t/tauC3)))/(p*rotation), 0)
    term4 = np.where(condition4, 2*tauC3*(p*(rotation - t + tauC3)*np.exp(t/tauC3) - rotation*tauC3*np.exp(p/tauC3) + tauC3*(-p + rotation))*np.exp(-t/tauC3)/(p*rotation*(p - rotation)), 0)

    result += aC4 * (term1 + term2 + term3 + term4)

    result += aC1*UnitStep(decay + rotation, -decay - rotation + t) + aC2*UnitStep(decay + rotation, -decay - rotation + t)*np.exp((decay + rotation - t)/tauC1) + aC3*UnitStep(decay + rotation, -decay - rotation + t)*np.exp((decay + rotation - t)/tauC2) + aC4*UnitStep(decay + rotation, -decay - rotation + t)*np.exp((decay + rotation - t)/tauC3)

    return result



# AGWP
def AGWPCO2(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2):
    term1 = aC1 * t
    term2 = aC2 * (tauC1 - np.exp(-t / tauC1) * tauC1)
    term3 = aC3 * (tauC2 - np.exp(-t / tauC2) * tauC2)
    term4 = aC4 * (tauC3 - np.exp(-t / tauC3) * tauC3)

    result = AACO2 * (term1 + term2 + term3 + term4) 

    return result

def AGWPNonCO2(t, tauNonCO2, AANonCO2):
    return AANonCO2 * (tauNonCO2 - np.exp(-t / tauNonCO2) * tauNonCO2)

def AGWPPRF_Exp(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, decay, p, rotation):
 
    term1 = (-1 + np.exp(-3 * t / decay)) * aC1 * decay
    term2 = 3 * aC1 * t
    term3 = 3 * (1 - np.exp(-3 * t / decay)) * aC2 * tauC1
    term4 = -(9 * (np.exp(-3 * t / decay) - np.exp(-t / tauC1)) * aC2 * tauC1**2) / (decay - 3 * tauC1)
    term5 = 3 * (1 - np.exp(-3 * t / decay)) * aC3 * tauC2
    term6 = -(9 * (np.exp(-3 * t / decay) - np.exp(-t / tauC2)) * aC3 * tauC2**2) / (decay - 3 * tauC2)
    term7 = 3 * (1 - np.exp(-3 * t / decay)) * aC4 * tauC3
    term8 = -(9 * (np.exp(-3 * t / decay) - np.exp(-t / tauC3)) * aC4 * tauC3**2) / (decay - 3 * tauC3)

    sub_term = aC1 * t + aC2 * (tauC1 - np.exp(-t / tauC1) * tauC1) + aC3 * (tauC2 - np.exp(-t / tauC2) * tauC2) + aC4 * (tauC3 - np.exp(-t / tauC3) * tauC3)

    result = (1 / 3) * (term1 + term2 + term3 + term4 + term5 + term6 + term7 + term8 - 3 * sub_term)
    result *= AACO2

    return result

def AGWPPRF_Linear(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, decay, p, rotation):

    term1_1 = aC1 * (t - decay / 3)
    term1_2 = (aC2 * tauC1 * np.exp(-t / tauC1) * (decay**2 * np.exp(t / tauC1) - 2 * tauC1**2 * (np.exp(decay / tauC1) - 1) + 2 * decay * tauC1)) / decay**2
    term1_3_num1 = aC3 * tauC2 * np.exp(t / tauC3) * (decay**2 * np.exp(t / tauC2) - 2 * tauC2**2 * (np.exp(decay / tauC2) - 1) + 2 * decay * tauC2)
    term1_3_num2 = aC4 * tauC3 * np.exp(t / tauC2) * (decay**2 * np.exp(t / tauC3) - 2 * tauC3**2 * (np.exp(decay / tauC3) - 1) + 2 * decay * tauC3)
    term1_3 = np.exp(-t * (1/tauC2 + 1/tauC3)) * (term1_3_num1 + term1_3_num2) / decay**2
    term1 = term1_1 + term1_2 + term1_3


    term2_1 = aC1 * t**2 * (3 * decay - t)
    term2_2 = 3 * aC2 * tauC1 * (2 * decay * (tauC1 * (np.exp(-t / tauC1) - 1) + t) - t**2 + 2 * tauC1**2 * (np.exp(-t / tauC1) - 1) + 2 * t * tauC1)
    term2_3 = 6 * aC3 * decay * tauC2**2 * np.exp(-t / tauC2) + 6 * aC3 * decay * t * tauC2 - 6 * aC3 * decay * tauC2**2 - 3 * aC3 * t**2 * tauC2 + 6 * aC3 * tauC2**3 * np.exp(-t / tauC2) + 6 * aC3 * t * tauC2**2 - 6 * aC3 * tauC2**3
    term2_4 = 6 * aC4 * decay * tauC3**2 * np.exp(-t / tauC3) + 6 * aC4 * decay * t * tauC3 - 6 * aC4 * decay * tauC3**2 - 3 * aC4 * t**2 * tauC3 + 6 * aC4 * tauC3**3 * np.exp(-t / tauC3) + 6 * aC4 * t * tauC3**2 - 6 * aC4 * tauC3**3
    term2 = (term2_1 + term2_2 + term2_3 + term2_4) / (3 * decay**2)

    term3 = -aC1 * t + (-1 + np.exp(-t / tauC1)) * aC2 * tauC1 + (-aC3 * tauC2 + np.exp(-t / tauC2) * aC3 * tauC2) + (-aC4 * tauC3 + np.exp(-t / tauC3) * aC4 * tauC3)
 
    result = np.where((decay > 0) & (decay < t), term1, np.where((decay > 0) & (t > 0) & (decay >= t), term2, 0))  + term3
    result *= AACO2

    return result 

def AGWPPRF_Constant(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, decay, p, rotation):

    term1 = aC1 * (t - decay / 2) + (
            aC2 * tauC1 * np.exp(-t / tauC1) * (decay * np.exp(t / tauC1) - tauC1 * np.exp(decay / tauC1) + tauC1) +
            aC3 * tauC2 * np.exp(-t / tauC2) * (decay * np.exp(t / tauC2) - tauC2 * np.exp(decay / tauC2) + tauC2) +
            aC4 * tauC3 * np.exp(-t / tauC3) * (decay * np.exp(t / tauC3) - tauC3 * np.exp(decay / tauC3) + tauC3)
        ) / decay

    term2 =  (aC1 * t**2 + 2 * (
        aC2 * tauC1 * (tauC1 * (np.exp(-t / tauC1) - 1) + t) +
        aC3 * tauC2 * (tauC2 * (np.exp(-t / tauC2) - 1) + t) +
        aC4 * tauC3 * (tauC3 * (np.exp(-t / tauC3) - 1) + t)
    )) / (2 * decay)


    term3 = -aC1 * t + aC2 * tauC1 * (np.exp(-t / tauC1) - 1) + aC3 * tauC2 * np.exp(-t / tauC2) - aC3 * tauC2 + aC4 * tauC3 * np.exp(-t / tauC3) - aC4 * tauC3

    result = np.where((decay > 0) & (decay < t), term1, np.where((decay > 0) & (t > 0) & (decay >= t), term2, 0))  + term3
    result *= AACO2

    return result 

def AGWPPRF_Impulse(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, decay, p, rotation):

    result = AACO2*(aC2*tauC1*np.exp(-t/tauC1) + aC3*tauC2*np.exp(-t/tauC2) + aC4*tauC3*np.exp(-t/tauC3)) - AACO2*(aC1*t + aC2*tauC1 + aC3*tauC2 + aC4*tauC3) + AACO2*(aC1*(-decay + t) + aC2*(-tauC1*np.exp((decay - t)/tauC1) + tauC1) - aC3*tauC2*np.exp((decay - t)/tauC2) + aC3*tauC2 - aC4*tauC3*np.exp((decay - t)/tauC3) + aC4*tauC3)*UnitStep(decay, -decay + t)

    return result 

def AGWPPRF_Rotation_Exp(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, decay, a, v1, v2, rotation):

    term1 = a*(aC1*v1**2*np.exp(t*v1) - aC1*v2**2*np.exp(t*v2) + aC1*(v1 - v2)*(v1*(t*v2 - 1) - v2)*np.exp(t*(v1 + v2)) + aC2*tauC1*v1*v2*(-tauC1**2*v1*v2*(v1 - v2)*np.exp(t*(tauC1*(v1 + v2) - 1)/tauC1) + v1*(tauC1*v1 - 1)*np.exp(t*v1) - v2*(tauC1*v2 - 1)*np.exp(t*v2) + (v1 - v2)*(tauC1*v1 - 1)*(tauC1*v2 - 1)*np.exp(t*(v1 + v2)))/((tauC1*v1 - 1)*(tauC1*v2 - 1)) + v1*v2*(aC3*tauC2*(-tauC2**2*v1*v2*(v1 - v2)*np.exp(t*(tauC2*(v1 + v2) - 1)/tauC2)/((tauC2*v1 - 1)*(tauC2*v2 - 1)) + v1*np.exp(t*v1)/(tauC2*v2 - 1) + v2*np.exp(t*v2)/(-tauC2*v1 + 1) + (v1 - v2)*np.exp(t*(v1 + v2))) + aC4*tauC3*(-tauC3**2*v1*v2*(v1 - v2)*np.exp(t*(tauC3*(v1 + v2) - 1)/tauC3)/((tauC3*v1 - 1)*(tauC3*v2 - 1)) + v1*np.exp(t*v1)/(tauC3*v2 - 1) + v2*np.exp(t*v2)/(-tauC3*v1 + 1) + (v1 - v2)*np.exp(t*(v1 + v2)))))*np.exp(-t*(v1 + v2))/(v1**2*v2**2)

    term2 = (3*a*aC1*(v1**2*(rotation*v2 - t*v2 + 1)*np.exp(rotation*v1) - v2**2*(rotation*v1 - t*v1 + 1)*np.exp(rotation*v2) + (v1 - v2)*(v1*(t*v2 - 1) - v2)*np.exp(rotation*(v1 + v2)))*np.exp(-rotation*(v1 + v2) + t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(v1**2*v2**2) + 3*a*(aC2*tauC1*(-tauC1**2*v1*v2*(v1 - v2)*np.exp(rotation*(v1 + v2) + t*(1/tauC3 + 1/tauC2))/((tauC1*v1 - 1)*(tauC1*v2 - 1)) + tauC1*v1*v2*np.exp(rotation*(v1 + 1/tauC1) + t*(1/tauC3 + 1/tauC2))/(tauC1*v2 - 1) - tauC1*v1*v2*np.exp(rotation*(v2 + 1/tauC1) + t*(1/tauC3 + 1/tauC2))/(tauC1*v1 - 1) - v1*np.exp(rotation*v1 + t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + v2*np.exp(rotation*v2 + t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + (v1 - v2)*np.exp(rotation*(v1 + v2) + t*(1/tauC3 + 1/tauC2 + 1/tauC1))) + aC3*tauC2*(-tauC2**2*v1*v2*(v1 - v2)*np.exp(rotation*(v1 + v2) + t*(1/tauC3 + 1/tauC1))/((tauC2*v1 - 1)*(tauC2*v2 - 1)) + tauC2*v1*v2*np.exp(rotation*(v1 + 1/tauC2) + t*(1/tauC3 + 1/tauC1))/(tauC2*v2 - 1) - tauC2*v1*v2*np.exp(rotation*(v2 + 1/tauC2) + t*(1/tauC3 + 1/tauC1))/(tauC2*v1 - 1) - v1*np.exp(rotation*v1 + t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + v2*np.exp(rotation*v2 + t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + (v1 - v2)*np.exp(rotation*(v1 + v2) + t*(1/tauC3 + 1/tauC2 + 1/tauC1))) + aC4*tauC3*(-tauC3**2*v1*v2*(v1 - v2)*np.exp(rotation*(v1 + v2) + t*(1/tauC2 + 1/tauC1))/((tauC3*v1 - 1)*(tauC3*v2 - 1)) + tauC3*v1*v2*np.exp(rotation*(v1 + 1/tauC3) + t*(1/tauC2 + 1/tauC1))/(tauC3*v2 - 1) - tauC3*v1*v2*np.exp(rotation*(v2 + 1/tauC3) + t*(1/tauC2 + 1/tauC1))/(tauC3*v1 - 1) - v1*np.exp(rotation*v1 + t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + v2*np.exp(rotation*v2 + t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + (v1 - v2)*np.exp(rotation*(v1 + v2) + t*(1/tauC3 + 1/tauC2 + 1/tauC1))))*np.exp(-rotation*(v1 + v2))/(v1*v2) + aC1*(decay*(np.exp(3*rotation/decay) - np.exp(3*t/decay)) + 3*(-rotation + t)*np.exp(3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 - 3/decay)) + 3*(-aC2*tauC1*(decay*(np.exp(3*rotation/decay) - np.exp(3*t/decay))*np.exp(t/tauC1) + 3*tauC1*(-np.exp(rotation/tauC1) + np.exp(t/tauC1))*np.exp(3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC2))/(decay - 3*tauC1) + (-aC3*tauC2*(decay*(np.exp(3*rotation/decay) - np.exp(3*t/decay))*np.exp(t/tauC2) + 3*tauC2*(-np.exp(rotation/tauC2) + np.exp(t/tauC2))*np.exp(3*t/decay))*np.exp(t/tauC3)/(decay - 3*tauC2) - aC4*tauC3*(decay*(np.exp(3*rotation/decay) - np.exp(3*t/decay))*np.exp(t/tauC3) + 3*tauC3*(-np.exp(rotation/tauC3) + np.exp(t/tauC3))*np.exp(3*t/decay))*np.exp(t/tauC2)/(decay - 3*tauC3))*np.exp(t/tauC1))*np.exp(-3*t/decay))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1))/3

    result = np.where((t > 0) & (t <= rotation), term1, np.where((t > rotation), term2, 0)) 

    return result * AACO2

def AGWPPRF_Rotation_Linear(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, decay, a, v1, v2, rotation):

    term1 = a*(aC1*v1**2*np.exp(t*v1) - aC1*v2**2*np.exp(t*v2) + aC1*(v1 - v2)*(v1*(t*v2 - 1) - v2)*np.exp(t*(v1 + v2)) + aC2*tauC1*v1*v2*(-tauC1**2*v1*v2*(v1 - v2)*np.exp(t*(tauC1*(v1 + v2) - 1)/tauC1) + v1*(tauC1*v1 - 1)*np.exp(t*v1) - v2*(tauC1*v2 - 1)*np.exp(t*v2) + (v1 - v2)*(tauC1*v1 - 1)*(tauC1*v2 - 1)*np.exp(t*(v1 + v2)))/((tauC1*v1 - 1)*(tauC1*v2 - 1)) + v1*v2*(aC3*tauC2*(-tauC2**2*v1*v2*(v1 - v2)*np.exp(t*(tauC2*(v1 + v2) - 1)/tauC2)/((tauC2*v1 - 1)*(tauC2*v2 - 1)) + v1*np.exp(t*v1)/(tauC2*v2 - 1) + v2*np.exp(t*v2)/(-tauC2*v1 + 1) + (v1 - v2)*np.exp(t*(v1 + v2))) + aC4*tauC3*(-tauC3**2*v1*v2*(v1 - v2)*np.exp(t*(tauC3*(v1 + v2) - 1)/tauC3)/((tauC3*v1 - 1)*(tauC3*v2 - 1)) + v1*np.exp(t*v1)/(tauC3*v2 - 1) + v2*np.exp(t*v2)/(-tauC3*v1 + 1) + (v1 - v2)*np.exp(t*(v1 + v2)))))*np.exp(-t*(v1 + v2))/(v1**2*v2**2)

    term2 = a*aC1*(v1**2*(rotation*v2 - t*v2 + 1)*np.exp(rotation*v1) - v2**2*(rotation*v1 - t*v1 + 1)*np.exp(rotation*v2) + (v1 - v2)*(v1*(t*v2 - 1) - v2)*np.exp(rotation*(v1 + v2)))*np.exp(-rotation*(v1 + v2))/(v1**2*v2**2) + a*(aC2*tauC1*(-tauC1**2*v1*v2*(v1 - v2)*np.exp(rotation*(v1 + v2) + t*(1/tauC3 + 1/tauC2))/((tauC1*v1 - 1)*(tauC1*v2 - 1)) + tauC1*v1*v2*np.exp(rotation*(v1 + 1/tauC1) + t*(1/tauC3 + 1/tauC2))/(tauC1*v2 - 1) - tauC1*v1*v2*np.exp(rotation*(v2 + 1/tauC1) + t*(1/tauC3 + 1/tauC2))/(tauC1*v1 - 1) - v1*np.exp(rotation*v1 + t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + v2*np.exp(rotation*v2 + t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + (v1 - v2)*np.exp(rotation*(v1 + v2) + t*(1/tauC3 + 1/tauC2 + 1/tauC1))) + aC3*tauC2*(-tauC2**2*v1*v2*(v1 - v2)*np.exp(rotation*(v1 + v2) + t*(1/tauC3 + 1/tauC1))/((tauC2*v1 - 1)*(tauC2*v2 - 1)) + tauC2*v1*v2*np.exp(rotation*(v1 + 1/tauC2) + t*(1/tauC3 + 1/tauC1))/(tauC2*v2 - 1) - tauC2*v1*v2*np.exp(rotation*(v2 + 1/tauC2) + t*(1/tauC3 + 1/tauC1))/(tauC2*v1 - 1) - v1*np.exp(rotation*v1 + t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + v2*np.exp(rotation*v2 + t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + (v1 - v2)*np.exp(rotation*(v1 + v2) + t*(1/tauC3 + 1/tauC2 + 1/tauC1))) + aC4*tauC3*(-tauC3**2*v1*v2*(v1 - v2)*np.exp(rotation*(v1 + v2) + t*(1/tauC2 + 1/tauC1))/((tauC3*v1 - 1)*(tauC3*v2 - 1)) + tauC3*v1*v2*np.exp(rotation*(v1 + 1/tauC3) + t*(1/tauC2 + 1/tauC1))/(tauC3*v2 - 1) - tauC3*v1*v2*np.exp(rotation*(v2 + 1/tauC3) + t*(1/tauC2 + 1/tauC1))/(tauC3*v1 - 1) - v1*np.exp(rotation*v1 + t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + v2*np.exp(rotation*v2 + t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + (v1 - v2)*np.exp(rotation*(v1 + v2) + t*(1/tauC3 + 1/tauC2 + 1/tauC1))))*np.exp(-rotation*(v1 + v2) - t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(v1*v2) + aC1*(rotation - t)**2*(3*decay + rotation - t)/(3*decay**2) - aC2*tauC1*(-2*decay*(tauC1*np.exp(rotation/tauC1) + (-rotation + t - tauC1)*np.exp(t/tauC1)) - 2*tauC1**2*np.exp(rotation/tauC1) + (rotation**2 - 2*rotation*t + 2*rotation*tauC1 + t**2 - 2*t*tauC1 + 2*tauC1**2)*np.exp(t/tauC1))*np.exp(-t/tauC1)/decay**2 - (aC3*tauC2*(-2*decay*(tauC2*np.exp(rotation/tauC2) + (-rotation + t - tauC2)*np.exp(t/tauC2)) - 2*tauC2**2*np.exp(rotation/tauC2) + (rotation**2 - 2*rotation*t + 2*rotation*tauC2 + t**2 - 2*t*tauC2 + 2*tauC2**2)*np.exp(t/tauC2))*np.exp(t/tauC3) + aC4*tauC3*(-2*decay*(tauC3*np.exp(rotation/tauC3) + (-rotation + t - tauC3)*np.exp(t/tauC3)) - 2*tauC3**2*np.exp(rotation/tauC3) + (rotation**2 - 2*rotation*t + 2*rotation*tauC3 + t**2 - 2*t*tauC3 + 2*tauC3**2)*np.exp(t/tauC3))*np.exp(t/tauC2))*np.exp(-t*(tauC2 + tauC3)/(tauC2*tauC3))/decay**2

    term3 = a*aC1*(v1**2*(rotation*v2 - t*v2 + 1)*np.exp(rotation*v1) - v2**2*(rotation*v1 - t*v1 + 1)*np.exp(rotation*v2) + (v1 - v2)*(v1*(t*v2 - 1) - v2)*np.exp(rotation*(v1 + v2)))*np.exp(-rotation*(v1 + v2))/(v1**2*v2**2) - a*(aC2*tauC1*(tauC2*v1 - 1)*(tauC2*v2 - 1)*(tauC3*v1 - 1)*(tauC3*v2 - 1)*(tauC1**2*v1*v2*(v1 - v2)*np.exp(rotation*(v1 + v2) + t*(2/tauC3 + 2/tauC2 + 1/tauC1)) - tauC1*v1*v2*(tauC1*v1 - 1)*np.exp(rotation*(v1 + 1/tauC1) + t*(2/tauC3 + 2/tauC2 + 1/tauC1)) + tauC1*v1*v2*(tauC1*v2 - 1)*np.exp(rotation*(v2 + 1/tauC1) + t*(2/tauC3 + 2/tauC2 + 1/tauC1)) + v1*(tauC1*v1 - 1)*(tauC1*v2 - 1)*np.exp(rotation*v1 + 2*t*(1/tauC3 + 1/tauC2 + 1/tauC1)) - v2*(tauC1*v1 - 1)*(tauC1*v2 - 1)*np.exp(rotation*v2 + 2*t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + (-v1 + v2)*(tauC1*v1 - 1)*(tauC1*v2 - 1)*np.exp(rotation*(v1 + v2) + 2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))) + (tauC1*v1 - 1)*(tauC1*v2 - 1)*(aC3*tauC2*(tauC3*v1 - 1)*(tauC3*v2 - 1)*(tauC2**2*v1*v2*(v1 - v2)*np.exp(rotation*(v1 + v2) + t*(2/tauC3 + 1/tauC2 + 2/tauC1)) - tauC2*v1*v2*(tauC2*v1 - 1)*np.exp(rotation*(v1 + 1/tauC2) + t*(2/tauC3 + 1/tauC2 + 2/tauC1)) + tauC2*v1*v2*(tauC2*v2 - 1)*np.exp(rotation*(v2 + 1/tauC2) + t*(2/tauC3 + 1/tauC2 + 2/tauC1)) + v1*(tauC2*v1 - 1)*(tauC2*v2 - 1)*np.exp(rotation*v1 + 2*t*(1/tauC3 + 1/tauC2 + 1/tauC1)) - v2*(tauC2*v1 - 1)*(tauC2*v2 - 1)*np.exp(rotation*v2 + 2*t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + (-v1 + v2)*(tauC2*v1 - 1)*(tauC2*v2 - 1)*np.exp(rotation*(v1 + v2) + 2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))) + aC4*tauC3*(tauC2*v1 - 1)*(tauC2*v2 - 1)*(tauC3**2*v1*v2*(v1 - v2)*np.exp(rotation*(v1 + v2) + t*(1/tauC3 + 2/tauC2 + 2/tauC1)) - tauC3*v1*v2*(tauC3*v1 - 1)*np.exp(rotation*(v1 + 1/tauC3) + t*(1/tauC3 + 2/tauC2 + 2/tauC1)) + tauC3*v1*v2*(tauC3*v2 - 1)*np.exp(rotation*(v2 + 1/tauC3) + t*(1/tauC3 + 2/tauC2 + 2/tauC1)) + v1*(tauC3*v1 - 1)*(tauC3*v2 - 1)*np.exp(rotation*v1 + 2*t*(1/tauC3 + 1/tauC2 + 1/tauC1)) - v2*(tauC3*v1 - 1)*(tauC3*v2 - 1)*np.exp(rotation*v2 + 2*t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + (-v1 + v2)*(tauC3*v1 - 1)*(tauC3*v2 - 1)*np.exp(rotation*(v1 + v2) + 2*t*(1/tauC3 + 1/tauC2 + 1/tauC1)))))*np.exp(-rotation*(v1 + v2) - 2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(v1*v2*(tauC1*v1 - 1)*(tauC1*v2 - 1)*(tauC2*v1 - 1)*(tauC2*v2 - 1)*(tauC3*v1 - 1)*(tauC3*v2 - 1)) - aC1*(decay + 3*rotation - 3*t)/3 + (aC2*tauC1*(decay**2*np.exp(t/tauC1) + 2*decay*tauC1*np.exp(rotation/tauC1) - 2*tauC1**2*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2)) + (aC3*tauC2*(decay**2*np.exp(t/tauC2) + 2*decay*tauC2*np.exp(rotation/tauC2) - 2*tauC2**2*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t/tauC3) + aC4*tauC3*(decay**2*np.exp(t/tauC3) + 2*decay*tauC3*np.exp(rotation/tauC3) - 2*tauC3**2*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t/tauC2))*np.exp(t/tauC1))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1))/decay**2

    result = np.where((rotation >= t) & (decay + rotation >= t) & (t > 0), term1, 
        np.where((rotation < t) & (decay + rotation >= t), term2, 
        np.where((rotation < t) & (decay + rotation < t), term3, 0)))

    return result * AACO2

def AGWPPRF_Rotation_Constant(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, decay, a, v1, v2, rotation):

    term1 = a*(aC1*v1**2*np.exp(t*v1) - aC1*v2**2*np.exp(t*v2) + aC1*(v1 - v2)*(v1*(t*v2 - 1) - v2)*np.exp(t*(v1 + v2)) + aC2*tauC1*v1*v2*(-tauC1**2*v1*v2*(v1 - v2)*np.exp(t*(tauC1*(v1 + v2) - 1)/tauC1) + v1*(tauC1*v1 - 1)*np.exp(t*v1) - v2*(tauC1*v2 - 1)*np.exp(t*v2) + (v1 - v2)*(tauC1*v1 - 1)*(tauC1*v2 - 1)*np.exp(t*(v1 + v2)))/((tauC1*v1 - 1)*(tauC1*v2 - 1)) + v1*v2*(aC3*tauC2*(-tauC2**2*v1*v2*(v1 - v2)*np.exp(t*(tauC2*(v1 + v2) - 1)/tauC2)/((tauC2*v1 - 1)*(tauC2*v2 - 1)) + v1*np.exp(t*v1)/(tauC2*v2 - 1) + v2*np.exp(t*v2)/(-tauC2*v1 + 1) + (v1 - v2)*np.exp(t*(v1 + v2))) + aC4*tauC3*(-tauC3**2*v1*v2*(v1 - v2)*np.exp(t*(tauC3*(v1 + v2) - 1)/tauC3)/((tauC3*v1 - 1)*(tauC3*v2 - 1)) + v1*np.exp(t*v1)/(tauC3*v2 - 1) + v2*np.exp(t*v2)/(-tauC3*v1 + 1) + (v1 - v2)*np.exp(t*(v1 + v2)))))*np.exp(-t*(v1 + v2))/(v1**2*v2**2)

    term2 = a*aC1*(v1**2*(rotation*v2 - t*v2 + 1)*np.exp(rotation*v1) - v2**2*(rotation*v1 - t*v1 + 1)*np.exp(rotation*v2) + (v1 - v2)*(v1*(t*v2 - 1) - v2)*np.exp(rotation*(v1 + v2)))*np.exp(-rotation*(v1 + v2))/(v1**2*v2**2) - a*aC3*tauC2**3*v1*np.exp(-t/tauC2)/((tauC2*v1 - 1)*(tauC2*v2 - 1)) + a*aC3*tauC2**3*v2*np.exp(-t/tauC2)/((tauC2*v1 - 1)*(tauC2*v2 - 1)) + a*aC3*tauC2**2*np.exp((-rotation*tauC2*v2 + rotation - t)/tauC2)/(tauC2*v2 - 1) - a*aC3*tauC2**2*np.exp((-rotation*tauC2*v1 + rotation - t)/tauC2)/(tauC2*v1 - 1) + a*aC3*tauC2/v2 - a*aC3*tauC2*np.exp(-rotation*v2)/v2 - a*aC3*tauC2/v1 + a*aC3*tauC2*np.exp(-rotation*v1)/v1 - a*aC4*tauC3**3*v1*np.exp(-t/tauC3)/((tauC3*v1 - 1)*(tauC3*v2 - 1)) + a*aC4*tauC3**3*v2*np.exp(-t/tauC3)/((tauC3*v1 - 1)*(tauC3*v2 - 1)) + a*aC4*tauC3**2*np.exp((-rotation*tauC3*v2 + rotation - t)/tauC3)/(tauC3*v2 - 1) - a*aC4*tauC3**2*np.exp((-rotation*tauC3*v1 + rotation - t)/tauC3)/(tauC3*v1 - 1) + a*aC4*tauC3/v2 - a*aC4*tauC3*np.exp(-rotation*v2)/v2 - a*aC4*tauC3/v1 + a*aC4*tauC3*np.exp(-rotation*v1)/v1 + aC1*(rotation - t)**2/(2*decay) + aC2*tauC1*(a*(-tauC1**2*v1*np.exp(-t/tauC1)/((tauC1*v1 - 1)*(tauC1*v2 - 1)) + tauC1**2*v2*np.exp(-t/tauC1)/((tauC1*v1 - 1)*(tauC1*v2 - 1)) + tauC1*np.exp((-rotation*tauC1*v2 + rotation - t)/tauC1)/(tauC1*v2 - 1) - tauC1*np.exp((-rotation*tauC1*v1 + rotation - t)/tauC1)/(tauC1*v1 - 1) + 1/v2 - np.exp(-rotation*v2)/v2 + (-1 + np.exp(-rotation*v1))/v1) + (-rotation + t + tauC1*(np.exp((rotation - t)/tauC1) - 1))/decay) - aC3*rotation*tauC2/decay + aC3*t*tauC2/decay + aC3*tauC2**2*np.exp((rotation - t)/tauC2)/decay - aC3*tauC2**2/decay - aC4*rotation*tauC3/decay + aC4*t*tauC3/decay + aC4*tauC3**2*np.exp((rotation - t)/tauC3)/decay - aC4*tauC3**2/decay

    term3 = a*aC1*(v1**2*(rotation*v2 - t*v2 + 1)*np.exp(rotation*v1) - v2**2*(rotation*v1 - t*v1 + 1)*np.exp(rotation*v2) + (v1 - v2)*(v1*(t*v2 - 1) - v2)*np.exp(rotation*(v1 + v2)))*np.exp(-rotation*(v1 + v2))/(v1**2*v2**2) - a*aC3*tauC2**3*v1*np.exp(-t/tauC2)/((tauC2*v1 - 1)*(tauC2*v2 - 1)) + a*aC3*tauC2**3*v2*np.exp(-t/tauC2)/((tauC2*v1 - 1)*(tauC2*v2 - 1)) + a*aC3*tauC2**2*np.exp((-rotation*tauC2*v2 + rotation - t)/tauC2)/(tauC2*v2 - 1) - a*aC3*tauC2**2*np.exp((-rotation*tauC2*v1 + rotation - t)/tauC2)/(tauC2*v1 - 1) + a*aC3*tauC2/v2 - a*aC3*tauC2*np.exp(-rotation*v2)/v2 - a*aC3*tauC2/v1 + a*aC3*tauC2*np.exp(-rotation*v1)/v1 - a*aC4*tauC3**3*v1*np.exp(-t/tauC3)/((tauC3*v1 - 1)*(tauC3*v2 - 1)) + a*aC4*tauC3**3*v2*np.exp(-t/tauC3)/((tauC3*v1 - 1)*(tauC3*v2 - 1)) + a*aC4*tauC3**2*np.exp((-rotation*tauC3*v2 + rotation - t)/tauC3)/(tauC3*v2 - 1) - a*aC4*tauC3**2*np.exp((-rotation*tauC3*v1 + rotation - t)/tauC3)/(tauC3*v1 - 1) + a*aC4*tauC3/v2 - a*aC4*tauC3*np.exp(-rotation*v2)/v2 - a*aC4*tauC3/v1 + a*aC4*tauC3*np.exp(-rotation*v1)/v1 - aC1*(decay + 2*rotation - 2*t)/2 + aC2*tauC1*(a*(-tauC1**2*v1*np.exp(-t/tauC1)/((tauC1*v1 - 1)*(tauC1*v2 - 1)) + tauC1**2*v2*np.exp(-t/tauC1)/((tauC1*v1 - 1)*(tauC1*v2 - 1)) + tauC1*np.exp((-rotation*tauC1*v2 + rotation - t)/tauC1)/(tauC1*v2 - 1) - tauC1*np.exp((-rotation*tauC1*v1 + rotation - t)/tauC1)/(tauC1*v1 - 1) + 1/v2 - np.exp(-rotation*v2)/v2 + (-1 + np.exp(-rotation*v1))/v1) + 1 - tauC1*(np.exp(decay/tauC1) - 1)*np.exp((rotation - t)/tauC1)/decay) + aC3*tauC2 + aC3*tauC2**2*np.exp((rotation - t)/tauC2)/decay - aC3*tauC2**2*np.exp((decay + rotation - t)/tauC2)/decay + aC4*tauC3 + aC4*tauC3**2*np.exp((rotation - t)/tauC3)/decay - aC4*tauC3**2*np.exp((decay + rotation - t)/tauC3)/decay
  
    result = np.where((rotation >= t) & (decay + rotation >= t) & (t > 0), term1, 
        np.where((rotation < t) & (decay + rotation >= t), term2, 
        np.where((rotation < t) & (decay + rotation < t), term3, 0)))

    return result * AACO2

def AGWPPRF_Linear_Exp(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, decay, p, rotation):

    term1 = (aC1*t**2*(-3*rotation + t)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + 3*aC2*tauC1*(-2*tauC1*(rotation + tauC1) + (-2*rotation*t + 2*rotation*tauC1 + t**2 - 2*t*tauC1 + 2*tauC1**2)*np.exp(t/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2)) + 3*(aC3*tauC2*(-2*tauC2*(rotation + tauC2) + (-2*rotation*t + 2*rotation*tauC2 + t**2 - 2*t*tauC2 + 2*tauC2**2)*np.exp(t/tauC2))*np.exp(t/tauC3) + aC4*tauC3*(-2*tauC3*(rotation + tauC3) + (-2*rotation*t + 2*rotation*tauC3 + t**2 - 2*t*tauC3 + 2*tauC3**2)*np.exp(t/tauC3))*np.exp(t/tauC2))*np.exp(t/tauC1))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(3*rotation**2)

    term2 = (aC1*rotation**2*(decay - 3*tauC1)*(decay - 3*tauC2)*(decay - 3*tauC3)*(decay*(np.exp(3*rotation/decay) - np.exp(3*t/decay)) - 2*rotation*np.exp(3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) - 3*aC2*tauC1*(decay - 3*tauC2)*(decay - 3*tauC3)*(decay*(rotation**2*np.exp(t/tauC1 + 3*rotation/decay) - 2*tauC1**2*np.exp(rotation/tauC1 + 3*t/decay) + 2*tauC1*(rotation + tauC1)*np.exp(3*t/decay)) - 3*tauC1*(2*tauC1*(rotation + tauC1) + (rotation**2 - 2*tauC1**2)*np.exp(rotation/tauC1))*np.exp(3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC2)) - 3*(decay - 3*tauC1)*(aC3*tauC2*(decay - 3*tauC3)*(decay*(rotation**2*np.exp(t/tauC2 + 3*rotation/decay) - 2*tauC2**2*np.exp(rotation/tauC2 + 3*t/decay) + 2*tauC2*(rotation + tauC2)*np.exp(3*t/decay)) - 3*tauC2*(2*tauC2*(rotation + tauC2) + (rotation**2 - 2*tauC2**2)*np.exp(rotation/tauC2))*np.exp(3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC1)) + aC4*tauC3*(decay - 3*tauC2)*(decay*(rotation**2*np.exp(t/tauC3 + 3*rotation/decay) - 2*tauC3**2*np.exp(rotation/tauC3 + 3*t/decay) + 2*tauC3*(rotation + tauC3)*np.exp(3*t/decay)) - 3*tauC3*(2*tauC3*(rotation + tauC3) + (rotation**2 - 2*tauC3**2)*np.exp(rotation/tauC3))*np.exp(3*t/decay))*np.exp(t*(1/tauC2 + 1/tauC1))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 3/decay))/(3*rotation**2*(decay - 3*tauC1)*(decay - 3*tauC2)*(decay - 3*tauC3))

    result = np.where((t > 0) & (t <= rotation), term1, np.where((t > rotation), term2, 0)) 

    return result * AACO2

def AGWPPRF_Linear_Linear(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, decay, p, rotation):

    term1 = (aC1*t**2*(-3*rotation + t)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + 3*aC2*tauC1*(-2*tauC1*(rotation + tauC1) + (-2*rotation*t + 2*rotation*tauC1 + t**2 - 2*t*tauC1 + 2*tauC1**2)*np.exp(t/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2)) + 3*(aC3*tauC2*(-2*tauC2*(rotation + tauC2) + (-2*rotation*t + 2*rotation*tauC2 + t**2 - 2*t*tauC2 + 2*tauC2**2)*np.exp(t/tauC2))*np.exp(t/tauC3) + aC4*tauC3*(-2*tauC3*(rotation + tauC3) + (-2*rotation*t + 2*rotation*tauC3 + t**2 - 2*t*tauC3 + 2*tauC3**2)*np.exp(t/tauC3))*np.exp(t/tauC2))*np.exp(t/tauC1))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(3*rotation**2)

    term2 = -aC1*(decay + 2*rotation)/3 - 2*(aC2*tauC1**2*(decay**2*(rotation - tauC1*np.exp(rotation/tauC1) + tauC1) - decay*rotation**2*np.exp(rotation/tauC1) + rotation**2*tauC1*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2)) + (aC3*tauC2**2*(decay**2*(rotation - tauC2*np.exp(rotation/tauC2) + tauC2) - decay*rotation**2*np.exp(rotation/tauC2) + rotation**2*tauC2*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t/tauC3) + aC4*tauC3**2*(decay**2*(rotation - tauC3*np.exp(rotation/tauC3) + tauC3) - decay*rotation**2*np.exp(rotation/tauC3) + rotation**2*tauC3*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t/tauC2))*np.exp(t/tauC1))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(decay**2*rotation**2)

    term3 = (aC1*(decay**2*(rotation - 3*t) + 3*decay*(rotation - t)**2 + (rotation - t)**3) - 3*(aC2*tauC1*(decay**2*(rotation**2*np.exp(t/tauC1) - 2*tauC1**2*np.exp(rotation/tauC1) + 2*tauC1*(rotation + tauC1)) + 2*decay*rotation**2*(-tauC1*np.exp(rotation/tauC1) + (rotation - t + tauC1)*np.exp(t/tauC1)) + rotation**2*(-2*tauC1**2*np.exp(rotation/tauC1) + (rotation**2 - 2*rotation*t + 2*rotation*tauC1 + t**2 - 2*t*tauC1 + 2*tauC1**2)*np.exp(t/tauC1)))*np.exp(-t/tauC1) + (-aC3*tauC2*(decay**2*(-rotation**2*np.exp(t/tauC2) + 2*tauC2**2*np.exp(rotation/tauC2) - 2*tauC2*(rotation + tauC2)) + 2*decay*rotation**2*(tauC2*np.exp(rotation/tauC2) + (-rotation + t - tauC2)*np.exp(t/tauC2)) - rotation**2*(-2*tauC2**2*np.exp(rotation/tauC2) + (rotation**2 - 2*rotation*t + 2*rotation*tauC2 + t**2 - 2*t*tauC2 + 2*tauC2**2)*np.exp(t/tauC2)))*np.exp(t/tauC3) - aC4*tauC3*(decay**2*(-rotation**2*np.exp(t/tauC3) + 2*tauC3**2*np.exp(rotation/tauC3) - 2*tauC3*(rotation + tauC3)) + 2*decay*rotation**2*(tauC3*np.exp(rotation/tauC3) + (-rotation + t - tauC3)*np.exp(t/tauC3)) - rotation**2*(-2*tauC3**2*np.exp(rotation/tauC3) + (rotation**2 - 2*rotation*t + 2*rotation*tauC3 + t**2 - 2*t*tauC3 + 2*tauC3**2)*np.exp(t/tauC3)))*np.exp(t/tauC2))*np.exp(-t*(1/tauC3 + 1/tauC2)))/rotation**2)/(3*decay**2)
  
    result = np.where((rotation >= t) & (decay + rotation >= t) & (t > 0), term1, 
        np.where((rotation < t) & (decay + rotation < t), term2, 
        np.where((rotation < t) & (decay + rotation >= t), term3, 0)))

    return result * AACO2

def AGWPPRF_Linear_Constant(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, decay, p, rotation):

    term1 = (aC1*t**2*(-3*rotation + t)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + 3*aC2*tauC1*(-2*tauC1*(rotation + tauC1) + (-2*rotation*t + 2*rotation*tauC1 + t**2 - 2*t*tauC1 + 2*tauC1**2)*np.exp(t/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2)) + 3*(aC3*tauC2*(-2*tauC2*(rotation + tauC2) + (-2*rotation*t + 2*rotation*tauC2 + t**2 - 2*t*tauC2 + 2*tauC2**2)*np.exp(t/tauC2))*np.exp(t/tauC3) + aC4*tauC3*(-2*tauC3*(rotation + tauC3) + (-2*rotation*t + 2*rotation*tauC3 + t**2 - 2*t*tauC3 + 2*tauC3**2)*np.exp(t/tauC3))*np.exp(t/tauC2))*np.exp(t/tauC1))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(3*rotation**2)

    term2 = (-aC1*decay*rotation**2*(3*decay + 4*rotation) - 6*aC2*tauC1**2*(2*decay*(rotation - tauC1*np.exp(rotation/tauC1) + tauC1) + rotation**2*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(-t/tauC1) - 6*(aC3*tauC2**2*(2*decay*(rotation - tauC2*np.exp(rotation/tauC2) + tauC2) + rotation**2*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t/tauC3) + aC4*tauC3**2*(2*decay*(rotation - tauC3*np.exp(rotation/tauC3) + tauC3) + rotation**2*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t/tauC2))*np.exp(-t*(1/tauC3 + 1/tauC2)))/(6*decay*rotation**2)

    term3 = (aC1*rotation**2*(2*decay*(rotation - 3*t) + 3*(rotation - t)**2)*np.exp(2*t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + 6*aC2*tauC1*(decay*(-rotation**2*np.exp(t/tauC1) + 2*tauC1**2*np.exp(rotation/tauC1) - 2*tauC1*(rotation + tauC1)) + rotation**2*(tauC1*np.exp(rotation/tauC1) + (-rotation + t - tauC1)*np.exp(t/tauC1)))*np.exp(t*(2/tauC3 + 2/tauC2 + 1/tauC1)) - 6*aC3*tauC2*(decay*(rotation**2*np.exp(t/tauC2) - 2*tauC2**2*np.exp(rotation/tauC2) + 2*tauC2*(rotation + tauC2)) + rotation**2*(-tauC2*np.exp(rotation/tauC2) + (rotation - t + tauC2)*np.exp(t/tauC2)))*np.exp(t*(2/tauC3 + 1/tauC2 + 2/tauC1)) - 6*aC4*tauC3*(decay*(rotation**2*np.exp(t/tauC3) - 2*tauC3**2*np.exp(rotation/tauC3) + 2*tauC3*(rotation + tauC3)) + rotation**2*(-tauC3*np.exp(rotation/tauC3) + (rotation - t + tauC3)*np.exp(t/tauC3)))*np.exp(t*(1/tauC3 + 2/tauC2 + 2/tauC1)))*np.exp(-2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(6*decay*rotation**2)

    result = np.where((rotation >= t) & (decay + rotation >= t) & (t > 0), term1, 
        np.where((rotation < t) & (decay + rotation < t), term2, 
        np.where((rotation < t) & (decay + rotation >= t), term3, 0)))

    return result * AACO2

def AGWPPRF_Constant_Exp(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, decay, p, rotation):

    term1 = (-aC1*t**2 + 2*aC2*tauC1*(-t + tauC1 - tauC1*np.exp(-t/tauC1)) + 2*aC3*tauC2*(-t + tauC2 - tauC2*np.exp(-t/tauC2)) + 2*aC4*tauC3*(-t + tauC3 - tauC3*np.exp(-t/tauC3)))/(2*rotation)

    term2 = (aC1*rotation*(decay - 3*tauC1)*(decay - 3*tauC2)*(decay - 3*tauC3)*(2*decay*(np.exp(3*rotation/decay) - np.exp(3*t/decay)) - 3*rotation*np.exp(3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) - 6*aC2*tauC1*(decay - 3*tauC2)*(decay - 3*tauC3)*(decay*(rotation*np.exp(t/tauC1 + 3*rotation/decay) + tauC1*np.exp(3*t/decay) - tauC1*np.exp(rotation/tauC1 + 3*t/decay)) - 3*tauC1*(tauC1 + (rotation - tauC1)*np.exp(rotation/tauC1))*np.exp(3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC2)) - 6*(decay - 3*tauC1)*(aC3*tauC2*(decay - 3*tauC3)*(decay*(rotation*np.exp(t/tauC2 + 3*rotation/decay) + tauC2*np.exp(3*t/decay) - tauC2*np.exp(rotation/tauC2 + 3*t/decay)) - 3*tauC2*(tauC2 + (rotation - tauC2)*np.exp(rotation/tauC2))*np.exp(3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC1)) + aC4*tauC3*(decay - 3*tauC2)*(decay*(rotation*np.exp(t/tauC3 + 3*rotation/decay) + tauC3*np.exp(3*t/decay) - tauC3*np.exp(rotation/tauC3 + 3*t/decay)) - 3*tauC3*(tauC3 + (rotation - tauC3)*np.exp(rotation/tauC3))*np.exp(3*t/decay))*np.exp(t*(1/tauC2 + 1/tauC1))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 3/decay))/(6*rotation*(decay - 3*tauC1)*(decay - 3*tauC2)*(decay - 3*tauC3))

    result = np.where((t > 0) & (t <= rotation), term1, np.where((t > rotation), term2, 0)) 

    return result * AACO2

def AGWPPRF_Constant_Linear(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, decay, p, rotation):

    term1 = (-aC1*t**2 + 2*aC2*tauC1*(-t + tauC1 - tauC1*np.exp(-t/tauC1)) + 2*aC3*tauC2*(-t + tauC2 - tauC2*np.exp(-t/tauC2)) + 2*aC4*tauC3*(-t + tauC3 - tauC3*np.exp(-t/tauC3)))/(2*rotation)

    term2 = -aC1*(2*decay + 3*rotation)/6 + aC2*tauC1**2*(decay**2*(np.exp(rotation/tauC1) - 1) + 2*decay*rotation*np.exp(rotation/tauC1) - 2*rotation*tauC1*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(-t/tauC1)/(decay**2*rotation) + (aC3*tauC2**2*(decay**2*(np.exp(rotation/tauC2) - 1) + 2*decay*rotation*np.exp(rotation/tauC2) - 2*rotation*tauC2*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t/tauC3) + aC4*tauC3**2*(decay**2*(np.exp(rotation/tauC3) - 1) + 2*decay*rotation*np.exp(rotation/tauC3) - 2*rotation*tauC3*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t/tauC2))*np.exp(-t*(1/tauC3 + 1/tauC2))/(decay**2*rotation)

    term3 = (aC1*(3*decay**2*(rotation - 2*t) + 6*decay*(rotation - t)**2 + 2*(rotation - t)**3) + 6*(aC2*tauC1*(decay**2*(-rotation*np.exp(t/tauC1) + tauC1*np.exp(rotation/tauC1) - tauC1) + 2*decay*rotation*(tauC1*np.exp(rotation/tauC1) + (-rotation + t - tauC1)*np.exp(t/tauC1)) + 2*rotation*tauC1**2*np.exp(rotation/tauC1) - rotation*(rotation**2 - 2*rotation*t + 2*rotation*tauC1 + t**2 - 2*t*tauC1 + 2*tauC1**2)*np.exp(t/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2)) + aC3*tauC2*(decay**2*(-rotation*np.exp(t/tauC2) + tauC2*np.exp(rotation/tauC2) - tauC2) + 2*decay*rotation*(tauC2*np.exp(rotation/tauC2) + (-rotation + t - tauC2)*np.exp(t/tauC2)) + 2*rotation*tauC2**2*np.exp(rotation/tauC2) - rotation*(rotation**2 - 2*rotation*t + 2*rotation*tauC2 + t**2 - 2*t*tauC2 + 2*tauC2**2)*np.exp(t/tauC2))*np.exp(t*(1/tauC3 + 1/tauC1)) + aC4*tauC3*(decay**2*(-rotation*np.exp(t/tauC3) + tauC3*np.exp(rotation/tauC3) - tauC3) + 2*decay*rotation*(tauC3*np.exp(rotation/tauC3) + (-rotation + t - tauC3)*np.exp(t/tauC3)) + 2*rotation*tauC3**2*np.exp(rotation/tauC3) - rotation*(rotation**2 - 2*rotation*t + 2*rotation*tauC3 + t**2 - 2*t*tauC3 + 2*tauC3**2)*np.exp(t/tauC3))*np.exp(t*(1/tauC2 + 1/tauC1)))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1))/rotation)/(6*decay**2)
    
    result = np.where((rotation >= t) & (decay + rotation >= t) & (t > 0), term1, 
        np.where((rotation < t) & (decay + rotation < t), term2, 
        np.where((rotation < t) & (decay + rotation >= t), term3, 0)))

    return result * AACO2

def AGWPPRF_Constant_Constant(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, decay, p, rotation):

    term1 = (-aC1*t**2 + 2*aC2*tauC1*(-t + tauC1 - tauC1*np.exp(-t/tauC1)) + 2*aC3*tauC2*(-t + tauC2 - tauC2*np.exp(-t/tauC2)) + 2*aC4*tauC3*(-t + tauC3 - tauC3*np.exp(-t/tauC3)))/(2*rotation)

    term2 = (-aC1*decay*rotation*(decay + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + 2*aC2*tauC1**2*(decay*(np.exp(rotation/tauC1) - 1) - rotation*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2)) + 2*(aC3*tauC2**2*(decay*(np.exp(rotation/tauC2) - 1) - rotation*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t/tauC3) + aC4*tauC3**2*(decay*(np.exp(rotation/tauC3) - 1) - rotation*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t/tauC2))*np.exp(t/tauC1))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(2*decay*rotation)

    term3 = (aC1*(decay*(rotation - 2*t) + (rotation - t)**2) + 2*(aC2*tauC1*(decay*(-rotation*np.exp(t/tauC1) + tauC1*np.exp(rotation/tauC1) - tauC1) + rotation*tauC1*np.exp(rotation/tauC1) + rotation*(-rotation + t - tauC1)*np.exp(t/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2)) + aC3*tauC2*(decay*(-rotation*np.exp(t/tauC2) + tauC2*np.exp(rotation/tauC2) - tauC2) + rotation*tauC2*np.exp(rotation/tauC2) + rotation*(-rotation + t - tauC2)*np.exp(t/tauC2))*np.exp(t*(1/tauC3 + 1/tauC1)) + aC4*tauC3*(decay*(-rotation*np.exp(t/tauC3) + tauC3*np.exp(rotation/tauC3) - tauC3) + rotation*tauC3*np.exp(rotation/tauC3) + rotation*(-rotation + t - tauC3)*np.exp(t/tauC3))*np.exp(t*(1/tauC2 + 1/tauC1)))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1))/rotation)/(2*decay)

    result = np.where((rotation >= t) & (decay + rotation >= t) & (t > 0), term1, 
        np.where((rotation < t) & (decay + rotation < t), term2, 
        np.where((rotation < t) & (decay + rotation >= t), term3, 0)))

    return result * AACO2

def AGWPPRF_Constant_Impulse(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, decay, p, rotation):

    term1 = (aC1*rotation*(rotation - 2*t) - 2*aC2*tauC1*(rotation*np.exp(t/tauC1) - tauC1*np.exp(rotation/tauC1) + tauC1)*np.exp(-t/tauC1) - 2*aC3*tauC2*(rotation*np.exp(t/tauC2) - tauC2*np.exp(rotation/tauC2) + tauC2)*np.exp(-t/tauC2) - 2*aC4*tauC3*(rotation*np.exp(t/tauC3) - tauC3*np.exp(rotation/tauC3) + tauC3)*np.exp(-t/tauC3))/(2*rotation)
    term2 = (-aC1*t**2 + 2*aC2*tauC1*(-t + tauC1 - tauC1*np.exp(-t/tauC1)) + 2*aC3*tauC2*(-t + tauC2 - tauC2*np.exp(-t/tauC2)) + 2*aC4*tauC3*(-t + tauC3 - tauC3*np.exp(-t/tauC3)))/(2*rotation)

    condition1 = (rotation > 0) & (rotation < t)
    condition2 = (rotation > 0) & (t > 0) & (rotation >= t)    
        
        
    result = AACO2 * np.where(condition1, term1,
                     np.where(condition2, term2, 0
                                                ))


    result += -AACO2*(aC1*(decay + rotation - t)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + aC2*tauC1*(-np.exp(t/tauC1) + np.exp((decay + rotation)/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2)) + (aC3*tauC2*(-np.exp(t/tauC2) + np.exp((decay + rotation)/tauC2))*np.exp(t/tauC3) + aC4*tauC3*(-np.exp(t/tauC3) + np.exp((decay + rotation)/tauC3))*np.exp(t/tauC2))*np.exp(t/tauC1))*UnitStep(decay + rotation, -decay - rotation + t)*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1))

    return result

def AGWPPRF_Trian_Exp(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, decay, p, rotation):

    term1 = (-aC1*t**3 + aC2*(-3*t**2*tauC1 + 6*t*tauC1**2 + 6*tauC1**3*(-1 + np.exp(-t/tauC1))) + aC3*(-3*t**2*tauC2 + 6*t*tauC2**2 + 6*tauC2**3*(-1 + np.exp(-t/tauC2))) + 3*aC4*tauC3*(-t**2 + 2*t*tauC3 + 2*tauC3**2*(-1 + np.exp(-t/tauC3))))/(3*p*rotation)

    term2 = (aC1*(p**2*rotation - 3*p*rotation*t + t**2*(3*rotation - t)) - 3*(aC2*tauC1*(p*(p*rotation - 2*rotation*t + 2*rotation*tauC1 + t**2 - 2*t*tauC1 + 2*tauC1**2)*np.exp(t/tauC1) - 2*rotation*tauC1**2*np.exp(p/tauC1) + 2*tauC1**2*(-p + rotation))*np.exp(t*(2/tauC3 + 2/tauC2 + 1/tauC1)) + aC3*tauC2*(p*(p*rotation - 2*rotation*t + 2*rotation*tauC2 + t**2 - 2*t*tauC2 + 2*tauC2**2)*np.exp(t/tauC2) - 2*rotation*tauC2**2*np.exp(p/tauC2) + 2*tauC2**2*(-p + rotation))*np.exp(t*(2/tauC3 + 1/tauC2 + 2/tauC1)) + aC4*tauC3*(p*(p*rotation - 2*rotation*t + 2*rotation*tauC3 + t**2 - 2*t*tauC3 + 2*tauC3**2)*np.exp(t/tauC3) - 2*rotation*tauC3**2*np.exp(p/tauC3) + 2*tauC3**2*(-p + rotation))*np.exp(t*(1/tauC3 + 2/tauC2 + 2/tauC1)))*np.exp(-2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))/p)/(3*rotation*(p - rotation))

    term3 = (-aC1*rotation*(decay - 3*tauC1)*(decay - 3*tauC2)*(decay - 3*tauC3)*(-decay*p*(np.exp(3*rotation/decay) - np.exp(3*t/decay)) + (3*p*(rotation - t) + rotation*(-2*rotation + 3*t))*np.exp(3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) - 3*aC2*tauC1*(decay - 3*tauC2)*(decay - 3*tauC3)*(decay*(p*rotation*np.exp(t/tauC1 + 3*rotation/decay) - rotation*(p - rotation)*np.exp(t*(1/tauC1 + 3/decay)) - 2*tauC1**2*np.exp(3*t/decay) - 2*tauC1*(rotation - tauC1)*np.exp(rotation/tauC1 + 3*t/decay)) - 3*tauC1*(-rotation*(p - rotation)*np.exp(t/tauC1) - 2*tauC1**2 + (p*rotation + 2*tauC1*(-rotation + tauC1))*np.exp(rotation/tauC1))*np.exp(3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC2)) - 3*(decay - 3*tauC1)*(aC3*tauC2*(decay - 3*tauC3)*(decay*(p*rotation*np.exp(t/tauC2 + 3*rotation/decay) - rotation*(p - rotation)*np.exp(t*(1/tauC2 + 3/decay)) - 2*tauC2**2*np.exp(3*t/decay) - 2*tauC2*(rotation - tauC2)*np.exp(rotation/tauC2 + 3*t/decay)) - 3*tauC2*(-rotation*(p - rotation)*np.exp(t/tauC2) - 2*tauC2**2 + (p*rotation + 2*tauC2*(-rotation + tauC2))*np.exp(rotation/tauC2))*np.exp(3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC1)) + aC4*tauC3*(decay - 3*tauC2)*(decay*(p*rotation*np.exp(t/tauC3 + 3*rotation/decay) - rotation*(p - rotation)*np.exp(t*(1/tauC3 + 3/decay)) - 2*tauC3**2*np.exp(3*t/decay) - 2*tauC3*(rotation - tauC3)*np.exp(rotation/tauC3 + 3*t/decay)) - 3*tauC3*(-rotation*(p - rotation)*np.exp(t/tauC3) - 2*tauC3**2 + (p*rotation + 2*tauC3*(-rotation + tauC3))*np.exp(rotation/tauC3))*np.exp(3*t/decay))*np.exp(t*(1/tauC2 + 1/tauC1))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 3/decay))/(3*p*rotation*(decay - 3*tauC1)*(decay - 3*tauC2)*(decay - 3*tauC3))
    
    term4 = (aC1*(decay*(np.exp(3*rotation/decay) - np.exp(3*t/decay)) + (p - 2*rotation)*np.exp(3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) - 3*(aC2*tauC1*(decay - 3*tauC2)*(decay - 3*tauC3)*(decay*(-p*rotation*(-p + rotation)*np.exp(t/tauC1 + 3*rotation/decay) + 2*p*tauC1**2*np.exp(rotation/tauC1 + 3*t/decay) - 2*rotation*tauC1**2*np.exp(p/tauC1 + 3*t/decay) - 2*tauC1**2*(p - rotation)*np.exp(3*t/decay)) + 3*tauC1*(p*(-p*rotation + rotation**2 - 2*tauC1**2)*np.exp(rotation/tauC1) + 2*rotation*tauC1**2*np.exp(p/tauC1) + 2*tauC1**2*(p - rotation))*np.exp(3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC2)) + (decay - 3*tauC1)*(aC3*tauC2*(decay - 3*tauC3)*(decay*(-p*rotation*(-p + rotation)*np.exp(t/tauC2 + 3*rotation/decay) + 2*p*tauC2**2*np.exp(rotation/tauC2 + 3*t/decay) - 2*rotation*tauC2**2*np.exp(p/tauC2 + 3*t/decay) - 2*tauC2**2*(p - rotation)*np.exp(3*t/decay)) + 3*tauC2*(p*(-p*rotation + rotation**2 - 2*tauC2**2)*np.exp(rotation/tauC2) + 2*rotation*tauC2**2*np.exp(p/tauC2) + 2*tauC2**2*(p - rotation))*np.exp(3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC1)) + aC4*tauC3*(decay - 3*tauC2)*(decay*(-p*rotation*(-p + rotation)*np.exp(t/tauC3 + 3*rotation/decay) + 2*p*tauC3**2*np.exp(rotation/tauC3 + 3*t/decay) - 2*rotation*tauC3**2*np.exp(p/tauC3 + 3*t/decay) - 2*tauC3**2*(p - rotation)*np.exp(3*t/decay)) + 3*tauC3*(p*(-p*rotation + rotation**2 - 2*tauC3**2)*np.exp(rotation/tauC3) + 2*rotation*tauC3**2*np.exp(p/tauC3) + 2*tauC3**2*(p - rotation))*np.exp(3*t/decay))*np.exp(t*(1/tauC2 + 1/tauC1))))/(p*rotation*(decay - 3*tauC1)*(decay - 3*tauC2)*(decay - 3*tauC3)*(p - rotation)))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 3/decay))/3
   
    condition1 = ((p== rotation) & (rotation==t)) | ((rotation >= t) & (t > 0) & ((p >= rotation) | (p >= t)))
   
    condition2 = (rotation >= t) & (p < rotation) & (p < t)
    
    condition3 = (p >= rotation) & (rotation < t)
   
    condition4 = (p < rotation) & (p < t) & (rotation < t)

    
    result = np.where(condition1, term1,
                    np.where(condition2, term2,
                            np.where(condition3, term3,
                                        np.where(condition4, term4,0
                                                ))))

    return result * AACO2

def AGWPPRF_Trian_Linear(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, decay, p, rotation):

    term1 = (-aC1*t**3 + aC2*(-3*t**2*tauC1 + 6*t*tauC1**2 + 6*tauC1**3*(-1 + np.exp(-t/tauC1))) + aC3*(-3*t**2*tauC2 + 6*t*tauC2**2 + 6*tauC2**3*(-1 + np.exp(-t/tauC2))) + 3*aC4*tauC3*(-t**2 + 2*t*tauC3 + 2*tauC3**2*(-1 + np.exp(-t/tauC3))))/(3*p*rotation)


    term2 = (aC1*(p**2*rotation - 3*p*rotation*t + t**2*(3*rotation - t)) - 3*(aC2*tauC1*(p*(p*rotation - 2*rotation*t + 2*rotation*tauC1 + t**2 - 2*t*tauC1 + 2*tauC1**2)*np.exp(t/tauC1) - 2*rotation*tauC1**2*np.exp(p/tauC1) + 2*tauC1**2*(-p + rotation))*np.exp(t*(2/tauC3 + 2/tauC2 + 1/tauC1)) + aC3*tauC2*(p*(p*rotation - 2*rotation*t + 2*rotation*tauC2 + t**2 - 2*t*tauC2 + 2*tauC2**2)*np.exp(t/tauC2) - 2*rotation*tauC2**2*np.exp(p/tauC2) + 2*tauC2**2*(-p + rotation))*np.exp(t*(2/tauC3 + 1/tauC2 + 2/tauC1)) + aC4*tauC3*(p*(p*rotation - 2*rotation*t + 2*rotation*tauC3 + t**2 - 2*t*tauC3 + 2*tauC3**2)*np.exp(t/tauC3) - 2*rotation*tauC3**2*np.exp(p/tauC3) + 2*tauC3**2*(-p + rotation))*np.exp(t*(1/tauC3 + 2/tauC2 + 2/tauC1)))*np.exp(-2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))/p)/(3*rotation*(p - rotation))


    term3 = (-aC1*(decay*p + 3*p*(rotation - t) + rotation*(-2*rotation + 3*t)) + 3*(-aC2*tauC1*(decay**2*(-rotation*(p - rotation)*np.exp(t/tauC1) - 2*tauC1**2 - 2*tauC1*(rotation - tauC1)*np.exp(rotation/tauC1)) - 2*decay*p*rotation*tauC1*np.exp(rotation/tauC1) + 2*p*rotation*tauC1**2*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2)) - aC3*tauC2*(decay**2*(-rotation*(p - rotation)*np.exp(t/tauC2) - 2*tauC2**2 - 2*tauC2*(rotation - tauC2)*np.exp(rotation/tauC2)) - 2*decay*p*rotation*tauC2*np.exp(rotation/tauC2) + 2*p*rotation*tauC2**2*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t*(1/tauC3 + 1/tauC1)) - aC4*tauC3*(decay**2*(-rotation*(p - rotation)*np.exp(t/tauC3) - 2*tauC3**2 - 2*tauC3*(rotation - tauC3)*np.exp(rotation/tauC3)) - 2*decay*p*rotation*tauC3*np.exp(rotation/tauC3) + 2*p*rotation*tauC3**2*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t*(1/tauC2 + 1/tauC1)))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(decay**2*rotation))/(3*p)


    term4 = (aC1*(decay**2*rotation*(2*rotation - 3*t) + 3*decay*p*(rotation - t)**2 + p*(rotation - t)**3) - 3*(aC2*tauC1*(decay**2*(rotation**2*np.exp(t/tauC1) - 2*tauC1**2 - 2*tauC1*(rotation - tauC1)*np.exp(rotation/tauC1)) + 2*decay*p*rotation*(-tauC1*np.exp(rotation/tauC1) + (rotation - t + tauC1)*np.exp(t/tauC1)) + p*rotation*(-2*tauC1**2*np.exp(rotation/tauC1) + (rotation**2 - 2*rotation*t + 2*rotation*tauC1 + t**2 - 2*t*tauC1 + 2*tauC1**2)*np.exp(t/tauC1)))*np.exp(t*(2/tauC3 + 2/tauC2 + 1/tauC1)) + aC3*tauC2*(decay**2*(rotation**2*np.exp(t/tauC2) - 2*tauC2**2 - 2*tauC2*(rotation - tauC2)*np.exp(rotation/tauC2)) + 2*decay*p*rotation*(-tauC2*np.exp(rotation/tauC2) + (rotation - t + tauC2)*np.exp(t/tauC2)) + p*rotation*(-2*tauC2**2*np.exp(rotation/tauC2) + (rotation**2 - 2*rotation*t + 2*rotation*tauC2 + t**2 - 2*t*tauC2 + 2*tauC2**2)*np.exp(t/tauC2)))*np.exp(t*(2/tauC3 + 1/tauC2 + 2/tauC1)) + aC4*tauC3*(decay**2*(rotation**2*np.exp(t/tauC3) - 2*tauC3**2 - 2*tauC3*(rotation - tauC3)*np.exp(rotation/tauC3)) + 2*decay*p*rotation*(-tauC3*np.exp(rotation/tauC3) + (rotation - t + tauC3)*np.exp(t/tauC3)) + p*rotation*(-2*tauC3**2*np.exp(rotation/tauC3) + (rotation**2 - 2*rotation*t + 2*rotation*tauC3 + t**2 - 2*t*tauC3 + 2*tauC3**2)*np.exp(t/tauC3)))*np.exp(t*(1/tauC3 + 2/tauC2 + 2/tauC1)))*np.exp(-2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))/rotation)/(3*decay**2*p)


    term5 = -aC1*(decay - p + 2*rotation)/3 + 2*(aC2*tauC1**2*(decay**2*tauC1*(-p*np.exp(rotation/tauC1) + p + rotation*(np.exp(p/tauC1) - 1)) - decay*p*rotation*(-p + rotation)*np.exp(rotation/tauC1) + p*rotation*tauC1*(-p + rotation)*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2)) + aC3*tauC2**2*(decay**2*tauC2*(-p*np.exp(rotation/tauC2) + p + rotation*(np.exp(p/tauC2) - 1)) - decay*p*rotation*(-p + rotation)*np.exp(rotation/tauC2) + p*rotation*tauC2*(-p + rotation)*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t*(1/tauC3 + 1/tauC1)) + aC4*tauC3**2*(decay**2*tauC3*(-p*np.exp(rotation/tauC3) + p + rotation*(np.exp(p/tauC3) - 1)) - decay*p*rotation*(-p + rotation)*np.exp(rotation/tauC3) + p*rotation*tauC3*(-p + rotation)*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t*(1/tauC2 + 1/tauC1)))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(decay**2*p*rotation*(p - rotation))

    term6 = (aC1*(decay**2*(p + rotation - 3*t) + 3*decay*(rotation - t)**2 + (rotation - t)**3) - 3*(aC2*tauC1*(decay**2*(p*rotation*(p - rotation)*np.exp(t/tauC1) + 2*p*tauC1**2*np.exp(rotation/tauC1) - 2*rotation*tauC1**2*np.exp(p/tauC1) + 2*tauC1**2*(-p + rotation)) + 2*decay*p*rotation*(p - rotation)*(-tauC1*np.exp(rotation/tauC1) + (rotation - t + tauC1)*np.exp(t/tauC1)) + p*rotation*(p - rotation)*(-2*tauC1**2*np.exp(rotation/tauC1) + (rotation**2 - 2*rotation*t + 2*rotation*tauC1 + t**2 - 2*t*tauC1 + 2*tauC1**2)*np.exp(t/tauC1)))*np.exp(t*(2/tauC3 + 2/tauC2 + 1/tauC1)) + aC3*tauC2*(decay**2*(p*rotation*(p - rotation)*np.exp(t/tauC2) + 2*p*tauC2**2*np.exp(rotation/tauC2) - 2*rotation*tauC2**2*np.exp(p/tauC2) + 2*tauC2**2*(-p + rotation)) + 2*decay*p*rotation*(p - rotation)*(-tauC2*np.exp(rotation/tauC2) + (rotation - t + tauC2)*np.exp(t/tauC2)) + p*rotation*(p - rotation)*(-2*tauC2**2*np.exp(rotation/tauC2) + (rotation**2 - 2*rotation*t + 2*rotation*tauC2 + t**2 - 2*t*tauC2 + 2*tauC2**2)*np.exp(t/tauC2)))*np.exp(t*(2/tauC3 + 1/tauC2 + 2/tauC1)) + aC4*tauC3*(decay**2*(p*rotation*(p - rotation)*np.exp(t/tauC3) + 2*p*tauC3**2*np.exp(rotation/tauC3) - 2*rotation*tauC3**2*np.exp(p/tauC3) + 2*tauC3**2*(-p + rotation)) + 2*decay*p*rotation*(p - rotation)*(-tauC3*np.exp(rotation/tauC3) + (rotation - t + tauC3)*np.exp(t/tauC3)) + p*rotation*(p - rotation)*(-2*tauC3**2*np.exp(rotation/tauC3) + (rotation**2 - 2*rotation*t + 2*rotation*tauC3 + t**2 - 2*t*tauC3 + 2*tauC3**2)*np.exp(t/tauC3)))*np.exp(t*(1/tauC3 + 2/tauC2 + 2/tauC1)))*np.exp(-2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(p*rotation*(p - rotation)))/(3*decay**2)


    condition1 = (rotation >= t) & (t > 0) & (decay + rotation >= t) & ((p >= rotation) | (p >= t))

    condition2 = (rotation >= t) & (p < rotation) & (p < t) & (decay + rotation >= t)
    
    condition3 = (p >= rotation) & (rotation < t) & (decay + rotation < t)
   
    condition4 = (p >= rotation) & (rotation < t) & (decay + rotation >= t)

    condition5 = (p < rotation) & (p < t) & (rotation < t) & (decay + rotation < t)

    condition6 = (p < rotation) & (p < t) & (rotation < t) & (decay + rotation >= t)


    
    result = np.where(condition1, term1,
                    np.where(condition2, term2,
                            np.where(condition3, term3,
                                        np.where(condition4, term4,
                                                 np.where(condition5, term5,
                                                          np.where(condition6, term6, 0
                                                ))))))

    return result * AACO2

def AGWPPRF_Trian_Constant(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, decay, p, rotation):

    term1 = (-aC1*t**3 + aC2*(-3*t**2*tauC1 + 6*t*tauC1**2 + 6*tauC1**3*(-1 + np.exp(-t/tauC1))) + aC3*(-3*t**2*tauC2 + 6*t*tauC2**2 + 6*tauC2**3*(-1 + np.exp(-t/tauC2))) + 3*aC4*tauC3*(-t**2 + 2*t*tauC3 + 2*tauC3**2*(-1 + np.exp(-t/tauC3))))/(3*p*rotation)

    term2 = (-aC1*(3*decay*p + 6*p*(rotation - t) - 4*rotation**2 + 6*rotation*t) - 6*(aC2*tauC1*(decay*(-rotation*(p - rotation)*np.exp(t/tauC1) - 2*tauC1**2 - 2*tauC1*(rotation - tauC1)*np.exp(rotation/tauC1)) + p*rotation*tauC1*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t*(2/tauC3 + 2/tauC2 + 1/tauC1)) + aC3*tauC2*(decay*(-rotation*(p - rotation)*np.exp(t/tauC2) - 2*tauC2**2 - 2*tauC2*(rotation - tauC2)*np.exp(rotation/tauC2)) + p*rotation*tauC2*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t*(2/tauC3 + 1/tauC2 + 2/tauC1)) + aC4*tauC3*(decay*(-rotation*(p - rotation)*np.exp(t/tauC3) - 2*tauC3**2 - 2*tauC3*(rotation - tauC3)*np.exp(rotation/tauC3)) + p*rotation*tauC3*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t*(1/tauC3 + 2/tauC2 + 2/tauC1)))*np.exp(-2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(decay*rotation))/(6*p)

    term3 = (aC1*(2*decay*rotation*(2*rotation - 3*t) + 3*p*(rotation - t)**2) - 6*(aC2*tauC1*(decay*(rotation**2*np.exp(t/tauC1) - 2*tauC1**2 - 2*tauC1*(rotation - tauC1)*np.exp(rotation/tauC1)) + p*rotation*(-tauC1*np.exp(rotation/tauC1) + (rotation - t + tauC1)*np.exp(t/tauC1)))*np.exp(t*(2/tauC3 + 2/tauC2 + 1/tauC1)) + aC3*tauC2*(decay*(rotation**2*np.exp(t/tauC2) - 2*tauC2**2 - 2*tauC2*(rotation - tauC2)*np.exp(rotation/tauC2)) + p*rotation*(-tauC2*np.exp(rotation/tauC2) + (rotation - t + tauC2)*np.exp(t/tauC2)))*np.exp(t*(2/tauC3 + 1/tauC2 + 2/tauC1)) + aC4*tauC3*(decay*(rotation**2*np.exp(t/tauC3) - 2*tauC3**2 - 2*tauC3*(rotation - tauC3)*np.exp(rotation/tauC3)) + p*rotation*(-tauC3*np.exp(rotation/tauC3) + (rotation - t + tauC3)*np.exp(t/tauC3)))*np.exp(t*(1/tauC3 + 2/tauC2 + 2/tauC1)))*np.exp(-2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))/rotation)/(6*decay*p)

    term4 = (aC1*(p**2*rotation - 3*p*rotation*t + t**2*(3*rotation - t)) - 3*(aC2*tauC1*(p*(p*rotation - 2*rotation*t + 2*rotation*tauC1 + t**2 - 2*t*tauC1 + 2*tauC1**2)*np.exp(t/tauC1) - 2*rotation*tauC1**2*np.exp(p/tauC1) + 2*tauC1**2*(-p + rotation))*np.exp(t*(2/tauC3 + 2/tauC2 + 1/tauC1)) + aC3*tauC2*(p*(p*rotation - 2*rotation*t + 2*rotation*tauC2 + t**2 - 2*t*tauC2 + 2*tauC2**2)*np.exp(t/tauC2) - 2*rotation*tauC2**2*np.exp(p/tauC2) + 2*tauC2**2*(-p + rotation))*np.exp(t*(2/tauC3 + 1/tauC2 + 2/tauC1)) + aC4*tauC3*(p*(p*rotation - 2*rotation*t + 2*rotation*tauC3 + t**2 - 2*t*tauC3 + 2*tauC3**2)*np.exp(t/tauC3) - 2*rotation*tauC3**2*np.exp(p/tauC3) + 2*tauC3**2*(-p + rotation))*np.exp(t*(1/tauC3 + 2/tauC2 + 2/tauC1)))*np.exp(-2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))/p)/(3*rotation*(p - rotation))

    term5 = (-aC1*decay*p*rotation*(p - rotation)*(3*decay - 2*p + 4*rotation)*np.exp(2*t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + 6*aC2*tauC1**2*(2*decay*rotation*tauC1*np.exp(p/tauC1) + 2*decay*tauC1*(p - rotation) + p*rotation*(-p + rotation)*np.exp((decay + rotation)/tauC1) + p*(-2*decay*tauC1 + p*rotation - rotation**2)*np.exp(rotation/tauC1))*np.exp(t*(2/tauC3 + 2/tauC2 + 1/tauC1)) + 6*aC3*tauC2**2*(2*decay*rotation*tauC2*np.exp(p/tauC2) + 2*decay*tauC2*(p - rotation) + p*rotation*(-p + rotation)*np.exp((decay + rotation)/tauC2) + p*(-2*decay*tauC2 + p*rotation - rotation**2)*np.exp(rotation/tauC2))*np.exp(t*(2/tauC3 + 1/tauC2 + 2/tauC1)) - 6*aC4*tauC3**2*(-2*decay*rotation*tauC3*np.exp(p/tauC3) + 2*decay*tauC3*(-p + rotation) - p*rotation*(-p + rotation)*np.exp((decay + rotation)/tauC3) + p*(2*decay*tauC3 - p*rotation + rotation**2)*np.exp(rotation/tauC3))*np.exp(t*(1/tauC3 + 2/tauC2 + 2/tauC1)))*np.exp(-2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(6*decay*p*rotation*(p - rotation))

    term6 = (aC1*(2*decay*(p + rotation - 3*t) + 3*(rotation - t)**2) - 6*(aC2*tauC1*(decay*(p*rotation*(p - rotation)*np.exp(t/tauC1) + 2*p*tauC1**2*np.exp(rotation/tauC1) - 2*rotation*tauC1**2*np.exp(p/tauC1) + 2*tauC1**2*(-p + rotation)) + p*rotation*(p - rotation)*(-tauC1*np.exp(rotation/tauC1) + (rotation - t + tauC1)*np.exp(t/tauC1)))*np.exp(t*(2/tauC3 + 2/tauC2 + 1/tauC1)) + aC3*tauC2*(decay*(p*rotation*(p - rotation)*np.exp(t/tauC2) + 2*p*tauC2**2*np.exp(rotation/tauC2) - 2*rotation*tauC2**2*np.exp(p/tauC2) + 2*tauC2**2*(-p + rotation)) + p*rotation*(p - rotation)*(-tauC2*np.exp(rotation/tauC2) + (rotation - t + tauC2)*np.exp(t/tauC2)))*np.exp(t*(2/tauC3 + 1/tauC2 + 2/tauC1)) + aC4*tauC3*(decay*(p*rotation*(p - rotation)*np.exp(t/tauC3) + 2*p*tauC3**2*np.exp(rotation/tauC3) - 2*rotation*tauC3**2*np.exp(p/tauC3) + 2*tauC3**2*(-p + rotation)) + p*rotation*(p - rotation)*(-tauC3*np.exp(rotation/tauC3) + (rotation - t + tauC3)*np.exp(t/tauC3)))*np.exp(t*(1/tauC3 + 2/tauC2 + 2/tauC1)))*np.exp(-2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(p*rotation*(p - rotation)))/(6*decay)


    condition1 = (rotation >= t) & (t > 0) & (decay + rotation >= t) & ((p >= rotation) | (p >= t))

    condition2 = (p >= rotation) & (rotation < t) & (decay + rotation < t)
    
    condition3 = (p >= rotation) & (rotation < t) & (decay + rotation >= t)
   
    condition4 = (rotation >= t) & (p < rotation) & (p < t) & (decay + rotation >= t)

    condition5 = (p < rotation) & (p < t) & (rotation < t) & (decay + rotation < t)

    condition6 = (p < rotation) & (p < t) & (rotation < t) & (decay + rotation >= t)


    
    result = np.where(condition1, term1,
                    np.where(condition2, term2,
                            np.where(condition3, term3,
                                        np.where(condition4, term4,
                                                 np.where(condition5, term5,
                                                          np.where(condition6, term6, 0
                                                ))))))

    return result * AACO2

def AGWPPRF_Trian_Impulse(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, decay, p, rotation):

    condition1 = (p >= rotation) & (p > 0) & (p < t)

    condition2 = (p < rotation) & (rotation < t) & ((p <= 0) | ((t <= 0) & (p > t)))

    condition3 = (p >= t) & (p > 0) & ((p == t) | (t > 0)) & ((p >= rotation) | (rotation >= t))

    condition4 = (rotation >= t) & (p <= 0) & (p < rotation) & (p < t)

    condition5 = (p > 0) & (p < rotation) & (p < t) & (rotation < t)

    condition6 = (p > 0) & (p < rotation) & (rotation < t) & ((p == t) | ((p >= t) & (t > 0)))

    condition7 = (rotation >= t) & (p > 0) & (p < rotation) & (p < t)

    commonterm = -AACO2*(aC1*(decay + rotation - t)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + aC2*tauC1*(-np.exp(t/tauC1) + np.exp((decay + rotation)/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2)) + (aC3*tauC2*(-np.exp(t/tauC2) + np.exp((decay + rotation)/tauC2))*np.exp(t/tauC3) + aC4*tauC3*(-np.exp(t/tauC3) + np.exp((decay + rotation)/tauC3))*np.exp(t/tauC2))*np.exp(t/tauC1))*UnitStep(decay + rotation, -decay - rotation + t)*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1))

    term1 = (aC1*p**2*(2*p - 3*t) - 3*(aC2*tauC1*(p**2*np.exp(t/tauC1) - 2*tauC1**2 - 2*tauC1*(p - tauC1)*np.exp(p/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2)) + (aC3*tauC2*(p**2*np.exp(t/tauC2) - 2*tauC2**2 - 2*tauC2*(p - tauC2)*np.exp(p/tauC2))*np.exp(t/tauC3) + aC4*tauC3*(p**2*np.exp(t/tauC3) - 2*tauC3**2 - 2*tauC3*(p - tauC3)*np.exp(p/tauC3))*np.exp(t/tauC2))*np.exp(t/tauC1))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1)))/(3*p*rotation)

    term2 = (aC1*(p - rotation)**2*(2*p + rotation - 3*t) - 3*(aC2*tauC1*(-2*tauC1**2*np.exp(rotation/tauC1) + 2*tauC1*(-p + rotation + tauC1)*np.exp(p/tauC1) + (p - rotation)**2*np.exp(t/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2)) + (aC3*tauC2*(-2*tauC2**2*np.exp(rotation/tauC2) + 2*tauC2*(-p + rotation + tauC2)*np.exp(p/tauC2) + (p - rotation)**2*np.exp(t/tauC2))*np.exp(t/tauC3) + aC4*tauC3*(-2*tauC3**2*np.exp(rotation/tauC3) + 2*tauC3*(-p + rotation + tauC3)*np.exp(p/tauC3) + (p - rotation)**2*np.exp(t/tauC3))*np.exp(t/tauC2))*np.exp(t/tauC1))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1)))/(3*rotation*(-p + rotation))

    term3 = (-aC1*t**3 + aC2*(-3*t**2*tauC1 + 6*t*tauC1**2 + 6*tauC1**3*(-1 + np.exp(-t/tauC1))) + aC3*(-3*t**2*tauC2 + 6*t*tauC2**2 + 6*tauC2**3*(-1 + np.exp(-t/tauC2))) + 3*aC4*tauC3*(-t**2 + 2*t*tauC3 + 2*tauC3**2*(-1 + np.exp(-t/tauC3))))/(3*p*rotation)

    term4 = (aC1*(p - t)**2*(2*p - 3*rotation + t) + 3*(aC2*tauC1*(-2*tauC1*(-p + rotation + tauC1)*np.exp(p/tauC1) + (-p**2 + 2*p*rotation - 2*rotation*t + 2*rotation*tauC1 + t**2 - 2*t*tauC1 + 2*tauC1**2)*np.exp(t/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2)) + aC3*tauC2*(-2*tauC2*(-p + rotation + tauC2)*np.exp(p/tauC2) + (-p**2 + 2*p*rotation - 2*rotation*t + 2*rotation*tauC2 + t**2 - 2*t*tauC2 + 2*tauC2**2)*np.exp(t/tauC2))*np.exp(t*(1/tauC3 + 1/tauC1)) + aC4*tauC3*(-2*tauC3*(-p + rotation + tauC3)*np.exp(p/tauC3) + (-p**2 + 2*p*rotation - 2*rotation*t + 2*rotation*tauC3 + t**2 - 2*t*tauC3 + 2*tauC3**2)*np.exp(t/tauC3))*np.exp(t*(1/tauC2 + 1/tauC1)))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1)))/(3*rotation*(-p + rotation))

    term5 = (aC1*p*rotation*(p - rotation)*(p + rotation - 3*t)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) - 3*aC2*tauC1*(p*rotation*(p - rotation)*np.exp(t/tauC1) + 2*p*tauC1**2*np.exp(rotation/tauC1) - 2*rotation*tauC1**2*np.exp(p/tauC1) + 2*tauC1**2*(-p + rotation))*np.exp(t*(1/tauC3 + 1/tauC2)) + 3*(-aC3*tauC2*(p*rotation*(p - rotation)*np.exp(t/tauC2) + 2*p*tauC2**2*np.exp(rotation/tauC2) - 2*rotation*tauC2**2*np.exp(p/tauC2) + 2*tauC2**2*(-p + rotation))*np.exp(t/tauC3) - aC4*tauC3*(p*rotation*(p - rotation)*np.exp(t/tauC3) + 2*p*tauC3**2*np.exp(rotation/tauC3) - 2*rotation*tauC3**2*np.exp(p/tauC3) + 2*tauC3**2*(-p + rotation))*np.exp(t/tauC2))*np.exp(t/tauC1))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(3*p*rotation*(p - rotation))

    term6 = (-aC1*(p - rotation)*(2*p**3 - p**2*(rotation + 3*t) - p*rotation*(rotation - 3*t) + t**3)*np.exp(2*t*(1/tauC3 + 1/tauC2 + 1/tauC1)) - 3*aC2*tauC1*(2*p*tauC1**2*np.exp(rotation/tauC1 + t*(2/tauC3 + 2/tauC2 + 1/tauC1)) + 2*p*tauC1*(p - rotation - tauC1)*np.exp(p/tauC1 + t*(2/tauC3 + 2/tauC2 + 1/tauC1)) - 2*tauC1**2*(p - rotation)*np.exp(t*(2/tauC3 + 2/tauC2 + 1/tauC1)) + (p - rotation)*(-p**2 + p*rotation + t**2 - 2*t*tauC1 + 2*tauC1**2)*np.exp(2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))) - 3*aC3*tauC2*(2*p*tauC2**2*np.exp(rotation/tauC2 + t*(2/tauC3 + 1/tauC2 + 2/tauC1)) + 2*p*tauC2*(p - rotation - tauC2)*np.exp(p/tauC2 + t*(2/tauC3 + 1/tauC2 + 2/tauC1)) - 2*tauC2**2*(p - rotation)*np.exp(t*(2/tauC3 + 1/tauC2 + 2/tauC1)) + (p - rotation)*(-p**2 + p*rotation + t**2 - 2*t*tauC2 + 2*tauC2**2)*np.exp(2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))) - 3*aC4*tauC3*(2*p*tauC3**2*np.exp(rotation/tauC3 + t*(1/tauC3 + 2/tauC2 + 2/tauC1)) - 2*p*tauC3*(-p + rotation + tauC3)*np.exp(p/tauC3 + t*(1/tauC3 + 2/tauC2 + 2/tauC1)) - 2*tauC3**2*(p - rotation)*np.exp(t*(1/tauC3 + 2/tauC2 + 2/tauC1)) + (p - rotation)*(-p**2 + p*rotation + t**2 - 2*t*tauC3 + 2*tauC3**2)*np.exp(2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))))*np.exp(-2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))/(3*p*rotation*(p - rotation))

    term7 = (aC1*(p**2*rotation - 3*p*rotation*t + t**2*(3*rotation - t)) - 3*(aC2*tauC1*(p*(p*rotation - 2*rotation*t + 2*rotation*tauC1 + t**2 - 2*t*tauC1 + 2*tauC1**2)*np.exp(t/tauC1) - 2*rotation*tauC1**2*np.exp(p/tauC1) + 2*tauC1**2*(-p + rotation))*np.exp(t*(2/tauC3 + 2/tauC2 + 1/tauC1)) + aC3*tauC2*(p*(p*rotation - 2*rotation*t + 2*rotation*tauC2 + t**2 - 2*t*tauC2 + 2*tauC2**2)*np.exp(t/tauC2) - 2*rotation*tauC2**2*np.exp(p/tauC2) + 2*tauC2**2*(-p + rotation))*np.exp(t*(2/tauC3 + 1/tauC2 + 2/tauC1)) + aC4*tauC3*(p*(p*rotation - 2*rotation*t + 2*rotation*tauC3 + t**2 - 2*t*tauC3 + 2*tauC3**2)*np.exp(t/tauC3) - 2*rotation*tauC3**2*np.exp(p/tauC3) + 2*tauC3**2*(-p + rotation))*np.exp(t*(1/tauC3 + 2/tauC2 + 2/tauC1)))*np.exp(-2*t*(1/tauC3 + 1/tauC2 + 1/tauC1))/p)/(3*rotation*(p - rotation))

    result = AACO2 * np.where(condition1, term1,
                        np.where(condition2, term2,
                                np.where(condition3, term3,
                                            np.where(condition4, term4,
                                                    np.where(condition5, term5,
                                                            np.where(condition6, term6, 
                                                                    np.where(condition7, term7, 0
                                                    )))))))

    result += commonterm

    return  result

def DAGWPNonCO2(t, tauNonCO2, kPulseT,  aT1, tauT1, aT2, tauT2, AANonCO2, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, gamma, aS1, aS2, aS3, tauS1, tauS2, tauS3):

    term1 = -aC1*aS1*aT1*tauT1*t*(1 - np.exp(-t/tauS1))/(tauT1 - tauNonCO2) - aC1*aS1*aT2*tauT2*t*(1 - np.exp(-t/tauS1))/(tauT2 - tauNonCO2) - aC1*aS2*aT1*tauT1*t*(1 - np.exp(-t/tauS2))/(tauT1 - tauNonCO2) - aC1*aS2*aT2*tauT2*t*(1 - np.exp(-t/tauS2))/(tauT2 - tauNonCO2) - aC1*aS3*aT1*tauT1*t*(1 - np.exp(-t/tauS3))/(tauT1 - tauNonCO2) - aC1*aS3*aT2*tauT2*t*(1 - np.exp(-t/tauS3))/(tauT2 - tauNonCO2) - aC1*aT1*tauT1**2/(tauT1 - tauNonCO2) + aC1*aT1*tauT1**2*np.exp(-t/tauT1)/(tauT1 - tauNonCO2) + aC1*aT1*tauT1*t/(tauT1 - tauNonCO2) - aC1*aT2*tauT2**2/(tauT2 - tauNonCO2) + aC1*aT2*tauT2**2*np.exp(-t/tauT2)/(tauT2 - tauNonCO2) + aC1*aT2*tauT2*t/(tauT2 - tauNonCO2) - aC2*aS1*aT1*tauT1*tauC1*(1 - np.exp(-t/tauS1))/(tauT1 - tauNonCO2) - aC2*aS1*aT2*tauT2*tauC1*(1 - np.exp(-t/tauS1))/(tauT2 - tauNonCO2) - aC2*aS2*aT1*tauT1*tauC1*(1 - np.exp(-t/tauS2))/(tauT1 - tauNonCO2) - aC2*aS2*aT2*tauT2*tauC1*(1 - np.exp(-t/tauS2))/(tauT2 - tauNonCO2) - aC2*aS3*aT1*tauT1*tauC1*(1 - np.exp(-t/tauS3))/(tauT1 - tauNonCO2) - aC2*aS3*aT2*tauT2*tauC1*(1 - np.exp(-t/tauS3))/(tauT2 - tauNonCO2) + aC2*aT1*tauT1*tauC1**2*np.exp(-t/tauC1)/((tauT1 - tauC1)*(tauT1 - tauNonCO2)) - aC2*aT1*tauT1*tauC1**2*np.exp(-t/tauT1)/((tauT1 - tauC1)*(tauT1 - tauNonCO2)) + aC2*aT1*tauT1*tauC1/(tauT1 - tauNonCO2) - aC2*aT1*tauT1*tauC1*np.exp(-t/tauT1)/(tauT1 - tauNonCO2) + aC2*aT2*tauT2*tauC1**2*np.exp(-t/tauC1)/((tauT2 - tauC1)*(tauT2 - tauNonCO2)) - aC2*aT2*tauT2*tauC1**2*np.exp(-t/tauT2)/((tauT2 - tauC1)*(tauT2 - tauNonCO2)) + aC2*aT2*tauT2*tauC1/(tauT2 - tauNonCO2) - aC2*aT2*tauT2*tauC1*np.exp(-t/tauT2)/(tauT2 - tauNonCO2) - aC3*aS1*aT1*tauT1*tauC2*(1 - np.exp(-t/tauS1))/(tauT1 - tauNonCO2) - aC3*aS1*aT2*tauT2*tauC2*(1 - np.exp(-t/tauS1))/(tauT2 - tauNonCO2) - aC3*aS2*aT1*tauT1*tauC2*(1 - np.exp(-t/tauS2))/(tauT1 - tauNonCO2) - aC3*aS2*aT2*tauT2*tauC2*(1 - np.exp(-t/tauS2))/(tauT2 - tauNonCO2) - aC3*aS3*aT1*tauT1*tauC2*(1 - np.exp(-t/tauS3))/(tauT1 - tauNonCO2) - aC3*aS3*aT2*tauT2*tauC2*(1 - np.exp(-t/tauS3))/(tauT2 - tauNonCO2) + aC3*aT1*tauT1*tauC2**2*np.exp(-t/tauC2)/((tauT1 - tauC2)*(tauT1 - tauNonCO2)) - aC3*aT1*tauT1*tauC2**2*np.exp(-t/tauT1)/((tauT1 - tauC2)*(tauT1 - tauNonCO2)) + aC3*aT1*tauT1*tauC2/(tauT1 - tauNonCO2) - aC3*aT1*tauT1*tauC2*np.exp(-t/tauT1)/(tauT1 - tauNonCO2) + aC3*aT2*tauT2*tauC2**2*np.exp(-t/tauC2)/((tauT2 - tauC2)*(tauT2 - tauNonCO2)) - aC3*aT2*tauT2*tauC2**2*np.exp(-t/tauT2)/((tauT2 - tauC2)*(tauT2 - tauNonCO2)) + aC3*aT2*tauT2*tauC2/(tauT2 - tauNonCO2) - aC3*aT2*tauT2*tauC2*np.exp(-t/tauT2)/(tauT2 - tauNonCO2) - aC4*aS1*aT1*tauT1*tauC3*(1 - np.exp(-t/tauS1))/(tauT1 - tauNonCO2) - aC4*aS1*aT2*tauT2*tauC3*(1 - np.exp(-t/tauS1))/(tauT2 - tauNonCO2) - aC4*aS2*aT1*tauT1*tauC3*(1 - np.exp(-t/tauS2))/(tauT1 - tauNonCO2) - aC4*aS2*aT2*tauT2*tauC3*(1 - np.exp(-t/tauS2))/(tauT2 - tauNonCO2) - aC4*aS3*aT1*tauT1*tauC3*(1 - np.exp(-t/tauS3))/(tauT1 - tauNonCO2) - aC4*aS3*aT2*tauT2*tauC3*(1 - np.exp(-t/tauS3))/(tauT2 - tauNonCO2) + aC4*aT1*tauT1*tauC3**2*np.exp(-t/tauC3)/((tauT1 - tauC3)*(tauT1 - tauNonCO2)) - aC4*aT1*tauT1*tauC3**2*np.exp(-t/tauT1)/((tauT1 - tauC3)*(tauT1 - tauNonCO2)) + aC4*aT1*tauT1*tauC3/(tauT1 - tauNonCO2) - aC4*aT1*tauT1*tauC3*np.exp(-t/tauT1)/(tauT1 - tauNonCO2) + aC4*aT2*tauT2*tauC3/(tauT2 - tauNonCO2) - aC4*aT2*tauT2*tauC3*np.exp(-t/tauT2)/(tauT2 - tauNonCO2)
    term2 = aC1*aS1*aT1*t*tauNonCO2*(1 - np.exp(-t/tauS1))/(tauT1 - tauNonCO2) + aC1*aS1*aT2*t*tauNonCO2*(1 - np.exp(-t/tauS1))/(tauT2 - tauNonCO2) + aC1*aS2*aT1*t*tauNonCO2*(1 - np.exp(-t/tauS2))/(tauT1 - tauNonCO2) + aC1*aS2*aT2*t*tauNonCO2*(1 - np.exp(-t/tauS2))/(tauT2 - tauNonCO2) + aC1*aS3*aT1*t*tauNonCO2*(1 - np.exp(-t/tauS3))/(tauT1 - tauNonCO2) + aC1*aS3*aT2*t*tauNonCO2*(1 - np.exp(-t/tauS3))/(tauT2 - tauNonCO2) - aC1*aT1*t*tauNonCO2/(tauT1 - tauNonCO2) + aC1*aT1*tauNonCO2**2/(tauT1 - tauNonCO2) + aC1*aT1*tauNonCO2**2*np.exp(-t/tauNonCO2)/(-tauT1 + tauNonCO2) - aC1*aT2*t*tauNonCO2/(tauT2 - tauNonCO2) + aC1*aT2*tauNonCO2**2/(tauT2 - tauNonCO2) + aC1*aT2*tauNonCO2**2*np.exp(-t/tauNonCO2)/(-tauT2 + tauNonCO2) + aC2*aS1*aT1*tauC1*tauNonCO2*(1 - np.exp(-t/tauS1))/(tauT1 - tauNonCO2) + aC2*aS1*aT2*tauC1*tauNonCO2*(1 - np.exp(-t/tauS1))/(tauT2 - tauNonCO2) + aC2*aS2*aT1*tauC1*tauNonCO2*(1 - np.exp(-t/tauS2))/(tauT1 - tauNonCO2) + aC2*aS2*aT2*tauC1*tauNonCO2*(1 - np.exp(-t/tauS2))/(tauT2 - tauNonCO2) + aC2*aS3*aT1*tauC1*tauNonCO2*(1 - np.exp(-t/tauS3))/(tauT1 - tauNonCO2) + aC2*aS3*aT2*tauC1*tauNonCO2*(1 - np.exp(-t/tauS3))/(tauT2 - tauNonCO2) + aC2*aT1*tauC1**2*tauNonCO2*np.exp(-t/tauC1)/((tauT1 - tauNonCO2)*(tauC1 - tauNonCO2)) - aC2*aT1*tauC1**2*tauNonCO2*np.exp(-t/tauNonCO2)/((-tauT1 + tauNonCO2)*(-tauC1 + tauNonCO2)) - aC2*aT1*tauC1*tauNonCO2/(tauT1 - tauNonCO2) + aC2*aT1*tauC1*tauNonCO2*np.exp(-t/tauNonCO2)/(tauT1 - tauNonCO2) + aC2*aT2*tauC1**2*tauNonCO2*np.exp(-t/tauC1)/((tauT2 - tauNonCO2)*(tauC1 - tauNonCO2)) - aC2*aT2*tauC1**2*tauNonCO2*np.exp(-t/tauNonCO2)/((-tauT2 + tauNonCO2)*(-tauC1 + tauNonCO2)) - aC2*aT2*tauC1*tauNonCO2/(tauT2 - tauNonCO2) + aC2*aT2*tauC1*tauNonCO2*np.exp(-t/tauNonCO2)/(tauT2 - tauNonCO2) + aC3*aS1*aT1*tauC2*tauNonCO2*(1 - np.exp(-t/tauS1))/(tauT1 - tauNonCO2) + aC3*aS1*aT2*tauC2*tauNonCO2*(1 - np.exp(-t/tauS1))/(tauT2 - tauNonCO2) + aC3*aS2*aT1*tauC2*tauNonCO2*(1 - np.exp(-t/tauS2))/(tauT1 - tauNonCO2) + aC3*aS2*aT2*tauC2*tauNonCO2*(1 - np.exp(-t/tauS2))/(tauT2 - tauNonCO2) + aC3*aS3*aT1*tauC2*tauNonCO2*(1 - np.exp(-t/tauS3))/(tauT1 - tauNonCO2) + aC3*aS3*aT2*tauC2*tauNonCO2*(1 - np.exp(-t/tauS3))/(tauT2 - tauNonCO2) + aC3*aT1*tauC2**2*tauNonCO2*np.exp(-t/tauC2)/((tauT1 - tauNonCO2)*(tauC2 - tauNonCO2)) - aC3*aT1*tauC2**2*tauNonCO2*np.exp(-t/tauNonCO2)/((-tauT1 + tauNonCO2)*(-tauC2 + tauNonCO2)) - aC3*aT1*tauC2*tauNonCO2/(tauT1 - tauNonCO2) + aC3*aT1*tauC2*tauNonCO2*np.exp(-t/tauNonCO2)/(tauT1 - tauNonCO2) + aC3*aT2*tauC2**2*tauNonCO2*np.exp(-t/tauC2)/((tauT2 - tauNonCO2)*(tauC2 - tauNonCO2)) - aC3*aT2*tauC2**2*tauNonCO2*np.exp(-t/tauNonCO2)/((-tauT2 + tauNonCO2)*(-tauC2 + tauNonCO2)) - aC3*aT2*tauC2*tauNonCO2/(tauT2 - tauNonCO2) + aC3*aT2*tauC2*tauNonCO2*np.exp(-t/tauNonCO2)/(tauT2 - tauNonCO2) + aC4*aS1*aT1*tauC3*tauNonCO2*(1 - np.exp(-t/tauS1))/(tauT1 - tauNonCO2) + aC4*aS1*aT2*tauC3*tauNonCO2*(1 - np.exp(-t/tauS1))/(tauT2 - tauNonCO2) + aC4*aS2*aT1*tauC3*tauNonCO2*(1 - np.exp(-t/tauS2))/(tauT1 - tauNonCO2) + aC4*aS2*aT2*tauC3*tauNonCO2*(1 - np.exp(-t/tauS2))/(tauT2 - tauNonCO2) + aC4*aS3*aT1*tauC3*tauNonCO2*(1 - np.exp(-t/tauS3))/(tauT1 - tauNonCO2) + aC4*aS3*aT2*tauC3*tauNonCO2*(1 - np.exp(-t/tauS3))/(tauT2 - tauNonCO2) + aC4*aT1*tauC3**2*tauNonCO2*np.exp(-t/tauC3)/((tauT1 - tauNonCO2)*(tauC3 - tauNonCO2)) - aC4*aT1*tauC3**2*tauNonCO2*np.exp(-t/tauNonCO2)/((-tauT1 + tauNonCO2)*(-tauC3 + tauNonCO2)) - aC4*aT1*tauC3*tauNonCO2/(tauT1 - tauNonCO2) + aC4*aT1*tauC3*tauNonCO2*np.exp(-t/tauNonCO2)/(tauT1 - tauNonCO2) + aC4*aT2*tauT2*tauC3**2*np.exp(-t/tauC3)/((tauT2 - tauC3)*(tauT2 - tauNonCO2)) - aC4*aT2*tauT2*tauC3**2*np.exp(-t/tauT2)/((tauT2 - tauC3)*(tauT2 - tauNonCO2)) + aC4*aT2*tauC3**2*tauNonCO2*np.exp(-t/tauC3)/((tauT2 - tauNonCO2)*(tauC3 - tauNonCO2)) - aC4*aT2*tauC3*tauNonCO2/(tauT2 - tauNonCO2) + aC4*aT2*tauC3*tauNonCO2*np.exp(-t/tauNonCO2)/(tauT2 - tauNonCO2)
    term3 = -aC1*aS1*aT1*tauT1**3*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)*(tauT1 - tauS1)) - aC1*aS1*aT2*tauT2**3*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT2 - tauNonCO2)*(tauT2 - tauS1)) + aC2*aS1*aT1*tauT1**2*tauC1**2*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauT1 - tauS1)) + aC2*aS1*aT1*tauT1**2*tauC1*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)*(tauT1 - tauS1)) - aC2*aS1*aT1*tauT1*tauC1**3*(-np.exp(-t/tauS1) + np.exp(-t/tauC1))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauC1 - tauS1)) + aC2*aS1*aT1*tauC1**3*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauC1))/((-tauT1 + tauNonCO2)*(tauC1 - tauNonCO2)*(tauC1 - tauS1)) - aC2*aS1*aT1*tauC1*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT1 - tauNonCO2)*(tauNonCO2 - tauS1)) + aC2*aS1*aT2*tauT2**2*tauC1**2*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauT2 - tauS1)) + aC2*aS1*aT2*tauT2**2*tauC1*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT2 - tauNonCO2)*(tauT2 - tauS1)) - aC2*aS1*aT2*tauT2*tauC1**3*(-np.exp(-t/tauS1) + np.exp(-t/tauC1))/((tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauC1 - tauS1)) + aC2*aS1*aT2*tauC1**3*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauC1))/((-tauT2 + tauNonCO2)*(tauC1 - tauNonCO2)*(tauC1 - tauS1)) - aC2*aS1*aT2*tauC1*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT2 - tauNonCO2)*(tauNonCO2 - tauS1)) + aC3*aS1*aT1*tauT1**2*tauC2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauT1 - tauS1)) + aC3*aS1*aT1*tauT1**2*tauC2*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)*(tauT1 - tauS1)) - aC3*aS1*aT1*tauT1*tauC2**3*(-np.exp(-t/tauS1) + np.exp(-t/tauC2))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauC2 - tauS1)) + aC3*aS1*aT1*tauC2**3*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauC2))/((-tauT1 + tauNonCO2)*(tauC2 - tauNonCO2)*(tauC2 - tauS1)) - aC3*aS1*aT1*tauC2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT1 - tauNonCO2)*(tauNonCO2 - tauS1)) + aC3*aS1*aT2*tauT2**2*tauC2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauT2 - tauS1)) + aC3*aS1*aT2*tauT2**2*tauC2*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT2 - tauNonCO2)*(tauT2 - tauS1)) - aC3*aS1*aT2*tauT2*tauC2**3*(-np.exp(-t/tauS1) + np.exp(-t/tauC2))/((tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauC2 - tauS1)) + aC3*aS1*aT2*tauC2**3*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauC2))/((-tauT2 + tauNonCO2)*(tauC2 - tauNonCO2)*(tauC2 - tauS1)) + aC4*aS1*aT1*tauT1**2*tauC3**2*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauT1 - tauS1)) + aC4*aS1*aT1*tauT1**2*tauC3*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)*(tauT1 - tauS1)) - aC4*aS1*aT1*tauT1*tauC3**3*(-np.exp(-t/tauS1) + np.exp(-t/tauC3))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauC3 - tauS1)) + aC4*aS1*aT1*tauC3**3*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauC3))/((-tauT1 + tauNonCO2)*(tauC3 - tauNonCO2)*(tauC3 - tauS1)) - aC4*aS1*aT1*tauC3*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT1 - tauNonCO2)*(tauNonCO2 - tauS1)) + aC4*aS1*aT2*tauT2**2*tauC3**2*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauT2 - tauS1)) + aC4*aS1*aT2*tauT2**2*tauC3*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT2 - tauNonCO2)*(tauT2 - tauS1)) - aC4*aS1*aT2*tauT2*tauC3**3*(-np.exp(-t/tauS1) + np.exp(-t/tauC3))/((tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauC3 - tauS1)) + aC4*aS1*aT2*tauC3**3*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauC3))/((-tauT2 + tauNonCO2)*(tauC3 - tauNonCO2)*(tauC3 - tauS1)) - aC4*aT2*tauC3**2*tauNonCO2*np.exp(-t/tauNonCO2)/((-tauT2 + tauNonCO2)*(-tauC3 + tauNonCO2))
    term4 = aC1*aS1*aT1*tauT1**2*(tauS1 - tauS1*np.exp(-t/tauS1))/(tauS1*(tauT1 - tauNonCO2)) - aC1*aS1*aT1*tauT1*(t - tauS1*np.exp(t/tauS1) + tauS1)*np.exp(-t/tauS1)/(tauT1 - tauNonCO2) + aC1*aS1*aT1*tauNonCO2**3*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT1 - tauNonCO2)*(tauNonCO2 - tauS1)) + aC1*aS1*aT1*tauNonCO2**2*(tauS1 - tauS1*np.exp(-t/tauS1))/(tauS1*(-tauT1 + tauNonCO2)) + aC1*aS1*aT1*tauNonCO2*(t - tauS1*np.exp(t/tauS1) + tauS1)*np.exp(-t/tauS1)/(tauT1 - tauNonCO2) + aC1*aS1*aT2*tauT2**2*(tauS1 - tauS1*np.exp(-t/tauS1))/(tauS1*(tauT2 - tauNonCO2)) - aC1*aS1*aT2*tauT2*(t - tauS1*np.exp(t/tauS1) + tauS1)*np.exp(-t/tauS1)/(tauT2 - tauNonCO2) + aC1*aS1*aT2*tauNonCO2**3*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT2 - tauNonCO2)*(tauNonCO2 - tauS1)) + aC1*aS1*aT2*tauNonCO2**2*(tauS1 - tauS1*np.exp(-t/tauS1))/(tauS1*(-tauT2 + tauNonCO2)) + aC1*aS1*aT2*tauNonCO2*(t - tauS1*np.exp(t/tauS1) + tauS1)*np.exp(-t/tauS1)/(tauT2 - tauNonCO2) - aC1*aS2*aT1*tauT1**3*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)*(tauT1 - tauS2)) + aC1*aS2*aT1*tauT1**2*(tauS2 - tauS2*np.exp(-t/tauS2))/(tauS2*(tauT1 - tauNonCO2)) - aC1*aS2*aT1*tauT1*(t - tauS2*np.exp(t/tauS2) + tauS2)*np.exp(-t/tauS2)/(tauT1 - tauNonCO2) + aC1*aS2*aT1*tauNonCO2**3*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT1 - tauNonCO2)*(tauNonCO2 - tauS2)) + aC1*aS2*aT1*tauNonCO2**2*(tauS2 - tauS2*np.exp(-t/tauS2))/(tauS2*(-tauT1 + tauNonCO2)) + aC1*aS2*aT1*tauNonCO2*(t - tauS2*np.exp(t/tauS2) + tauS2)*np.exp(-t/tauS2)/(tauT1 - tauNonCO2) - aC1*aS2*aT2*tauT2**3*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT2 - tauNonCO2)*(tauT2 - tauS2)) + aC1*aS2*aT2*tauT2**2*(tauS2 - tauS2*np.exp(-t/tauS2))/(tauS2*(tauT2 - tauNonCO2)) - aC1*aS2*aT2*tauT2*(t - tauS2*np.exp(t/tauS2) + tauS2)*np.exp(-t/tauS2)/(tauT2 - tauNonCO2) + aC1*aS2*aT2*tauNonCO2**3*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT2 - tauNonCO2)*(tauNonCO2 - tauS2)) + aC1*aS2*aT2*tauNonCO2**2*(tauS2 - tauS2*np.exp(-t/tauS2))/(tauS2*(-tauT2 + tauNonCO2)) + aC1*aS2*aT2*tauNonCO2*(t - tauS2*np.exp(t/tauS2) + tauS2)*np.exp(-t/tauS2)/(tauT2 - tauNonCO2) - aC1*aS3*aT1*tauT1**3*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)*(tauT1 - tauS3)) + aC1*aS3*aT1*tauT1**2*(tauS3 - tauS3*np.exp(-t/tauS3))/(tauS3*(tauT1 - tauNonCO2)) - aC1*aS3*aT1*tauT1*(t - tauS3*np.exp(t/tauS3) + tauS3)*np.exp(-t/tauS3)/(tauT1 - tauNonCO2) + aC1*aS3*aT1*tauNonCO2**3*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT1 - tauNonCO2)*(tauNonCO2 - tauS3)) + aC1*aS3*aT1*tauNonCO2**2*(tauS3 - tauS3*np.exp(-t/tauS3))/(tauS3*(-tauT1 + tauNonCO2)) + aC1*aS3*aT1*tauNonCO2*(t - tauS3*np.exp(t/tauS3) + tauS3)*np.exp(-t/tauS3)/(tauT1 - tauNonCO2) - aC1*aS3*aT2*tauT2**3*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT2 - tauNonCO2)*(tauT2 - tauS3)) + aC1*aS3*aT2*tauT2**2*(tauS3 - tauS3*np.exp(-t/tauS3))/(tauS3*(tauT2 - tauNonCO2)) - aC1*aS3*aT2*tauT2*(t - tauS3*np.exp(t/tauS3) + tauS3)*np.exp(-t/tauS3)/(tauT2 - tauNonCO2) + aC1*aS3*aT2*tauNonCO2**3*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT2 - tauNonCO2)*(tauNonCO2 - tauS3)) + aC1*aS3*aT2*tauNonCO2**2*(tauS3 - tauS3*np.exp(-t/tauS3))/(tauS3*(-tauT2 + tauNonCO2)) + aC1*aS3*aT2*tauNonCO2*(t - tauS3*np.exp(t/tauS3) + tauS3)*np.exp(-t/tauS3)/(tauT2 - tauNonCO2) - aC2*aS1*aT1*tauC1**2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauC1 - tauNonCO2)*(tauNonCO2 - tauS1)) - aC2*aS1*aT2*tauC1**2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((-tauT2 + tauNonCO2)*(tauC1 - tauNonCO2)*(tauNonCO2 - tauS1)) + aC2*aS2*aT1*tauT1**2*tauC1**2*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauT1 - tauS2)) + aC2*aS2*aT1*tauT1**2*tauC1*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)*(tauT1 - tauS2)) - aC2*aS2*aT1*tauT1*tauC1**3*(-np.exp(-t/tauS2) + np.exp(-t/tauC1))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauC1 - tauS2)) + aC2*aS2*aT1*tauC1**3*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauC1))/((-tauT1 + tauNonCO2)*(tauC1 - tauNonCO2)*(tauC1 - tauS2)) - aC2*aS2*aT1*tauC1**2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauC1 - tauNonCO2)*(tauNonCO2 - tauS2)) - aC2*aS2*aT1*tauC1*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT1 - tauNonCO2)*(tauNonCO2 - tauS2)) + aC2*aS2*aT2*tauT2**2*tauC1**2*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauT2 - tauS2)) + aC2*aS2*aT2*tauT2**2*tauC1*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT2 - tauNonCO2)*(tauT2 - tauS2)) - aC2*aS2*aT2*tauT2*tauC1**3*(-np.exp(-t/tauS2) + np.exp(-t/tauC1))/((tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauC1 - tauS2)) + aC2*aS2*aT2*tauC1**3*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauC1))/((-tauT2 + tauNonCO2)*(tauC1 - tauNonCO2)*(tauC1 - tauS2)) - aC2*aS2*aT2*tauC1**2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((-tauT2 + tauNonCO2)*(tauC1 - tauNonCO2)*(tauNonCO2 - tauS2)) - aC2*aS2*aT2*tauC1*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT2 - tauNonCO2)*(tauNonCO2 - tauS2)) + aC2*aS3*aT1*tauT1**2*tauC1**2*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauT1 - tauS3)) + aC2*aS3*aT1*tauT1**2*tauC1*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)*(tauT1 - tauS3)) - aC2*aS3*aT1*tauT1*tauC1**3*(-np.exp(-t/tauS3) + np.exp(-t/tauC1))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauC1 - tauS3)) + aC2*aS3*aT1*tauC1**3*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauC1))/((-tauT1 + tauNonCO2)*(tauC1 - tauNonCO2)*(tauC1 - tauS3)) - aC2*aS3*aT1*tauC1**2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauC1 - tauNonCO2)*(tauNonCO2 - tauS3)) - aC2*aS3*aT1*tauC1*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT1 - tauNonCO2)*(tauNonCO2 - tauS3)) + aC2*aS3*aT2*tauT2**2*tauC1**2*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauT2 - tauS3)) + aC2*aS3*aT2*tauT2**2*tauC1*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT2 - tauNonCO2)*(tauT2 - tauS3)) - aC2*aS3*aT2*tauT2*tauC1**3*(-np.exp(-t/tauS3) + np.exp(-t/tauC1))/((tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauC1 - tauS3)) + aC2*aS3*aT2*tauC1**3*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauC1))/((-tauT2 + tauNonCO2)*(tauC1 - tauNonCO2)*(tauC1 - tauS3)) - aC2*aS3*aT2*tauC1**2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((-tauT2 + tauNonCO2)*(tauC1 - tauNonCO2)*(tauNonCO2 - tauS3)) - aC2*aS3*aT2*tauC1*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT2 - tauNonCO2)*(tauNonCO2 - tauS3)) - aC3*aS1*aT1*tauC2**2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauC2 - tauNonCO2)*(tauNonCO2 - tauS1)) - aC3*aS1*aT2*tauC2**2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((-tauT2 + tauNonCO2)*(tauC2 - tauNonCO2)*(tauNonCO2 - tauS1)) - aC3*aS1*aT2*tauC2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT2 - tauNonCO2)*(tauNonCO2 - tauS1)) + aC3*aS2*aT1*tauT1**2*tauC2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauT1 - tauS2)) + aC3*aS2*aT1*tauT1**2*tauC2*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)*(tauT1 - tauS2)) - aC3*aS2*aT1*tauT1*tauC2**3*(-np.exp(-t/tauS2) + np.exp(-t/tauC2))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauC2 - tauS2)) + aC3*aS2*aT1*tauC2**3*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauC2))/((-tauT1 + tauNonCO2)*(tauC2 - tauNonCO2)*(tauC2 - tauS2)) - aC3*aS2*aT1*tauC2**2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauC2 - tauNonCO2)*(tauNonCO2 - tauS2)) - aC3*aS2*aT1*tauC2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT1 - tauNonCO2)*(tauNonCO2 - tauS2)) + aC3*aS2*aT2*tauT2**2*tauC2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauT2 - tauS2)) + aC3*aS2*aT2*tauT2**2*tauC2*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT2 - tauNonCO2)*(tauT2 - tauS2)) - aC3*aS2*aT2*tauT2*tauC2**3*(-np.exp(-t/tauS2) + np.exp(-t/tauC2))/((tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauC2 - tauS2)) + aC3*aS2*aT2*tauC2**3*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauC2))/((-tauT2 + tauNonCO2)*(tauC2 - tauNonCO2)*(tauC2 - tauS2)) - aC3*aS2*aT2*tauC2**2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((-tauT2 + tauNonCO2)*(tauC2 - tauNonCO2)*(tauNonCO2 - tauS2)) - aC3*aS2*aT2*tauC2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT2 - tauNonCO2)*(tauNonCO2 - tauS2)) + aC3*aS3*aT1*tauT1**2*tauC2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauT1 - tauS3)) + aC3*aS3*aT1*tauT1**2*tauC2*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)*(tauT1 - tauS3)) - aC3*aS3*aT1*tauT1*tauC2**3*(-np.exp(-t/tauS3) + np.exp(-t/tauC2))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauC2 - tauS3)) + aC3*aS3*aT1*tauC2**3*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauC2))/((-tauT1 + tauNonCO2)*(tauC2 - tauNonCO2)*(tauC2 - tauS3)) - aC3*aS3*aT1*tauC2**2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauC2 - tauNonCO2)*(tauNonCO2 - tauS3)) - aC3*aS3*aT1*tauC2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT1 - tauNonCO2)*(tauNonCO2 - tauS3)) + aC3*aS3*aT2*tauT2**2*tauC2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauT2 - tauS3)) + aC3*aS3*aT2*tauT2**2*tauC2*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT2 - tauNonCO2)*(tauT2 - tauS3)) - aC3*aS3*aT2*tauT2*tauC2**3*(-np.exp(-t/tauS3) + np.exp(-t/tauC2))/((tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauC2 - tauS3)) + aC3*aS3*aT2*tauC2**3*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauC2))/((-tauT2 + tauNonCO2)*(tauC2 - tauNonCO2)*(tauC2 - tauS3)) - aC3*aS3*aT2*tauC2**2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((-tauT2 + tauNonCO2)*(tauC2 - tauNonCO2)*(tauNonCO2 - tauS3)) - aC3*aS3*aT2*tauC2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT2 - tauNonCO2)*(tauNonCO2 - tauS3)) - aC4*aS1*aT1*tauC3**2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauC3 - tauNonCO2)*(tauNonCO2 - tauS1)) - aC4*aS1*aT2*tauC3**2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((-tauT2 + tauNonCO2)*(tauC3 - tauNonCO2)*(tauNonCO2 - tauS1)) - aC4*aS1*aT2*tauC3*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT2 - tauNonCO2)*(tauNonCO2 - tauS1)) + aC4*aS2*aT1*tauT1**2*tauC3**2*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauT1 - tauS2)) + aC4*aS2*aT1*tauT1**2*tauC3*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)*(tauT1 - tauS2)) - aC4*aS2*aT1*tauT1*tauC3**3*(-np.exp(-t/tauS2) + np.exp(-t/tauC3))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauC3 - tauS2)) + aC4*aS2*aT1*tauC3**3*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauC3))/((-tauT1 + tauNonCO2)*(tauC3 - tauNonCO2)*(tauC3 - tauS2)) - aC4*aS2*aT1*tauC3**2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauC3 - tauNonCO2)*(tauNonCO2 - tauS2)) - aC4*aS2*aT1*tauC3*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT1 - tauNonCO2)*(tauNonCO2 - tauS2)) + aC4*aS2*aT2*tauT2**2*tauC3**2*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauT2 - tauS2)) + aC4*aS2*aT2*tauT2**2*tauC3*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT2 - tauNonCO2)*(tauT2 - tauS2)) - aC4*aS2*aT2*tauT2*tauC3**3*(-np.exp(-t/tauS2) + np.exp(-t/tauC3))/((tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauC3 - tauS2)) + aC4*aS2*aT2*tauC3**3*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauC3))/((-tauT2 + tauNonCO2)*(tauC3 - tauNonCO2)*(tauC3 - tauS2)) - aC4*aS2*aT2*tauC3**2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((-tauT2 + tauNonCO2)*(tauC3 - tauNonCO2)*(tauNonCO2 - tauS2)) - aC4*aS2*aT2*tauC3*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT2 - tauNonCO2)*(tauNonCO2 - tauS2)) + aC4*aS3*aT1*tauT1**2*tauC3**2*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauT1 - tauS3)) + aC4*aS3*aT1*tauT1**2*tauC3*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)*(tauT1 - tauS3)) - aC4*aS3*aT1*tauT1*tauC3**3*(-np.exp(-t/tauS3) + np.exp(-t/tauC3))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauC3 - tauS3)) + aC4*aS3*aT1*tauC3**3*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauC3))/((-tauT1 + tauNonCO2)*(tauC3 - tauNonCO2)*(tauC3 - tauS3)) - aC4*aS3*aT1*tauC3**2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauC3 - tauNonCO2)*(tauNonCO2 - tauS3)) - aC4*aS3*aT1*tauC3*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT1 - tauNonCO2)*(tauNonCO2 - tauS3)) + aC4*aS3*aT2*tauT2**2*tauC3**2*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauT2 - tauS3)) + aC4*aS3*aT2*tauT2**2*tauC3*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT2 - tauNonCO2)*(tauT2 - tauS3)) - aC4*aS3*aT2*tauT2*tauC3**3*(-np.exp(-t/tauS3) + np.exp(-t/tauC3))/((tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauC3 - tauS3)) + aC4*aS3*aT2*tauC3**3*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauC3))/((-tauT2 + tauNonCO2)*(tauC3 - tauNonCO2)*(tauC3 - tauS3)) - aC4*aS3*aT2*tauC3**2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((-tauT2 + tauNonCO2)*(tauC3 - tauNonCO2)*(tauNonCO2 - tauS3)) - aC4*aS3*aT2*tauC3*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT2 - tauNonCO2)*(tauNonCO2 - tauS3))

    result = term1 + term2 + term3 + term4
    
    return (M_CO2/M_C)*1E12 * AANonCO2 * AACO2 * gamma * kPulseT * tauNonCO2 * result

def AGWPNonCO2_Final(t, tauNonCO2, kPulseT,  aT1, tauT1, aT2, tauT2, AANonCO2, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, gamma, aS1, aS2, aS3, tauS1, tauS2, tauS3):

    return AGWPNonCO2(t, tauNonCO2, AANonCO2) + DAGWPNonCO2(t, tauNonCO2, kPulseT,  aT1, tauT1, aT2, tauT2, AANonCO2, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, gamma, aS1, aS2, aS3, tauS1, tauS2, tauS3)


# AGTP
def AGTPCO2(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, kPulseT, aT1, tauT1, aT2, tauT2, AACO2):
    term1 = aC1 * aT1 * (1 - np.exp(-t / tauT1)) + aC1 * aT2 * (1 - np.exp(-t / tauT2))
    term2 = (aC2 * aT1 * (np.exp(-t / tauT1) - np.exp(-t / tauC1)) * tauC1) / (tauT1 - tauC1)
    term3 = (aC2 * aT2 * (np.exp(-t / tauT2) - np.exp(-t / tauC1)) * tauC1) / (tauT2 - tauC1)
    term4 = (aC3 * aT1 * (np.exp(-t / tauT1) - np.exp(-t / tauC2)) * tauC2) / (tauT1 - tauC2)
    term5 = (aC3 * aT2 * (np.exp(-t / tauT2) - np.exp(-t / tauC2)) * tauC2) / (tauT2 - tauC2)
    term6 = (aC4 * aT1 * (np.exp(-t / tauT1) - np.exp(-t / tauC3)) * tauC3) / (tauT1 - tauC3)
    term7 = (aC4 * aT2 * (np.exp(-t / tauT2) - np.exp(-t / tauC3)) * tauC3) / (tauT2 - tauC3)

    return AACO2 * kPulseT * (term1 + term2 + term3 + term4 + term5 + term6 + term7) 

def AGTPNonCO2(t, tauNonCO2, kPulseT, aT1, tauT1, aT2, tauT2, AANonCO2):
    term1 = (aT1 * (np.exp(-t / tauT1) - np.exp(-t / tauNonCO2))) / (tauT1 - tauNonCO2)
    term2 = (aT2 * (np.exp(-t / tauT2) - np.exp(-t / tauNonCO2))) / (tauT2 - tauNonCO2)
    
    return AANonCO2 * kPulseT * (term1 + term2) * tauNonCO2

def DAGTPNonCO2(t, tauNonCO2, kPulseT, aT1, tauT1, aT2, tauT2, AANonCO2, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, gamma, aS1, aS2, aS3, tauS1, tauS2, tauS3):

    term1 = -aC1*aS1*aT1**2*tauT1**2*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)**2*(tauT1 - tauS1)) + aC1*aS1*aT1**2*tauT1**2*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)*(tauT1 - tauS1)) + aC1*aS1*aT1**2*tauT1*t*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)*(tauT1 - tauS1)) + aC1*aS1*aT1**2*tauT1*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT1 - tauNonCO2)**2*(tauNonCO2 - tauS1)) + aC1*aS1*aT1**2*tauT1*(-tauT1*tauS1 + (tauT1*(t + tauS1) - t*tauS1)*np.exp(t*(-1/tauS1 + 1/tauT1)))*np.exp(-t/tauT1)/((tauT1 - tauNonCO2)*(tauT1 - tauS1)**2) - aC1*aS1*aT1**2*tauT1*(tauS1 - tauS1*np.exp(-t/tauS1))/(tauS1*(tauT1 - tauNonCO2)) - aC1*aS1*aT1**2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT1 - tauNonCO2)*(tauNonCO2 - tauS1)) + aC1*aS1*aT1*tauT1**2*aT2*tauT2*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauT2)*(tauT1 - tauS1)*(tauT2 - tauNonCO2)) + aC1*aS1*aT1*tauT1**2*aT2*tauT2*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT1 - tauS1)) + aC1*aS1*aT1*tauT1**2*aT2*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)*(tauT1 - tauS1)*(-tauT2 + tauNonCO2)) + aC1*aS1*aT1*tauT1**2*aT2*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)*(tauT1 - tauS1)) - aC1*aS1*aT1*tauT1*aT2*tauT2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT1 - tauT2)*(tauT2 - tauNonCO2)*(tauT2 - tauS1)) - aC1*aS1*aT1*tauT1*aT2*tauT2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT2 - tauS1)) - aC1*aS1*aT1*tauT1*aT2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT1 - tauNonCO2)*(-tauT2 + tauNonCO2)*(tauNonCO2 - tauS1)) - aC1*aS1*aT1*tauT1*aT2*(1 - np.exp(-t/tauS1))/(tauT1 - tauNonCO2) + aC1*aS1*aT1*aT2*tauT2**2*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((-tauT1 + tauNonCO2)*(tauT2 - tauNonCO2)*(tauT2 - tauS1)) + aC1*aS1*aT1*aT2*tauT2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT2 - tauNonCO2)*(tauT2 - tauS1)) - aC1*aS1*aT1*aT2*tauT2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauT2 - tauNonCO2)*(tauNonCO2 - tauS1)) - aC1*aS1*aT1*aT2*tauT2*(1 - np.exp(-t/tauS1))/(tauT2 - tauNonCO2) - aC1*aS1*aT1*aT2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT2 - tauNonCO2)*(tauNonCO2 - tauS1)) - aC1*aS1*aT1*aT2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT1 - tauNonCO2)*(tauNonCO2 - tauS1)) + aC1*aS1*aT1*aT2*tauNonCO2*(1 - np.exp(-t/tauS1))/(tauT2 - tauNonCO2) + aC1*aS1*aT1*aT2*tauNonCO2*(1 - np.exp(-t/tauS1))/(tauT1 - tauNonCO2) - aC1*aS1*aT2**2*tauT2**2*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT2 - tauNonCO2)**2*(tauT2 - tauS1)) + aC1*aS1*aT2**2*tauT2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT2 - tauNonCO2)*(tauT2 - tauS1)) + aC1*aS1*aT2**2*tauT2*t*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT2 - tauNonCO2)*(tauT2 - tauS1)) + aC1*aS1*aT2**2*tauT2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT2 - tauNonCO2)**2*(tauNonCO2 - tauS1)) + aC1*aS1*aT2**2*tauT2*(-tauT2*tauS1 + (tauT2*(t + tauS1) - t*tauS1)*np.exp(t*(-1/tauS1 + 1/tauT2)))*np.exp(-t/tauT2)/((tauT2 - tauNonCO2)*(tauT2 - tauS1)**2) - aC1*aS1*aT2**2*tauT2*(tauS1 - tauS1*np.exp(-t/tauS1))/(tauS1*(tauT2 - tauNonCO2)) - aC1*aS1*aT2**2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT2 - tauNonCO2)*(tauNonCO2 - tauS1)) - aC1*aS2*aT1**2*tauT1**2*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)**2*(tauT1 - tauS2)) + aC1*aS2*aT1**2*tauT1**2*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)*(tauT1 - tauS2)) + aC1*aS2*aT1**2*tauT1*t*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)*(tauT1 - tauS2)) + aC1*aS2*aT1**2*tauT1*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT1 - tauNonCO2)**2*(tauNonCO2 - tauS2)) + aC1*aS2*aT1**2*tauT1*(-tauT1*tauS2 + (tauT1*(t + tauS2) - t*tauS2)*np.exp(t*(-1/tauS2 + 1/tauT1)))*np.exp(-t/tauT1)/((tauT1 - tauNonCO2)*(tauT1 - tauS2)**2) - aC1*aS2*aT1**2*tauT1*(tauS2 - tauS2*np.exp(-t/tauS2))/(tauS2*(tauT1 - tauNonCO2)) - aC1*aS2*aT1**2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT1 - tauNonCO2)*(tauNonCO2 - tauS2)) + aC1*aS2*aT1*tauT1**2*aT2*tauT2*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauT2)*(tauT1 - tauS2)*(tauT2 - tauNonCO2)) + aC1*aS2*aT1*tauT1**2*aT2*tauT2*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT1 - tauS2)) + aC1*aS2*aT1*tauT1**2*aT2*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)*(tauT1 - tauS2)*(-tauT2 + tauNonCO2)) + aC1*aS2*aT1*tauT1**2*aT2*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)*(tauT1 - tauS2)) - aC1*aS2*aT1*tauT1*aT2*tauT2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT1 - tauT2)*(tauT2 - tauNonCO2)*(tauT2 - tauS2)) - aC1*aS2*aT1*tauT1*aT2*tauT2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT2 - tauS2)) - aC1*aS2*aT1*tauT1*aT2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT1 - tauNonCO2)*(-tauT2 + tauNonCO2)*(tauNonCO2 - tauS2)) - aC1*aS2*aT1*tauT1*aT2*(1 - np.exp(-t/tauS2))/(tauT1 - tauNonCO2) 
    
    term2 = aC1*aS2*aT1*aT2*tauT2**2*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((-tauT1 + tauNonCO2)*(tauT2 - tauNonCO2)*(tauT2 - tauS2)) + aC1*aS2*aT1*aT2*tauT2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT2 - tauNonCO2)*(tauT2 - tauS2)) - aC1*aS2*aT1*aT2*tauT2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauT2 - tauNonCO2)*(tauNonCO2 - tauS2)) - aC1*aS2*aT1*aT2*tauT2*(1 - np.exp(-t/tauS2))/(tauT2 - tauNonCO2) - aC1*aS2*aT1*aT2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT2 - tauNonCO2)*(tauNonCO2 - tauS2)) - aC1*aS2*aT1*aT2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT1 - tauNonCO2)*(tauNonCO2 - tauS2)) + aC1*aS2*aT1*aT2*tauNonCO2*(1 - np.exp(-t/tauS2))/(tauT2 - tauNonCO2) + aC1*aS2*aT1*aT2*tauNonCO2*(1 - np.exp(-t/tauS2))/(tauT1 - tauNonCO2) - aC1*aS2*aT2**2*tauT2**2*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT2 - tauNonCO2)**2*(tauT2 - tauS2)) + aC1*aS2*aT2**2*tauT2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT2 - tauNonCO2)*(tauT2 - tauS2)) + aC1*aS2*aT2**2*tauT2*t*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT2 - tauNonCO2)*(tauT2 - tauS2)) + aC1*aS2*aT2**2*tauT2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT2 - tauNonCO2)**2*(tauNonCO2 - tauS2)) + aC1*aS2*aT2**2*tauT2*(-tauT2*tauS2 + (tauT2*(t + tauS2) - t*tauS2)*np.exp(t*(-1/tauS2 + 1/tauT2)))*np.exp(-t/tauT2)/((tauT2 - tauNonCO2)*(tauT2 - tauS2)**2) - aC1*aS2*aT2**2*tauT2*(tauS2 - tauS2*np.exp(-t/tauS2))/(tauS2*(tauT2 - tauNonCO2)) - aC1*aS2*aT2**2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT2 - tauNonCO2)*(tauNonCO2 - tauS2)) - aC1*aS3*aT1**2*tauT1**2*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)**2*(tauT1 - tauS3)) + aC1*aS3*aT1**2*tauT1**2*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)*(tauT1 - tauS3)) + aC1*aS3*aT1**2*tauT1*t*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)*(tauT1 - tauS3)) + aC1*aS3*aT1**2*tauT1*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT1 - tauNonCO2)**2*(tauNonCO2 - tauS3)) + aC1*aS3*aT1**2*tauT1*(-tauT1*tauS3 + (tauT1*(t + tauS3) - t*tauS3)*np.exp(t*(-1/tauS3 + 1/tauT1)))*np.exp(-t/tauT1)/((tauT1 - tauNonCO2)*(tauT1 - tauS3)**2) - aC1*aS3*aT1**2*tauT1*(tauS3 - tauS3*np.exp(-t/tauS3))/(tauS3*(tauT1 - tauNonCO2)) - aC1*aS3*aT1**2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT1 - tauNonCO2)*(tauNonCO2 - tauS3)) + aC1*aS3*aT1*tauT1**2*aT2*tauT2*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauT2)*(tauT1 - tauS3)*(tauT2 - tauNonCO2)) + aC1*aS3*aT1*tauT1**2*aT2*tauT2*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT1 - tauS3)) + aC1*aS3*aT1*tauT1**2*aT2*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)*(tauT1 - tauS3)*(-tauT2 + tauNonCO2)) + aC1*aS3*aT1*tauT1**2*aT2*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauNonCO2)*(tauT1 - tauS3)) - aC1*aS3*aT1*tauT1*aT2*tauT2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT1 - tauT2)*(tauT2 - tauNonCO2)*(tauT2 - tauS3)) - aC1*aS3*aT1*tauT1*aT2*tauT2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT2 - tauS3)) - aC1*aS3*aT1*tauT1*aT2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT1 - tauNonCO2)*(-tauT2 + tauNonCO2)*(tauNonCO2 - tauS3)) - aC1*aS3*aT1*tauT1*aT2*(1 - np.exp(-t/tauS3))/(tauT1 - tauNonCO2) + aC1*aS3*aT1*aT2*tauT2**2*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((-tauT1 + tauNonCO2)*(tauT2 - tauNonCO2)*(tauT2 - tauS3)) + aC1*aS3*aT1*aT2*tauT2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT2 - tauNonCO2)*(tauT2 - tauS3)) - aC1*aS3*aT1*aT2*tauT2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauT2 - tauNonCO2)*(tauNonCO2 - tauS3)) - aC1*aS3*aT1*aT2*tauT2*(1 - np.exp(-t/tauS3))/(tauT2 - tauNonCO2) - aC1*aS3*aT1*aT2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT2 - tauNonCO2)*(tauNonCO2 - tauS3)) - aC1*aS3*aT1*aT2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT1 - tauNonCO2)*(tauNonCO2 - tauS3)) + aC1*aS3*aT1*aT2*tauNonCO2*(1 - np.exp(-t/tauS3))/(tauT2 - tauNonCO2) + aC1*aS3*aT1*aT2*tauNonCO2*(1 - np.exp(-t/tauS3))/(tauT1 - tauNonCO2) - aC1*aS3*aT2**2*tauT2**2*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT2 - tauNonCO2)**2*(tauT2 - tauS3)) + aC1*aS3*aT2**2*tauT2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT2 - tauNonCO2)*(tauT2 - tauS3)) + aC1*aS3*aT2**2*tauT2*t*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT2 - tauNonCO2)*(tauT2 - tauS3)) + aC1*aS3*aT2**2*tauT2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT2 - tauNonCO2)**2*(tauNonCO2 - tauS3)) + aC1*aS3*aT2**2*tauT2*(-tauT2*tauS3 + (tauT2*(t + tauS3) - t*tauS3)*np.exp(t*(-1/tauS3 + 1/tauT2)))*np.exp(-t/tauT2)/((tauT2 - tauNonCO2)*(tauT2 - tauS3)**2) - aC1*aS3*aT2**2*tauT2*(tauS3 - tauS3*np.exp(-t/tauS3))/(tauS3*(tauT2 - tauNonCO2)) - aC1*aS3*aT2**2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT2 - tauNonCO2)*(tauNonCO2 - tauS3)) - aC1*aT1**2*tauT1*tauNonCO2*np.exp(-t/tauNonCO2)/(tauT1 - tauNonCO2)**2 + aC1*aT1**2*tauT1*tauNonCO2*np.exp(-t/tauT1)/(tauT1 - tauNonCO2)**2 + aC1*aT1**2*tauT1/(tauT1 - tauNonCO2) - aC1*aT1**2*tauT1*np.exp(-t/tauT1)/(tauT1 - tauNonCO2) - aC1*aT1**2*t*np.exp(-t/tauT1)/(tauT1 - tauNonCO2) - aC1*aT1**2*tauNonCO2/(tauT1 - tauNonCO2) + aC1*aT1**2*tauNonCO2*np.exp(-t/tauNonCO2)/(tauT1 - tauNonCO2) + aC1*aT1*tauT1*aT2*tauT2*np.exp(-t/tauT2)/((tauT1 - tauT2)*(tauT2 - tauNonCO2)) - aC1*aT1*tauT1*aT2*tauT2*np.exp(-t/tauT1)/((tauT1 - tauT2)*(tauT2 - tauNonCO2)) + aC1*aT1*tauT1*aT2*tauT2*np.exp(-t/tauT2)/((tauT1 - tauT2)*(tauT1 - tauNonCO2)) - aC1*aT1*tauT1*aT2*tauT2*np.exp(-t/tauT1)/((tauT1 - tauT2)*(tauT1 - tauNonCO2)) + aC1*aT1*tauT1*aT2*tauNonCO2*np.exp(-t/tauT1)/((tauT1 - tauNonCO2)*(tauT2 - tauNonCO2)) + aC1*aT1*tauT1*aT2*tauNonCO2*np.exp(-t/tauNonCO2)/((tauT1 - tauNonCO2)*(-tauT2 + tauNonCO2)) + aC1*aT1*tauT1*aT2/(tauT1 - tauNonCO2) - aC1*aT1*tauT1*aT2*np.exp(-t/tauT1)/(tauT1 - tauNonCO2) + aC1*aT1*aT2*tauT2*tauNonCO2*np.exp(-t/tauT2)/((tauT1 - tauNonCO2)*(tauT2 - tauNonCO2)) + aC1*aT1*aT2*tauT2*tauNonCO2*np.exp(-t/tauNonCO2)/((-tauT1 + tauNonCO2)*(tauT2 - tauNonCO2)) + aC1*aT1*aT2*tauT2/(tauT2 - tauNonCO2) - aC1*aT1*aT2*tauT2*np.exp(-t/tauT2)/(tauT2 - tauNonCO2) - aC1*aT1*aT2*tauNonCO2/(tauT2 - tauNonCO2) + aC1*aT1*aT2*tauNonCO2*np.exp(-t/tauNonCO2)/(tauT2 - tauNonCO2) - aC1*aT1*aT2*tauNonCO2/(tauT1 - tauNonCO2) + aC1*aT1*aT2*tauNonCO2*np.exp(-t/tauNonCO2)/(tauT1 - tauNonCO2) - aC1*aT2**2*tauT2*tauNonCO2*np.exp(-t/tauNonCO2)/(tauT2 - tauNonCO2)**2 + aC1*aT2**2*tauT2*tauNonCO2*np.exp(-t/tauT2)/(tauT2 - tauNonCO2)**2 + aC1*aT2**2*tauT2/(tauT2 - tauNonCO2) - aC1*aT2**2*tauT2*np.exp(-t/tauT2)/(tauT2 - tauNonCO2) - aC1*aT2**2*t*np.exp(-t/tauT2)/(tauT2 - tauNonCO2) - aC1*aT2**2*tauNonCO2/(tauT2 - tauNonCO2) + aC1*aT2**2*tauNonCO2*np.exp(-t/tauNonCO2)/(tauT2 - tauNonCO2) + aC2*aS1*aT1**2*tauT1**2*tauC1**2*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauC1)**2*(tauT1 - tauNonCO2)*(tauT1 - tauS1)) + aC2*aS1*aT1**2*tauT1**2*tauC1*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)**2*(tauT1 - tauS1)) - aC2*aS1*aT1**2*tauT1*t*tauC1*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauT1 - tauS1)) - aC2*aS1*aT1**2*tauT1*tauC1**3*(-np.exp(-t/tauS1) + np.exp(-t/tauC1))/((tauT1 - tauC1)**2*(tauT1 - tauNonCO2)*(tauC1 - tauS1)) - aC2*aS1*aT1**2*tauT1*tauC1*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)**2*(tauNonCO2 - tauS1)) - aC2*aS1*aT1**2*tauT1*tauC1*(-tauT1*tauS1 + (tauT1*(t + tauS1) - t*tauS1)*np.exp(t*(-1/tauS1 + 1/tauT1)))*np.exp(-t/tauT1)/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauT1 - tauS1)**2) - aC2*aS1*aT1**2*tauC1**3*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauC1))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauC1 - tauNonCO2)*(tauC1 - tauS1)) + aC2*aS1*aT1**2*tauC1**2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauC1 - tauNonCO2)*(tauNonCO2 - tauS1)) - aC2*aS1*aT1*tauT1**2*aT2*tauT2*tauC1*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT1 - tauS1)*(tauT2 - tauC1)) - aC2*aS1*aT1*tauT1**2*aT2*tauT2*tauC1*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauT2)*(tauT1 - tauC1)*(tauT1 - tauS1)*(tauT2 - tauNonCO2)) - aC2*aS1*aT1*tauT1**2*aT2*tauC1**2*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauT1 - tauS1)*(-tauT2 + tauC1)) - aC2*aS1*aT1*tauT1**2*aT2*tauC1*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauT1 - tauS1)*(-tauT2 + tauNonCO2)) + aC2*aS1*aT1*tauT1*aT2*tauT2**2*tauC1*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT2 - tauC1)*(tauT2 - tauS1)) + aC2*aS1*aT1*tauT1*aT2*tauT2**2*tauC1*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT1 - tauT2)*(tauT1 - tauC1)*(tauT2 - tauNonCO2)*(tauT2 - tauS1)) + aC2*aS1*aT1*tauT1*aT2*tauC1**3*(-np.exp(-t/tauS1) + np.exp(-t/tauC1))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(-tauT2 + tauC1)*(tauC1 - tauS1)) + aC2*aS1*aT1*tauT1*aT2*tauC1*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(-tauT2 + tauNonCO2)*(tauNonCO2 - tauS1)) - aC2*aS1*aT1*aT2*tauT2**2*tauC1**2*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((-tauT1 + tauC1)*(tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauT2 - tauS1)) - aC2*aS1*aT1*aT2*tauT2**2*tauC1*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauT2 - tauS1)) + aC2*aS1*aT1*aT2*tauT2*tauC1**3*(-np.exp(-t/tauS1) + np.exp(-t/tauC1))/((-tauT1 + tauC1)*(tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauC1 - tauS1)) + aC2*aS1*aT1*aT2*tauT2*tauC1*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauNonCO2 - tauS1)) + aC2*aS1*aT1*aT2*tauC1**3*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauC1))/((tauT1 - tauC1)*(-tauT2 + tauNonCO2)*(tauC1 - tauNonCO2)*(tauC1 - tauS1)) + aC2*aS1*aT1*aT2*tauC1**3*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauC1))/((-tauT1 + tauNonCO2)*(tauT2 - tauC1)*(tauC1 - tauNonCO2)*(tauC1 - tauS1)) - aC2*aS1*aT1*aT2*tauC1**2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT1 - tauC1)*(-tauT2 + tauNonCO2)*(tauC1 - tauNonCO2)*(tauNonCO2 - tauS1)) - aC2*aS1*aT1*aT2*tauC1**2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC1)*(tauC1 - tauNonCO2)*(tauNonCO2 - tauS1)) + aC2*aS1*aT2**2*tauT2**2*tauC1**2*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT2 - tauC1)**2*(tauT2 - tauNonCO2)*(tauT2 - tauS1)) + aC2*aS1*aT2**2*tauT2**2*tauC1*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT2 - tauC1)*(tauT2 - tauNonCO2)**2*(tauT2 - tauS1)) - aC2*aS1*aT2**2*tauT2*t*tauC1*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauT2 - tauS1)) - aC2*aS1*aT2**2*tauT2*tauC1**3*(-np.exp(-t/tauS1) + np.exp(-t/tauC1))/((tauT2 - tauC1)**2*(tauT2 - tauNonCO2)*(tauC1 - tauS1)) - aC2*aS1*aT2**2*tauT2*tauC1*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT2 - tauC1)*(tauT2 - tauNonCO2)**2*(tauNonCO2 - tauS1)) - aC2*aS1*aT2**2*tauT2*tauC1*(-tauT2*tauS1 + (tauT2*(t + tauS1) - t*tauS1)*np.exp(t*(-1/tauS1 + 1/tauT2)))*np.exp(-t/tauT2)/((tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauT2 - tauS1)**2) - aC2*aS1*aT2**2*tauC1**3*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauC1))/((tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauC1 - tauNonCO2)*(tauC1 - tauS1)) + aC2*aS1*aT2**2*tauC1**2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauC1 - tauNonCO2)*(tauNonCO2 - tauS1)) + aC2*aS2*aT1**2*tauT1**2*tauC1**2*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauC1)**2*(tauT1 - tauNonCO2)*(tauT1 - tauS2)) + aC2*aS2*aT1**2*tauT1**2*tauC1*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)**2*(tauT1 - tauS2)) - aC2*aS2*aT1**2*tauT1*t*tauC1*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauT1 - tauS2)) - aC2*aS2*aT1**2*tauT1*tauC1**3*(-np.exp(-t/tauS2) + np.exp(-t/tauC1))/((tauT1 - tauC1)**2*(tauT1 - tauNonCO2)*(tauC1 - tauS2)) - aC2*aS2*aT1**2*tauT1*tauC1*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)**2*(tauNonCO2 - tauS2)) - aC2*aS2*aT1**2*tauT1*tauC1*(-tauT1*tauS2 + (tauT1*(t + tauS2) - t*tauS2)*np.exp(t*(-1/tauS2 + 1/tauT1)))*np.exp(-t/tauT1)/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauT1 - tauS2)**2) - aC2*aS2*aT1**2*tauC1**3*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauC1))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauC1 - tauNonCO2)*(tauC1 - tauS2)) + aC2*aS2*aT1**2*tauC1**2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauC1 - tauNonCO2)*(tauNonCO2 - tauS2)) - aC2*aS2*aT1*tauT1**2*aT2*tauT2*tauC1*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT1 - tauS2)*(tauT2 - tauC1)) - aC2*aS2*aT1*tauT1**2*aT2*tauT2*tauC1*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauT2)*(tauT1 - tauC1)*(tauT1 - tauS2)*(tauT2 - tauNonCO2)) - aC2*aS2*aT1*tauT1**2*aT2*tauC1**2*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauT1 - tauS2)*(-tauT2 + tauC1)) - aC2*aS2*aT1*tauT1**2*aT2*tauC1*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauT1 - tauS2)*(-tauT2 + tauNonCO2)) + aC2*aS2*aT1*tauT1*aT2*tauT2**2*tauC1*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT2 - tauC1)*(tauT2 - tauS2)) + aC2*aS2*aT1*tauT1*aT2*tauT2**2*tauC1*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT1 - tauT2)*(tauT1 - tauC1)*(tauT2 - tauNonCO2)*(tauT2 - tauS2)) + aC2*aS2*aT1*tauT1*aT2*tauC1**3*(-np.exp(-t/tauS2) + np.exp(-t/tauC1))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(-tauT2 + tauC1)*(tauC1 - tauS2)) + aC2*aS2*aT1*tauT1*aT2*tauC1*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(-tauT2 + tauNonCO2)*(tauNonCO2 - tauS2)) - aC2*aS2*aT1*aT2*tauT2**2*tauC1**2*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((-tauT1 + tauC1)*(tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauT2 - tauS2)) - aC2*aS2*aT1*aT2*tauT2**2*tauC1*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauT2 - tauS2)) + aC2*aS2*aT1*aT2*tauT2*tauC1**3*(-np.exp(-t/tauS2) + np.exp(-t/tauC1))/((-tauT1 + tauC1)*(tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauC1 - tauS2)) + aC2*aS2*aT1*aT2*tauT2*tauC1*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauNonCO2 - tauS2)) + aC2*aS2*aT1*aT2*tauC1**3*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauC1))/((tauT1 - tauC1)*(-tauT2 + tauNonCO2)*(tauC1 - tauNonCO2)*(tauC1 - tauS2)) 
    
    term3 = aC2*aS2*aT1*aT2*tauC1**3*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauC1))/((-tauT1 + tauNonCO2)*(tauT2 - tauC1)*(tauC1 - tauNonCO2)*(tauC1 - tauS2)) - aC2*aS2*aT1*aT2*tauC1**2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT1 - tauC1)*(-tauT2 + tauNonCO2)*(tauC1 - tauNonCO2)*(tauNonCO2 - tauS2)) - aC2*aS2*aT1*aT2*tauC1**2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC1)*(tauC1 - tauNonCO2)*(tauNonCO2 - tauS2)) + aC2*aS2*aT2**2*tauT2**2*tauC1**2*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT2 - tauC1)**2*(tauT2 - tauNonCO2)*(tauT2 - tauS2)) + aC2*aS2*aT2**2*tauT2**2*tauC1*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT2 - tauC1)*(tauT2 - tauNonCO2)**2*(tauT2 - tauS2)) - aC2*aS2*aT2**2*tauT2*t*tauC1*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauT2 - tauS2)) - aC2*aS2*aT2**2*tauT2*tauC1**3*(-np.exp(-t/tauS2) + np.exp(-t/tauC1))/((tauT2 - tauC1)**2*(tauT2 - tauNonCO2)*(tauC1 - tauS2)) - aC2*aS2*aT2**2*tauT2*tauC1*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT2 - tauC1)*(tauT2 - tauNonCO2)**2*(tauNonCO2 - tauS2)) - aC2*aS2*aT2**2*tauT2*tauC1*(-tauT2*tauS2 + (tauT2*(t + tauS2) - t*tauS2)*np.exp(t*(-1/tauS2 + 1/tauT2)))*np.exp(-t/tauT2)/((tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauT2 - tauS2)**2) - aC2*aS2*aT2**2*tauC1**3*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauC1))/((tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauC1 - tauNonCO2)*(tauC1 - tauS2)) + aC2*aS2*aT2**2*tauC1**2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauC1 - tauNonCO2)*(tauNonCO2 - tauS2)) + aC2*aS3*aT1**2*tauT1**2*tauC1**2*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauC1)**2*(tauT1 - tauNonCO2)*(tauT1 - tauS3)) + aC2*aS3*aT1**2*tauT1**2*tauC1*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)**2*(tauT1 - tauS3)) - aC2*aS3*aT1**2*tauT1*t*tauC1*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauT1 - tauS3)) - aC2*aS3*aT1**2*tauT1*tauC1**3*(-np.exp(-t/tauS3) + np.exp(-t/tauC1))/((tauT1 - tauC1)**2*(tauT1 - tauNonCO2)*(tauC1 - tauS3)) - aC2*aS3*aT1**2*tauT1*tauC1*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)**2*(tauNonCO2 - tauS3)) - aC2*aS3*aT1**2*tauT1*tauC1*(-tauT1*tauS3 + (tauT1*(t + tauS3) - t*tauS3)*np.exp(t*(-1/tauS3 + 1/tauT1)))*np.exp(-t/tauT1)/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauT1 - tauS3)**2) - aC2*aS3*aT1**2*tauC1**3*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauC1))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauC1 - tauNonCO2)*(tauC1 - tauS3)) + aC2*aS3*aT1**2*tauC1**2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauC1 - tauNonCO2)*(tauNonCO2 - tauS3)) - aC2*aS3*aT1*tauT1**2*aT2*tauT2*tauC1*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT1 - tauS3)*(tauT2 - tauC1)) - aC2*aS3*aT1*tauT1**2*aT2*tauT2*tauC1*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauT2)*(tauT1 - tauC1)*(tauT1 - tauS3)*(tauT2 - tauNonCO2)) - aC2*aS3*aT1*tauT1**2*aT2*tauC1**2*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauT1 - tauS3)*(-tauT2 + tauC1)) - aC2*aS3*aT1*tauT1**2*aT2*tauC1*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauT1 - tauS3)*(-tauT2 + tauNonCO2)) + aC2*aS3*aT1*tauT1*aT2*tauT2**2*tauC1*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT2 - tauC1)*(tauT2 - tauS3)) + aC2*aS3*aT1*tauT1*aT2*tauT2**2*tauC1*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT1 - tauT2)*(tauT1 - tauC1)*(tauT2 - tauNonCO2)*(tauT2 - tauS3)) + aC2*aS3*aT1*tauT1*aT2*tauC1**3*(-np.exp(-t/tauS3) + np.exp(-t/tauC1))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(-tauT2 + tauC1)*(tauC1 - tauS3)) + aC2*aS3*aT1*tauT1*aT2*tauC1*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(-tauT2 + tauNonCO2)*(tauNonCO2 - tauS3)) - aC2*aS3*aT1*aT2*tauT2**2*tauC1**2*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((-tauT1 + tauC1)*(tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauT2 - tauS3)) - aC2*aS3*aT1*aT2*tauT2**2*tauC1*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauT2 - tauS3)) + aC2*aS3*aT1*aT2*tauT2*tauC1**3*(-np.exp(-t/tauS3) + np.exp(-t/tauC1))/((-tauT1 + tauC1)*(tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauC1 - tauS3)) + aC2*aS3*aT1*aT2*tauT2*tauC1*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauNonCO2 - tauS3)) + aC2*aS3*aT1*aT2*tauC1**3*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauC1))/((tauT1 - tauC1)*(-tauT2 + tauNonCO2)*(tauC1 - tauNonCO2)*(tauC1 - tauS3)) + aC2*aS3*aT1*aT2*tauC1**3*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauC1))/((-tauT1 + tauNonCO2)*(tauT2 - tauC1)*(tauC1 - tauNonCO2)*(tauC1 - tauS3)) - aC2*aS3*aT1*aT2*tauC1**2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT1 - tauC1)*(-tauT2 + tauNonCO2)*(tauC1 - tauNonCO2)*(tauNonCO2 - tauS3)) - aC2*aS3*aT1*aT2*tauC1**2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC1)*(tauC1 - tauNonCO2)*(tauNonCO2 - tauS3)) + aC2*aS3*aT2**2*tauT2**2*tauC1**2*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT2 - tauC1)**2*(tauT2 - tauNonCO2)*(tauT2 - tauS3)) 
    
    term4 = aC2*aS3*aT2**2*tauT2**2*tauC1*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT2 - tauC1)*(tauT2 - tauNonCO2)**2*(tauT2 - tauS3)) - aC2*aS3*aT2**2*tauT2*t*tauC1*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauT2 - tauS3)) - aC2*aS3*aT2**2*tauT2*tauC1**3*(-np.exp(-t/tauS3) + np.exp(-t/tauC1))/((tauT2 - tauC1)**2*(tauT2 - tauNonCO2)*(tauC1 - tauS3)) - aC2*aS3*aT2**2*tauT2*tauC1*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT2 - tauC1)*(tauT2 - tauNonCO2)**2*(tauNonCO2 - tauS3)) - aC2*aS3*aT2**2*tauT2*tauC1*(-tauT2*tauS3 + (tauT2*(t + tauS3) - t*tauS3)*np.exp(t*(-1/tauS3 + 1/tauT2)))*np.exp(-t/tauT2)/((tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauT2 - tauS3)**2) - aC2*aS3*aT2**2*tauC1**3*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauC1))/((tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauC1 - tauNonCO2)*(tauC1 - tauS3)) + aC2*aS3*aT2**2*tauC1**2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauC1 - tauNonCO2)*(tauNonCO2 - tauS3)) + aC2*aT1**2*tauT1*tauC1**2*np.exp(-t/tauC1)/((tauT1 - tauC1)**2*(tauT1 - tauNonCO2)) - aC2*aT1**2*tauT1*tauC1**2*np.exp(-t/tauT1)/((tauT1 - tauC1)**2*(tauT1 - tauNonCO2)) + aC2*aT1**2*tauT1*tauC1*tauNonCO2*np.exp(-t/tauNonCO2)/((tauT1 - tauC1)*(tauT1 - tauNonCO2)**2) - aC2*aT1**2*tauT1*tauC1*tauNonCO2*np.exp(-t/tauT1)/((tauT1 - tauC1)*(tauT1 - tauNonCO2)**2) + aC2*aT1**2*t*tauC1*np.exp(-t/tauT1)/((tauT1 - tauC1)*(tauT1 - tauNonCO2)) - aC2*aT1**2*tauC1**2*tauNonCO2*np.exp(-t/tauNonCO2)/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauC1 - tauNonCO2)) + aC2*aT1**2*tauC1**2*tauNonCO2*np.exp(-t/tauC1)/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauC1 - tauNonCO2)) - aC2*aT1*tauT1*aT2*tauT2*tauC1*np.exp(-t/tauT2)/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT2 - tauC1)) + aC2*aT1*tauT1*aT2*tauT2*tauC1*np.exp(-t/tauT1)/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT2 - tauC1)) - aC2*aT1*tauT1*aT2*tauT2*tauC1*np.exp(-t/tauT2)/((tauT1 - tauT2)*(tauT1 - tauC1)*(tauT2 - tauNonCO2)) + aC2*aT1*tauT1*aT2*tauT2*tauC1*np.exp(-t/tauT1)/((tauT1 - tauT2)*(tauT1 - tauC1)*(tauT2 - tauNonCO2)) + aC2*aT1*tauT1*aT2*tauC1**2*np.exp(-t/tauC1)/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauT2 - tauC1)) + aC2*aT1*tauT1*aT2*tauC1**2*np.exp(-t/tauT1)/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(-tauT2 + tauC1)) + aC2*aT1*tauT1*aT2*tauC1*tauNonCO2*np.exp(-t/tauNonCO2)/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(tauT2 - tauNonCO2)) + aC2*aT1*tauT1*aT2*tauC1*tauNonCO2*np.exp(-t/tauT1)/((tauT1 - tauC1)*(tauT1 - tauNonCO2)*(-tauT2 + tauNonCO2)) + aC2*aT1*aT2*tauT2*tauC1**2*np.exp(-t/tauC1)/((tauT1 - tauC1)*(tauT2 - tauC1)*(tauT2 - tauNonCO2)) + aC2*aT1*aT2*tauT2*tauC1**2*np.exp(-t/tauT2)/((-tauT1 + tauC1)*(tauT2 - tauC1)*(tauT2 - tauNonCO2)) + aC2*aT1*aT2*tauT2*tauC1*tauNonCO2*np.exp(-t/tauNonCO2)/((tauT1 - tauNonCO2)*(tauT2 - tauC1)*(tauT2 - tauNonCO2)) + aC2*aT1*aT2*tauT2*tauC1*tauNonCO2*np.exp(-t/tauT2)/((-tauT1 + tauNonCO2)*(tauT2 - tauC1)*(tauT2 - tauNonCO2)) + aC2*aT1*aT2*tauC1**2*tauNonCO2*np.exp(-t/tauC1)/((-tauT1 + tauNonCO2)*(-tauT2 + tauC1)*(tauC1 - tauNonCO2)) + aC2*aT1*aT2*tauC1**2*tauNonCO2*np.exp(-t/tauNonCO2)/((-tauT1 + tauNonCO2)*(-tauT2 + tauC1)*(-tauC1 + tauNonCO2)) + aC2*aT1*aT2*tauC1**2*tauNonCO2*np.exp(-t/tauC1)/((-tauT1 + tauC1)*(-tauT2 + tauNonCO2)*(tauC1 - tauNonCO2)) + aC2*aT1*aT2*tauC1**2*tauNonCO2*np.exp(-t/tauNonCO2)/((-tauT1 + tauC1)*(-tauT2 + tauNonCO2)*(-tauC1 + tauNonCO2)) + aC2*aT2**2*tauT2*tauC1**2*np.exp(-t/tauC1)/((tauT2 - tauC1)**2*(tauT2 - tauNonCO2)) - aC2*aT2**2*tauT2*tauC1**2*np.exp(-t/tauT2)/((tauT2 - tauC1)**2*(tauT2 - tauNonCO2)) + aC2*aT2**2*tauT2*tauC1*tauNonCO2*np.exp(-t/tauNonCO2)/((tauT2 - tauC1)*(tauT2 - tauNonCO2)**2) - aC2*aT2**2*tauT2*tauC1*tauNonCO2*np.exp(-t/tauT2)/((tauT2 - tauC1)*(tauT2 - tauNonCO2)**2) + aC2*aT2**2*t*tauC1*np.exp(-t/tauT2)/((tauT2 - tauC1)*(tauT2 - tauNonCO2)) - aC2*aT2**2*tauC1**2*tauNonCO2*np.exp(-t/tauNonCO2)/((tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauC1 - tauNonCO2)) + aC2*aT2**2*tauC1**2*tauNonCO2*np.exp(-t/tauC1)/((tauT2 - tauC1)*(tauT2 - tauNonCO2)*(tauC1 - tauNonCO2)) + aC3*aS1*aT1**2*tauT1**2*tauC2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauC2)**2*(tauT1 - tauNonCO2)*(tauT1 - tauS1)) + aC3*aS1*aT1**2*tauT1**2*tauC2*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)**2*(tauT1 - tauS1)) - aC3*aS1*aT1**2*tauT1*t*tauC2*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauT1 - tauS1)) - aC3*aS1*aT1**2*tauT1*tauC2**3*(-np.exp(-t/tauS1) + np.exp(-t/tauC2))/((tauT1 - tauC2)**2*(tauT1 - tauNonCO2)*(tauC2 - tauS1)) - aC3*aS1*aT1**2*tauT1*tauC2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)**2*(tauNonCO2 - tauS1)) - aC3*aS1*aT1**2*tauT1*tauC2*(-tauT1*tauS1 + (tauT1*(t + tauS1) - t*tauS1)*np.exp(t*(-1/tauS1 + 1/tauT1)))*np.exp(-t/tauT1)/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauT1 - tauS1)**2) - aC3*aS1*aT1**2*tauC2**3*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauC2))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauC2 - tauNonCO2)*(tauC2 - tauS1)) + aC3*aS1*aT1**2*tauC2**2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauC2 - tauNonCO2)*(tauNonCO2 - tauS1)) - aC3*aS1*aT1*tauT1**2*aT2*tauT2*tauC2*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT1 - tauS1)*(tauT2 - tauC2)) - aC3*aS1*aT1*tauT1**2*aT2*tauT2*tauC2*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauT2)*(tauT1 - tauC2)*(tauT1 - tauS1)*(tauT2 - tauNonCO2)) - aC3*aS1*aT1*tauT1**2*aT2*tauC2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauT1 - tauS1)*(-tauT2 + tauC2)) - aC3*aS1*aT1*tauT1**2*aT2*tauC2*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauT1 - tauS1)*(-tauT2 + tauNonCO2)) + aC3*aS1*aT1*tauT1*aT2*tauT2**2*tauC2*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT2 - tauC2)*(tauT2 - tauS1)) + aC3*aS1*aT1*tauT1*aT2*tauT2**2*tauC2*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT1 - tauT2)*(tauT1 - tauC2)*(tauT2 - tauNonCO2)*(tauT2 - tauS1)) + aC3*aS1*aT1*tauT1*aT2*tauC2**3*(-np.exp(-t/tauS1) + np.exp(-t/tauC2))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(-tauT2 + tauC2)*(tauC2 - tauS1)) + aC3*aS1*aT1*tauT1*aT2*tauC2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(-tauT2 + tauNonCO2)*(tauNonCO2 - tauS1)) - aC3*aS1*aT1*aT2*tauT2**2*tauC2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((-tauT1 + tauC2)*(tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauT2 - tauS1)) - aC3*aS1*aT1*aT2*tauT2**2*tauC2*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauT2 - tauS1)) + aC3*aS1*aT1*aT2*tauT2*tauC2**3*(-np.exp(-t/tauS1) + np.exp(-t/tauC2))/((-tauT1 + tauC2)*(tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauC2 - tauS1)) + aC3*aS1*aT1*aT2*tauT2*tauC2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauNonCO2 - tauS1)) + aC3*aS1*aT1*aT2*tauC2**3*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauC2))/((tauT1 - tauC2)*(-tauT2 + tauNonCO2)*(tauC2 - tauNonCO2)*(tauC2 - tauS1)) + aC3*aS1*aT1*aT2*tauC2**3*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauC2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC2)*(tauC2 - tauNonCO2)*(tauC2 - tauS1)) - aC3*aS1*aT1*aT2*tauC2**2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT1 - tauC2)*(-tauT2 + tauNonCO2)*(tauC2 - tauNonCO2)*(tauNonCO2 - tauS1)) - aC3*aS1*aT1*aT2*tauC2**2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC2)*(tauC2 - tauNonCO2)*(tauNonCO2 - tauS1)) + aC3*aS1*aT2**2*tauT2**2*tauC2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT2 - tauC2)**2*(tauT2 - tauNonCO2)*(tauT2 - tauS1)) 

    term5 = aC3*aS1*aT2**2*tauT2**2*tauC2*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT2 - tauC2)*(tauT2 - tauNonCO2)**2*(tauT2 - tauS1)) - aC3*aS1*aT2**2*tauT2*t*tauC2*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauT2 - tauS1)) - aC3*aS1*aT2**2*tauT2*tauC2**3*(-np.exp(-t/tauS1) + np.exp(-t/tauC2))/((tauT2 - tauC2)**2*(tauT2 - tauNonCO2)*(tauC2 - tauS1)) - aC3*aS1*aT2**2*tauT2*tauC2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT2 - tauC2)*(tauT2 - tauNonCO2)**2*(tauNonCO2 - tauS1)) - aC3*aS1*aT2**2*tauT2*tauC2*(-tauT2*tauS1 + (tauT2*(t + tauS1) - t*tauS1)*np.exp(t*(-1/tauS1 + 1/tauT2)))*np.exp(-t/tauT2)/((tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauT2 - tauS1)**2) - aC3*aS1*aT2**2*tauC2**3*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauC2))/((tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauC2 - tauNonCO2)*(tauC2 - tauS1)) + aC3*aS1*aT2**2*tauC2**2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauC2 - tauNonCO2)*(tauNonCO2 - tauS1)) + aC3*aS2*aT1**2*tauT1**2*tauC2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauC2)**2*(tauT1 - tauNonCO2)*(tauT1 - tauS2)) + aC3*aS2*aT1**2*tauT1**2*tauC2*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)**2*(tauT1 - tauS2)) - aC3*aS2*aT1**2*tauT1*t*tauC2*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauT1 - tauS2)) - aC3*aS2*aT1**2*tauT1*tauC2**3*(-np.exp(-t/tauS2) + np.exp(-t/tauC2))/((tauT1 - tauC2)**2*(tauT1 - tauNonCO2)*(tauC2 - tauS2)) - aC3*aS2*aT1**2*tauT1*tauC2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)**2*(tauNonCO2 - tauS2)) - aC3*aS2*aT1**2*tauT1*tauC2*(-tauT1*tauS2 + (tauT1*(t + tauS2) - t*tauS2)*np.exp(t*(-1/tauS2 + 1/tauT1)))*np.exp(-t/tauT1)/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauT1 - tauS2)**2) - aC3*aS2*aT1**2*tauC2**3*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauC2))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauC2 - tauNonCO2)*(tauC2 - tauS2)) + aC3*aS2*aT1**2*tauC2**2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauC2 - tauNonCO2)*(tauNonCO2 - tauS2)) - aC3*aS2*aT1*tauT1**2*aT2*tauT2*tauC2*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT1 - tauS2)*(tauT2 - tauC2)) - aC3*aS2*aT1*tauT1**2*aT2*tauT2*tauC2*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauT2)*(tauT1 - tauC2)*(tauT1 - tauS2)*(tauT2 - tauNonCO2)) - aC3*aS2*aT1*tauT1**2*aT2*tauC2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauT1 - tauS2)*(-tauT2 + tauC2)) - aC3*aS2*aT1*tauT1**2*aT2*tauC2*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauT1 - tauS2)*(-tauT2 + tauNonCO2)) + aC3*aS2*aT1*tauT1*aT2*tauT2**2*tauC2*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT2 - tauC2)*(tauT2 - tauS2)) + aC3*aS2*aT1*tauT1*aT2*tauT2**2*tauC2*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT1 - tauT2)*(tauT1 - tauC2)*(tauT2 - tauNonCO2)*(tauT2 - tauS2)) + aC3*aS2*aT1*tauT1*aT2*tauC2**3*(-np.exp(-t/tauS2) + np.exp(-t/tauC2))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(-tauT2 + tauC2)*(tauC2 - tauS2)) + aC3*aS2*aT1*tauT1*aT2*tauC2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(-tauT2 + tauNonCO2)*(tauNonCO2 - tauS2)) - aC3*aS2*aT1*aT2*tauT2**2*tauC2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((-tauT1 + tauC2)*(tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauT2 - tauS2)) - aC3*aS2*aT1*aT2*tauT2**2*tauC2*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauT2 - tauS2)) + aC3*aS2*aT1*aT2*tauT2*tauC2**3*(-np.exp(-t/tauS2) + np.exp(-t/tauC2))/((-tauT1 + tauC2)*(tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauC2 - tauS2)) + aC3*aS2*aT1*aT2*tauT2*tauC2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauNonCO2 - tauS2)) + aC3*aS2*aT1*aT2*tauC2**3*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauC2))/((tauT1 - tauC2)*(-tauT2 + tauNonCO2)*(tauC2 - tauNonCO2)*(tauC2 - tauS2)) + aC3*aS2*aT1*aT2*tauC2**3*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauC2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC2)*(tauC2 - tauNonCO2)*(tauC2 - tauS2)) - aC3*aS2*aT1*aT2*tauC2**2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT1 - tauC2)*(-tauT2 + tauNonCO2)*(tauC2 - tauNonCO2)*(tauNonCO2 - tauS2)) - aC3*aS2*aT1*aT2*tauC2**2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC2)*(tauC2 - tauNonCO2)*(tauNonCO2 - tauS2)) + aC3*aS2*aT2**2*tauT2**2*tauC2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT2 - tauC2)**2*(tauT2 - tauNonCO2)*(tauT2 - tauS2)) + aC3*aS2*aT2**2*tauT2**2*tauC2*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT2 - tauC2)*(tauT2 - tauNonCO2)**2*(tauT2 - tauS2)) - aC3*aS2*aT2**2*tauT2*t*tauC2*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauT2 - tauS2)) - aC3*aS2*aT2**2*tauT2*tauC2**3*(-np.exp(-t/tauS2) + np.exp(-t/tauC2))/((tauT2 - tauC2)**2*(tauT2 - tauNonCO2)*(tauC2 - tauS2)) - aC3*aS2*aT2**2*tauT2*tauC2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT2 - tauC2)*(tauT2 - tauNonCO2)**2*(tauNonCO2 - tauS2)) - aC3*aS2*aT2**2*tauT2*tauC2*(-tauT2*tauS2 + (tauT2*(t + tauS2) - t*tauS2)*np.exp(t*(-1/tauS2 + 1/tauT2)))*np.exp(-t/tauT2)/((tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauT2 - tauS2)**2) - aC3*aS2*aT2**2*tauC2**3*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauC2))/((tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauC2 - tauNonCO2)*(tauC2 - tauS2)) + aC3*aS2*aT2**2*tauC2**2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauC2 - tauNonCO2)*(tauNonCO2 - tauS2)) + aC3*aS3*aT1**2*tauT1**2*tauC2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauC2)**2*(tauT1 - tauNonCO2)*(tauT1 - tauS3)) + aC3*aS3*aT1**2*tauT1**2*tauC2*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)**2*(tauT1 - tauS3)) - aC3*aS3*aT1**2*tauT1*t*tauC2*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauT1 - tauS3)) - aC3*aS3*aT1**2*tauT1*tauC2**3*(-np.exp(-t/tauS3) + np.exp(-t/tauC2))/((tauT1 - tauC2)**2*(tauT1 - tauNonCO2)*(tauC2 - tauS3)) - aC3*aS3*aT1**2*tauT1*tauC2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)**2*(tauNonCO2 - tauS3)) - aC3*aS3*aT1**2*tauT1*tauC2*(-tauT1*tauS3 + (tauT1*(t + tauS3) - t*tauS3)*np.exp(t*(-1/tauS3 + 1/tauT1)))*np.exp(-t/tauT1)/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauT1 - tauS3)**2) - aC3*aS3*aT1**2*tauC2**3*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauC2))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauC2 - tauNonCO2)*(tauC2 - tauS3)) + aC3*aS3*aT1**2*tauC2**2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauC2 - tauNonCO2)*(tauNonCO2 - tauS3)) - aC3*aS3*aT1*tauT1**2*aT2*tauT2*tauC2*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT1 - tauS3)*(tauT2 - tauC2)) - aC3*aS3*aT1*tauT1**2*aT2*tauT2*tauC2*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauT2)*(tauT1 - tauC2)*(tauT1 - tauS3)*(tauT2 - tauNonCO2)) - aC3*aS3*aT1*tauT1**2*aT2*tauC2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauT1 - tauS3)*(-tauT2 + tauC2)) - aC3*aS3*aT1*tauT1**2*aT2*tauC2*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauT1 - tauS3)*(-tauT2 + tauNonCO2)) + aC3*aS3*aT1*tauT1*aT2*tauT2**2*tauC2*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT2 - tauC2)*(tauT2 - tauS3)) + aC3*aS3*aT1*tauT1*aT2*tauT2**2*tauC2*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT1 - tauT2)*(tauT1 - tauC2)*(tauT2 - tauNonCO2)*(tauT2 - tauS3)) + aC3*aS3*aT1*tauT1*aT2*tauC2**3*(-np.exp(-t/tauS3) + np.exp(-t/tauC2))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(-tauT2 + tauC2)*(tauC2 - tauS3)) + aC3*aS3*aT1*tauT1*aT2*tauC2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(-tauT2 + tauNonCO2)*(tauNonCO2 - tauS3)) - aC3*aS3*aT1*aT2*tauT2**2*tauC2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((-tauT1 + tauC2)*(tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauT2 - tauS3)) - aC3*aS3*aT1*aT2*tauT2**2*tauC2*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauT2 - tauS3)) + aC3*aS3*aT1*aT2*tauT2*tauC2**3*(-np.exp(-t/tauS3) + np.exp(-t/tauC2))/((-tauT1 + tauC2)*(tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauC2 - tauS3)) + aC3*aS3*aT1*aT2*tauT2*tauC2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauNonCO2 - tauS3)) + aC3*aS3*aT1*aT2*tauC2**3*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauC2))/((tauT1 - tauC2)*(-tauT2 + tauNonCO2)*(tauC2 - tauNonCO2)*(tauC2 - tauS3)) + aC3*aS3*aT1*aT2*tauC2**3*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauC2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC2)*(tauC2 - tauNonCO2)*(tauC2 - tauS3)) - aC3*aS3*aT1*aT2*tauC2**2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT1 - tauC2)*(-tauT2 + tauNonCO2)*(tauC2 - tauNonCO2)*(tauNonCO2 - tauS3)) - aC3*aS3*aT1*aT2*tauC2**2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC2)*(tauC2 - tauNonCO2)*(tauNonCO2 - tauS3)) + aC3*aS3*aT2**2*tauT2**2*tauC2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT2 - tauC2)**2*(tauT2 - tauNonCO2)*(tauT2 - tauS3)) + aC3*aS3*aT2**2*tauT2**2*tauC2*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT2 - tauC2)*(tauT2 - tauNonCO2)**2*(tauT2 - tauS3)) - aC3*aS3*aT2**2*tauT2*t*tauC2*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauT2 - tauS3)) - aC3*aS3*aT2**2*tauT2*tauC2**3*(-np.exp(-t/tauS3) + np.exp(-t/tauC2))/((tauT2 - tauC2)**2*(tauT2 - tauNonCO2)*(tauC2 - tauS3)) - aC3*aS3*aT2**2*tauT2*tauC2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT2 - tauC2)*(tauT2 - tauNonCO2)**2*(tauNonCO2 - tauS3)) - aC3*aS3*aT2**2*tauT2*tauC2*(-tauT2*tauS3 + (tauT2*(t + tauS3) - t*tauS3)*np.exp(t*(-1/tauS3 + 1/tauT2)))*np.exp(-t/tauT2)/((tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauT2 - tauS3)**2) - aC3*aS3*aT2**2*tauC2**3*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauC2))/((tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauC2 - tauNonCO2)*(tauC2 - tauS3)) + aC3*aS3*aT2**2*tauC2**2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauC2 - tauNonCO2)*(tauNonCO2 - tauS3)) + aC3*aT1**2*tauT1*tauC2**2*np.exp(-t/tauC2)/((tauT1 - tauC2)**2*(tauT1 - tauNonCO2)) - aC3*aT1**2*tauT1*tauC2**2*np.exp(-t/tauT1)/((tauT1 - tauC2)**2*(tauT1 - tauNonCO2)) + aC3*aT1**2*tauT1*tauC2*tauNonCO2*np.exp(-t/tauNonCO2)/((tauT1 - tauC2)*(tauT1 - tauNonCO2)**2) - aC3*aT1**2*tauT1*tauC2*tauNonCO2*np.exp(-t/tauT1)/((tauT1 - tauC2)*(tauT1 - tauNonCO2)**2) + aC3*aT1**2*t*tauC2*np.exp(-t/tauT1)/((tauT1 - tauC2)*(tauT1 - tauNonCO2)) - aC3*aT1**2*tauC2**2*tauNonCO2*np.exp(-t/tauNonCO2)/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauC2 - tauNonCO2)) + aC3*aT1**2*tauC2**2*tauNonCO2*np.exp(-t/tauC2)/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauC2 - tauNonCO2)) - aC3*aT1*tauT1*aT2*tauT2*tauC2*np.exp(-t/tauT2)/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT2 - tauC2)) + aC3*aT1*tauT1*aT2*tauT2*tauC2*np.exp(-t/tauT1)/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT2 - tauC2)) - aC3*aT1*tauT1*aT2*tauT2*tauC2*np.exp(-t/tauT2)/((tauT1 - tauT2)*(tauT1 - tauC2)*(tauT2 - tauNonCO2)) + aC3*aT1*tauT1*aT2*tauT2*tauC2*np.exp(-t/tauT1)/((tauT1 - tauT2)*(tauT1 - tauC2)*(tauT2 - tauNonCO2)) + aC3*aT1*tauT1*aT2*tauC2**2*np.exp(-t/tauC2)/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauT2 - tauC2)) + aC3*aT1*tauT1*aT2*tauC2**2*np.exp(-t/tauT1)/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(-tauT2 + tauC2)) + aC3*aT1*tauT1*aT2*tauC2*tauNonCO2*np.exp(-t/tauNonCO2)/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(tauT2 - tauNonCO2)) + aC3*aT1*tauT1*aT2*tauC2*tauNonCO2*np.exp(-t/tauT1)/((tauT1 - tauC2)*(tauT1 - tauNonCO2)*(-tauT2 + tauNonCO2)) + aC3*aT1*aT2*tauT2*tauC2**2*np.exp(-t/tauC2)/((tauT1 - tauC2)*(tauT2 - tauC2)*(tauT2 - tauNonCO2)) + aC3*aT1*aT2*tauT2*tauC2**2*np.exp(-t/tauT2)/((-tauT1 + tauC2)*(tauT2 - tauC2)*(tauT2 - tauNonCO2)) + aC3*aT1*aT2*tauT2*tauC2*tauNonCO2*np.exp(-t/tauNonCO2)/((tauT1 - tauNonCO2)*(tauT2 - tauC2)*(tauT2 - tauNonCO2)) + aC3*aT1*aT2*tauT2*tauC2*tauNonCO2*np.exp(-t/tauT2)/((-tauT1 + tauNonCO2)*(tauT2 - tauC2)*(tauT2 - tauNonCO2)) + aC3*aT1*aT2*tauC2**2*tauNonCO2*np.exp(-t/tauC2)/((-tauT1 + tauNonCO2)*(-tauT2 + tauC2)*(tauC2 - tauNonCO2)) + aC3*aT1*aT2*tauC2**2*tauNonCO2*np.exp(-t/tauNonCO2)/((-tauT1 + tauNonCO2)*(-tauT2 + tauC2)*(-tauC2 + tauNonCO2)) + aC3*aT1*aT2*tauC2**2*tauNonCO2*np.exp(-t/tauC2)/((-tauT1 + tauC2)*(-tauT2 + tauNonCO2)*(tauC2 - tauNonCO2)) + aC3*aT1*aT2*tauC2**2*tauNonCO2*np.exp(-t/tauNonCO2)/((-tauT1 + tauC2)*(-tauT2 + tauNonCO2)*(-tauC2 + tauNonCO2)) + aC3*aT2**2*tauT2*tauC2**2*np.exp(-t/tauC2)/((tauT2 - tauC2)**2*(tauT2 - tauNonCO2)) - aC3*aT2**2*tauT2*tauC2**2*np.exp(-t/tauT2)/((tauT2 - tauC2)**2*(tauT2 - tauNonCO2)) + aC3*aT2**2*tauT2*tauC2*tauNonCO2*np.exp(-t/tauNonCO2)/((tauT2 - tauC2)*(tauT2 - tauNonCO2)**2) - aC3*aT2**2*tauT2*tauC2*tauNonCO2*np.exp(-t/tauT2)/((tauT2 - tauC2)*(tauT2 - tauNonCO2)**2) + aC3*aT2**2*t*tauC2*np.exp(-t/tauT2)/((tauT2 - tauC2)*(tauT2 - tauNonCO2)) - aC3*aT2**2*tauC2**2*tauNonCO2*np.exp(-t/tauNonCO2)/((tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauC2 - tauNonCO2)) + aC3*aT2**2*tauC2**2*tauNonCO2*np.exp(-t/tauC2)/((tauT2 - tauC2)*(tauT2 - tauNonCO2)*(tauC2 - tauNonCO2)) + aC4*aS1*aT1**2*tauT1**2*tauC3**2*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauC3)**2*(tauT1 - tauNonCO2)*(tauT1 - tauS1)) + aC4*aS1*aT1**2*tauT1**2*tauC3*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)**2*(tauT1 - tauS1)) - aC4*aS1*aT1**2*tauT1*t*tauC3*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauT1 - tauS1)) - aC4*aS1*aT1**2*tauT1*tauC3**3*(-np.exp(-t/tauS1) + np.exp(-t/tauC3))/((tauT1 - tauC3)**2*(tauT1 - tauNonCO2)*(tauC3 - tauS1)) - aC4*aS1*aT1**2*tauT1*tauC3*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)**2*(tauNonCO2 - tauS1)) - aC4*aS1*aT1**2*tauT1*tauC3*(-tauT1*tauS1 + (tauT1*(t + tauS1) - t*tauS1)*np.exp(t*(-1/tauS1 + 1/tauT1)))*np.exp(-t/tauT1)/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauT1 - tauS1)**2) - aC4*aS1*aT1**2*tauC3**3*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauC3))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauC3 - tauNonCO2)*(tauC3 - tauS1)) + aC4*aS1*aT1**2*tauC3**2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauC3 - tauNonCO2)*(tauNonCO2 - tauS1)) - aC4*aS1*aT1*tauT1**2*aT2*tauT2*tauC3*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT1 - tauS1)*(tauT2 - tauC3)) - aC4*aS1*aT1*tauT1**2*aT2*tauT2*tauC3*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauT2)*(tauT1 - tauC3)*(tauT1 - tauS1)*(tauT2 - tauNonCO2)) - aC4*aS1*aT1*tauT1**2*aT2*tauC3**2*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauT1 - tauS1)*(-tauT2 + tauC3)) - aC4*aS1*aT1*tauT1**2*aT2*tauC3*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauT1))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauT1 - tauS1)*(-tauT2 + tauNonCO2)) + aC4*aS1*aT1*tauT1*aT2*tauT2**2*tauC3*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT2 - tauC3)*(tauT2 - tauS1)) + aC4*aS1*aT1*tauT1*aT2*tauT2**2*tauC3*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT1 - tauT2)*(tauT1 - tauC3)*(tauT2 - tauNonCO2)*(tauT2 - tauS1)) + aC4*aS1*aT1*tauT1*aT2*tauC3**3*(-np.exp(-t/tauS1) + np.exp(-t/tauC3))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(-tauT2 + tauC3)*(tauC3 - tauS1)) + aC4*aS1*aT1*tauT1*aT2*tauC3*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(-tauT2 + tauNonCO2)*(tauNonCO2 - tauS1)) - aC4*aS1*aT1*aT2*tauT2**2*tauC3**2*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((-tauT1 + tauC3)*(tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauT2 - tauS1)) - aC4*aS1*aT1*aT2*tauT2**2*tauC3*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauT2 - tauS1)) + aC4*aS1*aT1*aT2*tauT2*tauC3**3*(-np.exp(-t/tauS1) + np.exp(-t/tauC3))/((-tauT1 + tauC3)*(tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauC3 - tauS1)) + aC4*aS1*aT1*aT2*tauT2*tauC3*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauNonCO2 - tauS1)) + aC4*aS1*aT1*aT2*tauC3**3*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauC3))/((tauT1 - tauC3)*(-tauT2 + tauNonCO2)*(tauC3 - tauNonCO2)*(tauC3 - tauS1)) + aC4*aS1*aT1*aT2*tauC3**3*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauC3))/((-tauT1 + tauNonCO2)*(tauT2 - tauC3)*(tauC3 - tauNonCO2)*(tauC3 - tauS1)) - aC4*aS1*aT1*aT2*tauC3**2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT1 - tauC3)*(-tauT2 + tauNonCO2)*(tauC3 - tauNonCO2)*(tauNonCO2 - tauS1)) - aC4*aS1*aT1*aT2*tauC3**2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC3)*(tauC3 - tauNonCO2)*(tauNonCO2 - tauS1)) + aC4*aS1*aT2**2*tauT2**2*tauC3**2*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT2 - tauC3)**2*(tauT2 - tauNonCO2)*(tauT2 - tauS1)) + aC4*aS1*aT2**2*tauT2**2*tauC3*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT2 - tauC3)*(tauT2 - tauNonCO2)**2*(tauT2 - tauS1)) - aC4*aS1*aT2**2*tauT2*t*tauC3*(-np.exp(-t/tauS1) + np.exp(-t/tauT2))/((tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauT2 - tauS1)) - aC4*aS1*aT2**2*tauT2*tauC3**3*(-np.exp(-t/tauS1) + np.exp(-t/tauC3))/((tauT2 - tauC3)**2*(tauT2 - tauNonCO2)*(tauC3 - tauS1)) - aC4*aS1*aT2**2*tauT2*tauC3*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT2 - tauC3)*(tauT2 - tauNonCO2)**2*(tauNonCO2 - tauS1)) - aC4*aS1*aT2**2*tauT2*tauC3*(-tauT2*tauS1 + (tauT2*(t + tauS1) - t*tauS1)*np.exp(t*(-1/tauS1 + 1/tauT2)))*np.exp(-t/tauT2)/((tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauT2 - tauS1)**2) - aC4*aS1*aT2**2*tauC3**3*tauNonCO2*(-np.exp(-t/tauS1) + np.exp(-t/tauC3))/((tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauC3 - tauNonCO2)*(tauC3 - tauS1)) + aC4*aS1*aT2**2*tauC3**2*tauNonCO2**2*(-np.exp(-t/tauS1) + np.exp(-t/tauNonCO2))/((tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauC3 - tauNonCO2)*(tauNonCO2 - tauS1)) + aC4*aS2*aT1**2*tauT1**2*tauC3**2*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauC3)**2*(tauT1 - tauNonCO2)*(tauT1 - tauS2)) + aC4*aS2*aT1**2*tauT1**2*tauC3*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)**2*(tauT1 - tauS2)) - aC4*aS2*aT1**2*tauT1*t*tauC3*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauT1 - tauS2)) - aC4*aS2*aT1**2*tauT1*tauC3**3*(-np.exp(-t/tauS2) + np.exp(-t/tauC3))/((tauT1 - tauC3)**2*(tauT1 - tauNonCO2)*(tauC3 - tauS2)) - aC4*aS2*aT1**2*tauT1*tauC3*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)**2*(tauNonCO2 - tauS2)) - aC4*aS2*aT1**2*tauT1*tauC3*(-tauT1*tauS2 + (tauT1*(t + tauS2) - t*tauS2)*np.exp(t*(-1/tauS2 + 1/tauT1)))*np.exp(-t/tauT1)/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauT1 - tauS2)**2) - aC4*aS2*aT1**2*tauC3**3*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauC3))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauC3 - tauNonCO2)*(tauC3 - tauS2)) + aC4*aS2*aT1**2*tauC3**2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauC3 - tauNonCO2)*(tauNonCO2 - tauS2)) - aC4*aS2*aT1*tauT1**2*aT2*tauT2*tauC3*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT1 - tauS2)*(tauT2 - tauC3)) - aC4*aS2*aT1*tauT1**2*aT2*tauT2*tauC3*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauT2)*(tauT1 - tauC3)*(tauT1 - tauS2)*(tauT2 - tauNonCO2)) - aC4*aS2*aT1*tauT1**2*aT2*tauC3**2*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauT1 - tauS2)*(-tauT2 + tauC3)) - aC4*aS2*aT1*tauT1**2*aT2*tauC3*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauT1))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauT1 - tauS2)*(-tauT2 + tauNonCO2)) + aC4*aS2*aT1*tauT1*aT2*tauT2**2*tauC3*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT2 - tauC3)*(tauT2 - tauS2)) + aC4*aS2*aT1*tauT1*aT2*tauT2**2*tauC3*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT1 - tauT2)*(tauT1 - tauC3)*(tauT2 - tauNonCO2)*(tauT2 - tauS2)) + aC4*aS2*aT1*tauT1*aT2*tauC3**3*(-np.exp(-t/tauS2) + np.exp(-t/tauC3))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(-tauT2 + tauC3)*(tauC3 - tauS2)) + aC4*aS2*aT1*tauT1*aT2*tauC3*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(-tauT2 + tauNonCO2)*(tauNonCO2 - tauS2)) - aC4*aS2*aT1*aT2*tauT2**2*tauC3**2*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((-tauT1 + tauC3)*(tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauT2 - tauS2)) - aC4*aS2*aT1*aT2*tauT2**2*tauC3*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauT2 - tauS2)) + aC4*aS2*aT1*aT2*tauT2*tauC3**3*(-np.exp(-t/tauS2) + np.exp(-t/tauC3))/((-tauT1 + tauC3)*(tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauC3 - tauS2)) + aC4*aS2*aT1*aT2*tauT2*tauC3*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauNonCO2 - tauS2)) + aC4*aS2*aT1*aT2*tauC3**3*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauC3))/((tauT1 - tauC3)*(-tauT2 + tauNonCO2)*(tauC3 - tauNonCO2)*(tauC3 - tauS2)) + aC4*aS2*aT1*aT2*tauC3**3*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauC3))/((-tauT1 + tauNonCO2)*(tauT2 - tauC3)*(tauC3 - tauNonCO2)*(tauC3 - tauS2)) - aC4*aS2*aT1*aT2*tauC3**2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT1 - tauC3)*(-tauT2 + tauNonCO2)*(tauC3 - tauNonCO2)*(tauNonCO2 - tauS2)) - aC4*aS2*aT1*aT2*tauC3**2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC3)*(tauC3 - tauNonCO2)*(tauNonCO2 - tauS2)) + aC4*aS2*aT2**2*tauT2**2*tauC3**2*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT2 - tauC3)**2*(tauT2 - tauNonCO2)*(tauT2 - tauS2)) + aC4*aS2*aT2**2*tauT2**2*tauC3*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT2 - tauC3)*(tauT2 - tauNonCO2)**2*(tauT2 - tauS2)) - aC4*aS2*aT2**2*tauT2*t*tauC3*(-np.exp(-t/tauS2) + np.exp(-t/tauT2))/((tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauT2 - tauS2)) - aC4*aS2*aT2**2*tauT2*tauC3**3*(-np.exp(-t/tauS2) + np.exp(-t/tauC3))/((tauT2 - tauC3)**2*(tauT2 - tauNonCO2)*(tauC3 - tauS2)) - aC4*aS2*aT2**2*tauT2*tauC3*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT2 - tauC3)*(tauT2 - tauNonCO2)**2*(tauNonCO2 - tauS2)) - aC4*aS2*aT2**2*tauT2*tauC3*(-tauT2*tauS2 + (tauT2*(t + tauS2) - t*tauS2)*np.exp(t*(-1/tauS2 + 1/tauT2)))*np.exp(-t/tauT2)/((tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauT2 - tauS2)**2) - aC4*aS2*aT2**2*tauC3**3*tauNonCO2*(-np.exp(-t/tauS2) + np.exp(-t/tauC3))/((tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauC3 - tauNonCO2)*(tauC3 - tauS2)) + aC4*aS2*aT2**2*tauC3**2*tauNonCO2**2*(-np.exp(-t/tauS2) + np.exp(-t/tauNonCO2))/((tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauC3 - tauNonCO2)*(tauNonCO2 - tauS2)) + aC4*aS3*aT1**2*tauT1**2*tauC3**2*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauC3)**2*(tauT1 - tauNonCO2)*(tauT1 - tauS3)) + aC4*aS3*aT1**2*tauT1**2*tauC3*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)**2*(tauT1 - tauS3)) - aC4*aS3*aT1**2*tauT1*t*tauC3*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauT1 - tauS3)) - aC4*aS3*aT1**2*tauT1*tauC3**3*(-np.exp(-t/tauS3) + np.exp(-t/tauC3))/((tauT1 - tauC3)**2*(tauT1 - tauNonCO2)*(tauC3 - tauS3)) - aC4*aS3*aT1**2*tauT1*tauC3*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)**2*(tauNonCO2 - tauS3)) - aC4*aS3*aT1**2*tauT1*tauC3*(-tauT1*tauS3 + (tauT1*(t + tauS3) - t*tauS3)*np.exp(t*(-1/tauS3 + 1/tauT1)))*np.exp(-t/tauT1)/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauT1 - tauS3)**2) - aC4*aS3*aT1**2*tauC3**3*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauC3))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauC3 - tauNonCO2)*(tauC3 - tauS3)) + aC4*aS3*aT1**2*tauC3**2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauC3 - tauNonCO2)*(tauNonCO2 - tauS3)) - aC4*aS3*aT1*tauT1**2*aT2*tauT2*tauC3*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT1 - tauS3)*(tauT2 - tauC3)) - aC4*aS3*aT1*tauT1**2*aT2*tauT2*tauC3*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauT2)*(tauT1 - tauC3)*(tauT1 - tauS3)*(tauT2 - tauNonCO2)) - aC4*aS3*aT1*tauT1**2*aT2*tauC3**2*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauT1 - tauS3)*(-tauT2 + tauC3)) - aC4*aS3*aT1*tauT1**2*aT2*tauC3*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauT1))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauT1 - tauS3)*(-tauT2 + tauNonCO2)) + aC4*aS3*aT1*tauT1*aT2*tauT2**2*tauC3*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT2 - tauC3)*(tauT2 - tauS3)) + aC4*aS3*aT1*tauT1*aT2*tauT2**2*tauC3*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT1 - tauT2)*(tauT1 - tauC3)*(tauT2 - tauNonCO2)*(tauT2 - tauS3)) + aC4*aS3*aT1*tauT1*aT2*tauC3**3*(-np.exp(-t/tauS3) + np.exp(-t/tauC3))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(-tauT2 + tauC3)*(tauC3 - tauS3)) + aC4*aS3*aT1*tauT1*aT2*tauC3*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(-tauT2 + tauNonCO2)*(tauNonCO2 - tauS3)) - aC4*aS3*aT1*aT2*tauT2**2*tauC3**2*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((-tauT1 + tauC3)*(tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauT2 - tauS3)) - aC4*aS3*aT1*aT2*tauT2**2*tauC3*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauT2 - tauS3)) + aC4*aS3*aT1*aT2*tauT2*tauC3**3*(-np.exp(-t/tauS3) + np.exp(-t/tauC3))/((-tauT1 + tauC3)*(tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauC3 - tauS3)) + aC4*aS3*aT1*aT2*tauT2*tauC3*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauNonCO2 - tauS3)) + aC4*aS3*aT1*aT2*tauC3**3*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauC3))/((tauT1 - tauC3)*(-tauT2 + tauNonCO2)*(tauC3 - tauNonCO2)*(tauC3 - tauS3)) + aC4*aS3*aT1*aT2*tauC3**3*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauC3))/((-tauT1 + tauNonCO2)*(tauT2 - tauC3)*(tauC3 - tauNonCO2)*(tauC3 - tauS3)) - aC4*aS3*aT1*aT2*tauC3**2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT1 - tauC3)*(-tauT2 + tauNonCO2)*(tauC3 - tauNonCO2)*(tauNonCO2 - tauS3)) - aC4*aS3*aT1*aT2*tauC3**2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((-tauT1 + tauNonCO2)*(tauT2 - tauC3)*(tauC3 - tauNonCO2)*(tauNonCO2 - tauS3)) + aC4*aS3*aT2**2*tauT2**2*tauC3**2*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT2 - tauC3)**2*(tauT2 - tauNonCO2)*(tauT2 - tauS3)) + aC4*aS3*aT2**2*tauT2**2*tauC3*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT2 - tauC3)*(tauT2 - tauNonCO2)**2*(tauT2 - tauS3)) - aC4*aS3*aT2**2*tauT2*t*tauC3*(-np.exp(-t/tauS3) + np.exp(-t/tauT2))/((tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauT2 - tauS3)) - aC4*aS3*aT2**2*tauT2*tauC3**3*(-np.exp(-t/tauS3) + np.exp(-t/tauC3))/((tauT2 - tauC3)**2*(tauT2 - tauNonCO2)*(tauC3 - tauS3)) - aC4*aS3*aT2**2*tauT2*tauC3*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT2 - tauC3)*(tauT2 - tauNonCO2)**2*(tauNonCO2 - tauS3)) - aC4*aS3*aT2**2*tauT2*tauC3*(-tauT2*tauS3 + (tauT2*(t + tauS3) - t*tauS3)*np.exp(t*(-1/tauS3 + 1/tauT2)))*np.exp(-t/tauT2)/((tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauT2 - tauS3)**2) - aC4*aS3*aT2**2*tauC3**3*tauNonCO2*(-np.exp(-t/tauS3) + np.exp(-t/tauC3))/((tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauC3 - tauNonCO2)*(tauC3 - tauS3)) + aC4*aS3*aT2**2*tauC3**2*tauNonCO2**2*(-np.exp(-t/tauS3) + np.exp(-t/tauNonCO2))/((tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauC3 - tauNonCO2)*(tauNonCO2 - tauS3)) + aC4*aT1**2*tauT1*tauC3**2*np.exp(-t/tauC3)/((tauT1 - tauC3)**2*(tauT1 - tauNonCO2)) - aC4*aT1**2*tauT1*tauC3**2*np.exp(-t/tauT1)/((tauT1 - tauC3)**2*(tauT1 - tauNonCO2)) + aC4*aT1**2*tauT1*tauC3*tauNonCO2*np.exp(-t/tauNonCO2)/((tauT1 - tauC3)*(tauT1 - tauNonCO2)**2) - aC4*aT1**2*tauT1*tauC3*tauNonCO2*np.exp(-t/tauT1)/((tauT1 - tauC3)*(tauT1 - tauNonCO2)**2) + aC4*aT1**2*t*tauC3*np.exp(-t/tauT1)/((tauT1 - tauC3)*(tauT1 - tauNonCO2)) - aC4*aT1**2*tauC3**2*tauNonCO2*np.exp(-t/tauNonCO2)/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauC3 - tauNonCO2)) + aC4*aT1**2*tauC3**2*tauNonCO2*np.exp(-t/tauC3)/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauC3 - tauNonCO2)) - aC4*aT1*tauT1*aT2*tauT2*tauC3*np.exp(-t/tauT2)/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT2 - tauC3)) + aC4*aT1*tauT1*aT2*tauT2*tauC3*np.exp(-t/tauT1)/((tauT1 - tauT2)*(tauT1 - tauNonCO2)*(tauT2 - tauC3)) - aC4*aT1*tauT1*aT2*tauT2*tauC3*np.exp(-t/tauT2)/((tauT1 - tauT2)*(tauT1 - tauC3)*(tauT2 - tauNonCO2)) + aC4*aT1*tauT1*aT2*tauT2*tauC3*np.exp(-t/tauT1)/((tauT1 - tauT2)*(tauT1 - tauC3)*(tauT2 - tauNonCO2)) + aC4*aT1*tauT1*aT2*tauC3**2*np.exp(-t/tauC3)/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauT2 - tauC3)) + aC4*aT1*tauT1*aT2*tauC3**2*np.exp(-t/tauT1)/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(-tauT2 + tauC3)) + aC4*aT1*tauT1*aT2*tauC3*tauNonCO2*np.exp(-t/tauNonCO2)/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(tauT2 - tauNonCO2)) + aC4*aT1*tauT1*aT2*tauC3*tauNonCO2*np.exp(-t/tauT1)/((tauT1 - tauC3)*(tauT1 - tauNonCO2)*(-tauT2 + tauNonCO2)) + aC4*aT1*aT2*tauT2*tauC3**2*np.exp(-t/tauC3)/((tauT1 - tauC3)*(tauT2 - tauC3)*(tauT2 - tauNonCO2)) + aC4*aT1*aT2*tauT2*tauC3**2*np.exp(-t/tauT2)/((-tauT1 + tauC3)*(tauT2 - tauC3)*(tauT2 - tauNonCO2)) + aC4*aT1*aT2*tauT2*tauC3*tauNonCO2*np.exp(-t/tauNonCO2)/((tauT1 - tauNonCO2)*(tauT2 - tauC3)*(tauT2 - tauNonCO2)) + aC4*aT1*aT2*tauT2*tauC3*tauNonCO2*np.exp(-t/tauT2)/((-tauT1 + tauNonCO2)*(tauT2 - tauC3)*(tauT2 - tauNonCO2)) + aC4*aT1*aT2*tauC3**2*tauNonCO2*np.exp(-t/tauC3)/((-tauT1 + tauNonCO2)*(-tauT2 + tauC3)*(tauC3 - tauNonCO2)) + aC4*aT1*aT2*tauC3**2*tauNonCO2*np.exp(-t/tauNonCO2)/((-tauT1 + tauNonCO2)*(-tauT2 + tauC3)*(-tauC3 + tauNonCO2)) + aC4*aT1*aT2*tauC3**2*tauNonCO2*np.exp(-t/tauC3)/((-tauT1 + tauC3)*(-tauT2 + tauNonCO2)*(tauC3 - tauNonCO2)) + aC4*aT1*aT2*tauC3**2*tauNonCO2*np.exp(-t/tauNonCO2)/((-tauT1 + tauC3)*(-tauT2 + tauNonCO2)*(-tauC3 + tauNonCO2)) + aC4*aT2**2*tauT2*tauC3**2*np.exp(-t/tauC3)/((tauT2 - tauC3)**2*(tauT2 - tauNonCO2)) - aC4*aT2**2*tauT2*tauC3**2*np.exp(-t/tauT2)/((tauT2 - tauC3)**2*(tauT2 - tauNonCO2)) + aC4*aT2**2*tauT2*tauC3*tauNonCO2*np.exp(-t/tauNonCO2)/((tauT2 - tauC3)*(tauT2 - tauNonCO2)**2) - aC4*aT2**2*tauT2*tauC3*tauNonCO2*np.exp(-t/tauT2)/((tauT2 - tauC3)*(tauT2 - tauNonCO2)**2) + aC4*aT2**2*t*tauC3*np.exp(-t/tauT2)/((tauT2 - tauC3)*(tauT2 - tauNonCO2)) - aC4*aT2**2*tauC3**2*tauNonCO2*np.exp(-t/tauNonCO2)/((tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauC3 - tauNonCO2)) + aC4*aT2**2*tauC3**2*tauNonCO2*np.exp(-t/tauC3)/((tauT2 - tauC3)*(tauT2 - tauNonCO2)*(tauC3 - tauNonCO2)) + (aC1*aS1*aT2**2*tauNonCO2 - aC1*aS1*aT2**2*tauNonCO2*np.exp(-t/tauS1))/(tauT2 - tauNonCO2) + (aC1*aS2*aT2**2*tauNonCO2 - aC1*aS2*aT2**2*tauNonCO2*np.exp(-t/tauS2))/(tauT2 - tauNonCO2) + (aC1*aS3*aT2**2*tauNonCO2 - aC1*aS3*aT2**2*tauNonCO2*np.exp(-t/tauS3))/(tauT2 - tauNonCO2) + (aC1*aS1*aT1**2*tauNonCO2 - aC1*aS1*aT1**2*tauNonCO2*np.exp(-t/tauS1))/(tauT1 - tauNonCO2) + (aC1*aS2*aT1**2*tauNonCO2 - aC1*aS2*aT1**2*tauNonCO2*np.exp(-t/tauS2))/(tauT1 - tauNonCO2) + (aC1*aS3*aT1**2*tauNonCO2 - aC1*aS3*aT1**2*tauNonCO2*np.exp(-t/tauS3))/(tauT1 - tauNonCO2)

    return (M_CO2/M_C)*1E12 * AANonCO2 * AACO2 * gamma * kPulseT**2 * tauNonCO2 * (term1 + term2 + term3 + term4 + term5)

def AGTPNonCO2_Final(t, tauNonCO2, kPulseT, aT1, tauT1, aT2, tauT2, AANonCO2, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, gamma, aS1, aS2, aS3, tauS1, tauS2, tauS3):

    return AGTPNonCO2(t, tauNonCO2, kPulseT, aT1, tauT1, aT2, tauT2, AANonCO2) + DAGTPNonCO2(t, tauNonCO2, kPulseT,  aT1, tauT1, aT2, tauT2, AANonCO2, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, gamma, aS1, aS2, aS3, tauS1, tauS2, tauS3)

def AGTPPRF_Exp(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, kPulseT, aT1, tauT1, aT2, tauT2, AACO2, decay, p, rotation):
    
    result = (-3*aC1*aT1*tauT1*(-np.exp(-3*t/decay) + np.exp(-t/tauT1))/(3*tauT1 - decay) + aC1*aT1*(1 - np.exp(-3*t/decay)) + aC1*aT1*np.exp(-t/tauT1) - 3*aC1*aT2*tauT2*(-np.exp(-3*t/decay) + np.exp(-t/tauT2))/(3*tauT2 - decay) + aC1*aT2*(1 - np.exp(-3*t/decay)) + aC1*aT2*np.exp(-t/tauT2) - aC1*(aT1 + aT2) + 3*aC2*aT1*tauT1*tauC1*(-np.exp(-3*t/decay) + np.exp(-t/tauT1))/((tauT1 - tauC1)*(3*tauT1 - decay)) - 3*aC2*aT1*tauC1**2*(-np.exp(-t/tauC1) + np.exp(-3*t/decay))/((tauT1 - tauC1)*(decay - 3*tauC1)) - aC2*aT1*tauC1*np.exp(-t/tauT1)/(tauT1 - tauC1) - aC2*aT1*tauC1*np.exp(-t/tauC1)/(-tauT1 + tauC1) + 3*aC2*aT2*tauT2*tauC1*(-np.exp(-3*t/decay) + np.exp(-t/tauT2))/((tauT2 - tauC1)*(3*tauT2 - decay)) - 3*aC2*aT2*tauC1**2*(-np.exp(-t/tauC1) + np.exp(-3*t/decay))/((tauT2 - tauC1)*(decay - 3*tauC1)) - aC2*aT2*tauC1*np.exp(-t/tauT2)/(tauT2 - tauC1) - aC2*aT2*tauC1*np.exp(-t/tauC1)/(-tauT2 + tauC1) + 3*aC3*aT1*tauT1*tauC2*(-np.exp(-3*t/decay) + np.exp(-t/tauT1))/((tauT1 - tauC2)*(3*tauT1 - decay)) - 3*aC3*aT1*tauC2**2*(-np.exp(-t/tauC2) + np.exp(-3*t/decay))/((tauT1 - tauC2)*(decay - 3*tauC2)) - aC3*aT1*tauC2*np.exp(-t/tauT1)/(tauT1 - tauC2) - aC3*aT1*tauC2*np.exp(-t/tauC2)/(-tauT1 + tauC2) + 3*aC3*aT2*tauT2*tauC2*(-np.exp(-3*t/decay) + np.exp(-t/tauT2))/((tauT2 - tauC2)*(3*tauT2 - decay)) - 3*aC3*aT2*tauC2**2*(-np.exp(-t/tauC2) + np.exp(-3*t/decay))/((tauT2 - tauC2)*(decay - 3*tauC2)) - aC3*aT2*tauC2*np.exp(-t/tauT2)/(tauT2 - tauC2) - aC3*aT2*tauC2*np.exp(-t/tauC2)/(-tauT2 + tauC2) + 3*aC4*aT1*tauT1*tauC3*(-np.exp(-3*t/decay) + np.exp(-t/tauT1))/((tauT1 - tauC3)*(3*tauT1 - decay)) - 3*aC4*aT1*tauC3**2*(-np.exp(-t/tauC3) + np.exp(-3*t/decay))/((tauT1 - tauC3)*(decay - 3*tauC3)) - aC4*aT1*tauC3*np.exp(-t/tauT1)/(tauT1 - tauC3) - aC4*aT1*tauC3*np.exp(-t/tauC3)/(-tauT1 + tauC3) + 3*aC4*aT2*tauT2*tauC3*(-np.exp(-3*t/decay) + np.exp(-t/tauT2))/((tauT2 - tauC3)*(3*tauT2 - decay)) - 3*aC4*aT2*tauC3**2*(-np.exp(-t/tauC3) + np.exp(-3*t/decay))/((tauT2 - tauC3)*(decay - 3*tauC3)) - aC4*aT2*tauC3*np.exp(-t/tauT2)/(tauT2 - tauC3) - aC4*aT2*tauC3*np.exp(-t/tauC3)/(-tauT2 + tauC3))
    
    return result * AACO2 * kPulseT

def AGTPPRF_Linear(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, kPulseT, aT1, tauT1, aT2, tauT2, AACO2, decay, p, rotation):
   
    term1 = (aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*(2*tauT1**2*(np.exp(decay/tauT1) - 1) - 2*tauT1*decay - decay**2*np.exp(t/tauT1))*np.exp(t/tauT2) + aT2*(2*tauT2**2*(np.exp(decay/tauT2) - 1) - 2*tauT2*decay - decay**2*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) - 2*aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(-aT1*tauT1**2*(tauT2 - tauC1)*(np.exp(decay/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(aT1*decay*(tauT2 - tauC1)*np.exp(t*(1/tauC1 + 1/tauT2)) - aT2*(tauT2**2*(np.exp(decay/tauT2) - 1)*np.exp(t/tauC1) - tauT2*decay*np.exp(t/tauC1) + tauC1*(decay - tauC1*np.exp(decay/tauC1) + tauC1)*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2)) + tauC1*(-aT1*(tauT2 - tauC1)*(decay - tauC1*np.exp(decay/tauC1) + tauC1)*np.exp(t/tauT2) + aT2*(tauT2**2*(np.exp(decay/tauT2) - 1)*np.exp(t/tauC1) - tauT2*decay*np.exp(t/tauC1) + tauC1*(decay - tauC1*np.exp(decay/tauC1) + tauC1)*np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1))) - 2*(tauT1 - tauC1)*(tauT2 - tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(-tauT2 + tauC3)*(-aT1*tauT1**2*(tauT2 - tauC2)*(np.exp(decay/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(aT1*decay*(tauT2 - tauC2)*np.exp(t*(1/tauC2 + 1/tauT2)) - aT2*(tauT2**2*(np.exp(decay/tauT2) - 1)*np.exp(t/tauC2) - tauT2*decay*np.exp(t/tauC2) + tauC2*(decay - tauC2*np.exp(decay/tauC2) + tauC2)*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC1)) + tauC2*(-aT1*(tauT2 - tauC2)*(decay - tauC2*np.exp(decay/tauC2) + tauC2)*np.exp(t/tauT2) + aT2*(tauT2**2*(np.exp(decay/tauT2) - 1)*np.exp(t/tauC2) - tauT2*decay*np.exp(t/tauC2) + tauC2*(decay - tauC2*np.exp(decay/tauC2) + tauC2)*np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(aT1*tauT1**2*(tauT2 - tauC3)*(np.exp(decay/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*decay*(tauT2 - tauC3)*np.exp(t*(1/tauC3 + 1/tauT2)) + aT2*(tauT2**2*(np.exp(decay/tauT2) - 1)*np.exp(t/tauC3) - tauT2*decay*np.exp(t/tauC3) + tauC3*(decay - tauC3*np.exp(decay/tauC3) + tauC3)*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC2 + 1/tauC1)) + tauC3*(aT1*(tauT2 - tauC3)*(decay - tauC3*np.exp(decay/tauC3) + tauC3)*np.exp(t/tauT2) - aT2*(tauT2**2*(np.exp(decay/tauT2) - 1)*np.exp(t/tauC3) - tauT2*decay*np.exp(t/tauC3) + tauC3*(decay - tauC3*np.exp(decay/tauC3) + tauC3)*np.exp(t/tauT2)))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))/(decay**2*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3))
    
    term2 = (-aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*(-2*tauT1**2*(np.exp(t/tauT1) - 1) + 2*tauT1*(-decay*np.exp(t/tauT1) + decay + t*np.exp(t/tauT1)) - t*(-2*decay + t)*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT2*(-2*tauT2**2*(np.exp(t/tauT2) - 1) + 2*tauT2*(-decay*np.exp(t/tauT2) + decay + t*np.exp(t/tauT2)) - t*(-2*decay + t)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1))) + 2*aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(aT1*tauT1**2*(tauT2 - tauC1)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - aT1*tauT1*(tauT2 - tauC1)*(-decay*np.exp(t/tauT1) + decay + t*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT1*tauC1*(tauT2 - tauC1)*(-decay*np.exp(t/tauC1) + decay + tauC1 + (t - tauC1)*np.exp(t/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)) + tauT1*aT2*(tauT2**2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC1) - tauT2*(-decay*np.exp(t/tauT2) + decay + t*np.exp(t/tauT2))*np.exp(t/tauC1) + tauC1*(-decay*np.exp(t/tauC1) + decay + tauC1 + (t - tauC1)*np.exp(t/tauC1))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1)) + aT2*tauC1*(-tauT2**2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC1) + tauT2*(-decay*np.exp(t/tauT2) + decay + t*np.exp(t/tauT2))*np.exp(t/tauC1) - tauC1*(-decay*np.exp(t/tauC1) + decay + tauC1 + (t - tauC1)*np.exp(t/tauC1))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1))) + 2*(tauT1 - tauC1)*(-tauT2 + tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(tauT2 - tauC3)*(aT1*tauT1**2*(tauT2 - tauC2)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - aT1*tauT1*(tauT2 - tauC2)*(-decay*np.exp(t/tauT1) + decay + t*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT1*tauC2*(tauT2 - tauC2)*(-decay*np.exp(t/tauC2) + decay + tauC2 + (t - tauC2)*np.exp(t/tauC2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + tauT1*aT2*(tauT2**2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC2) - tauT2*(-decay*np.exp(t/tauT2) + decay + t*np.exp(t/tauT2))*np.exp(t/tauC2) + tauC2*(-decay*np.exp(t/tauC2) + decay + tauC2 + (t - tauC2)*np.exp(t/tauC2))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1)) + aT2*tauC2*(-tauT2**2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC2) + tauT2*(-decay*np.exp(t/tauT2) + decay + t*np.exp(t/tauT2))*np.exp(t/tauC2) - tauC2*(-decay*np.exp(t/tauC2) + decay + tauC2 + (t - tauC2)*np.exp(t/tauC2))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(aT1*tauT1**2*(tauT2 - tauC3)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - aT1*tauT1*(tauT2 - tauC3)*(-decay*np.exp(t/tauT1) + decay + t*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT1*tauC3*(tauT2 - tauC3)*(-decay*np.exp(t/tauC3) + decay + tauC3 + (t - tauC3)*np.exp(t/tauC3))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + tauT1*aT2*(tauT2**2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC3) - tauT2*(-decay*np.exp(t/tauT2) + decay + t*np.exp(t/tauT2))*np.exp(t/tauC3) + tauC3*(-decay*np.exp(t/tauC3) + decay + tauC3 + (t - tauC3)*np.exp(t/tauC3))*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)) + aT2*tauC3*(-tauT2**2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC3) + tauT2*(-decay*np.exp(t/tauT2) + decay + t*np.exp(t/tauT2))*np.exp(t/tauC3) - tauC3*(-decay*np.exp(t/tauC3) + decay + tauC3 + (t - tauC3)*np.exp(t/tauC3))*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))/(decay**2*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3))
    
    term3 = -aC1*aT1*np.exp(-t/tauT1) - aC1*aT2*np.exp(-t/tauT2) + aC1*(aT1 + aT2) + aC2*aT1*tauC1*np.exp(-t/tauT1)/(tauT1 - tauC1) + aC2*aT1*tauC1*np.exp(-t/tauC1)/(-tauT1 + tauC1) + aC2*aT2*tauC1*np.exp(-t/tauT2)/(tauT2 - tauC1) + aC2*aT2*tauC1*np.exp(-t/tauC1)/(-tauT2 + tauC1) + aC3*aT1*tauC2*np.exp(-t/tauT1)/(tauT1 - tauC2) + aC3*aT1*tauC2*np.exp(-t/tauC2)/(-tauT1 + tauC2) + aC3*aT2*tauC2*np.exp(-t/tauT2)/(tauT2 - tauC2) + aC3*aT2*tauC2*np.exp(-t/tauC2)/(-tauT2 + tauC2) + aC4*aT1*tauC3*np.exp(-t/tauT1)/(tauT1 - tauC3) + aC4*aT1*tauC3*np.exp(-t/tauC3)/(-tauT1 + tauC3) + aC4*aT2*tauC3*np.exp(-t/tauT2)/(tauT2 - tauC3) + aC4*aT2*tauC3*np.exp(-t/tauC3)/(-tauT2 + tauC3)
    
    result = np.where((decay > 0) & (decay < t),  term1, 
              np.where((decay > 0) & (t > 0) & (decay >= t), term2, 
              0)) - term3
    
    return result * AACO2 * kPulseT

def AGTPPRF_Constant(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, kPulseT, aT1, tauT1, aT2, tauT2, AACO2, decay, p, rotation):
   
    term1 = (aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(-aT1*(-tauT1*np.exp(decay/tauT1) + tauT1 + decay*np.exp(t/tauT1))*np.exp(t/tauT2) - aT2*(-tauT2*np.exp(decay/tauT2) + tauT2 + decay*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(tauT1*(aT1*(tauT2 - tauC1)*(np.exp(decay/tauT1) - 1)*np.exp(t*(1/tauC1 + 1/tauT2)) + aT2*(tauT2*(np.exp(decay/tauT2) - 1)*np.exp(t/tauC1) - tauC1*(np.exp(decay/tauC1) - 1)*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2)) + tauC1*(-aT1*(tauT2 - tauC1)*(np.exp(decay/tauC1) - 1)*np.exp(t/tauT2) - aT2*tauT2*(np.exp(decay/tauT2) - 1)*np.exp(t/tauC1) + aT2*tauC1*(np.exp(decay/tauC1) - 1)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1))) + (tauT1 - tauC1)*(-tauT2 + tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(-tauT2 + tauC3)*(tauT1*(-aT1*(tauT2 - tauC2)*(np.exp(decay/tauT1) - 1)*np.exp(t*(1/tauC2 + 1/tauT2)) + aT2*(-tauT2*(np.exp(decay/tauT2) - 1)*np.exp(t/tauC2) + tauC2*(np.exp(decay/tauC2) - 1)*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC1)) + tauC2*(aT1*(tauT2 - tauC2)*(np.exp(decay/tauC2) - 1)*np.exp(t/tauT2) + aT2*tauT2*(np.exp(decay/tauT2) - 1)*np.exp(t/tauC2) - aT2*tauC2*(np.exp(decay/tauC2) - 1)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(tauT1*(aT1*(tauT2 - tauC3)*(np.exp(decay/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauT2)) + aT2*(tauT2*(np.exp(decay/tauT2) - 1)*np.exp(t/tauC3) - tauC3*(np.exp(decay/tauC3) - 1)*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC2 + 1/tauC1)) + tauC3*(-aT1*(tauT2 - tauC3)*(np.exp(decay/tauC3) - 1)*np.exp(t/tauT2) - aT2*tauT2*(np.exp(decay/tauT2) - 1)*np.exp(t/tauC3) + aT2*tauC3*(np.exp(decay/tauC3) - 1)*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))/(decay*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3))

    term2 = (aC1*(-tauT1 + tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*(-tauT1*np.exp(t/tauT1) + tauT1 + t*np.exp(t/tauT1))*np.exp(t/tauT2) + aT2*(-tauT2*np.exp(t/tauT2) + tauT2 + t*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(tauT1*(aT1*(tauT2 - tauC1)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC1 + 1/tauT2)) + aT2*(tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC1) - tauC1*(np.exp(t/tauC1) - 1)*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2)) + tauC1*(-aT1*(tauT2 - tauC1)*(np.exp(t/tauC1) - 1)*np.exp(t/tauT2) - aT2*tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC1) + aT2*tauC1*(np.exp(t/tauC1) - 1)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1))) + (tauT1 - tauC1)*(tauT2 - tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(-tauT2 + tauC3)*(tauT1*(aT1*(tauT2 - tauC2)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC2 + 1/tauT2)) + aT2*(tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC2) - tauC2*(np.exp(t/tauC2) - 1)*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC1)) + tauC2*(-aT1*(tauT2 - tauC2)*(np.exp(t/tauC2) - 1)*np.exp(t/tauT2) - aT2*tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC2) + aT2*tauC2*(np.exp(t/tauC2) - 1)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(tauT1*(-aT1*(tauT2 - tauC3)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauT2)) + aT2*(-tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC3) + tauC3*(np.exp(t/tauC3) - 1)*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC2 + 1/tauC1)) + tauC3*(aT1*(tauT2 - tauC3)*(np.exp(t/tauC3) - 1)*np.exp(t/tauT2) + aT2*tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC3) - aT2*tauC3*(np.exp(t/tauC3) - 1)*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))/(decay*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3))

    term3 = -aC1*aT1*np.exp(-t/tauT1) - aC1*aT2*np.exp(-t/tauT2) + aC1*(aT1 + aT2) + aC2*aT1*tauC1*np.exp(-t/tauT1)/(tauT1 - tauC1) + aC2*aT1*tauC1*np.exp(-t/tauC1)/(-tauT1 + tauC1) + aC2*aT2*tauC1*np.exp(-t/tauT2)/(tauT2 - tauC1) + aC2*aT2*tauC1*np.exp(-t/tauC1)/(-tauT2 + tauC1) + aC3*aT1*tauC2*np.exp(-t/tauT1)/(tauT1 - tauC2) + aC3*aT1*tauC2*np.exp(-t/tauC2)/(-tauT1 + tauC2) + aC3*aT2*tauC2*np.exp(-t/tauT2)/(tauT2 - tauC2) + aC3*aT2*tauC2*np.exp(-t/tauC2)/(-tauT2 + tauC2) + aC4*aT1*tauC3*np.exp(-t/tauT1)/(tauT1 - tauC3) + aC4*aT1*tauC3*np.exp(-t/tauC3)/(-tauT1 + tauC3) + aC4*aT2*tauC3*np.exp(-t/tauT2)/(tauT2 - tauC3) + aC4*aT2*tauC3*np.exp(-t/tauC3)/(-tauT2 + tauC3)

    result = np.where((decay > 0) & (decay < t),  term1, 
              np.where((decay > 0) & (t > 0) & (decay >= t), term2, 
              0)) - term3
    
    return result * AACO2 * kPulseT

def AGTPPRF_Impulse(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, kPulseT, aT1, tauT1, aT2, tauT2, AACO2, decay, p, rotation):
    
    result = -AACO2*kPulseT*(aC1*(aT1 - aT1*np.exp(-t/tauT1) + aT2 - aT2*np.exp(-t/tauT2)) + aC2*tauC1*(aT1*(-np.exp(-t/tauC1) + np.exp(-t/tauT1))/(tauT1 - tauC1) + aT2*(-np.exp(-t/tauC1) + np.exp(-t/tauT2))/(tauT2 - tauC1)) + aC3*aT1*tauC2*np.exp(-t/tauT1)/(tauT1 - tauC2) + aC3*aT1*tauC2*np.exp(-t/tauC2)/(-tauT1 + tauC2) + aC3*aT2*tauC2*np.exp(-t/tauT2)/(tauT2 - tauC2) + aC3*aT2*tauC2*np.exp(-t/tauC2)/(-tauT2 + tauC2) + aC4*aT1*tauC3*np.exp(-t/tauT1)/(tauT1 - tauC3) + aC4*aT1*tauC3*np.exp(-t/tauC3)/(-tauT1 + tauC3) + aC4*aT2*tauC3*np.exp(-t/tauT2)/(tauT2 - tauC3) + aC4*aT2*tauC3*np.exp(-t/tauC3)/(-tauT2 + tauC3)) + AACO2*kPulseT*(aC1*(-aT1*np.exp((decay - t)/tauT1) + aT1 - aT2*np.exp((decay - t)/tauT2) + aT2) + aC2*tauC1*(aT1*(np.exp((decay - t)/tauT1) - np.exp((decay - t)/tauC1))/(tauT1 - tauC1) + aT2*(np.exp((decay - t)/tauT2) - np.exp((decay - t)/tauC1))/(tauT2 - tauC1)) + aC3*aT1*tauC2*np.exp((decay - t)/tauT1)/(tauT1 - tauC2) + aC3*aT1*tauC2*np.exp((decay - t)/tauC2)/(-tauT1 + tauC2) + aC3*aT2*tauC2*np.exp((decay - t)/tauT2)/(tauT2 - tauC2) + aC3*aT2*tauC2*np.exp((decay - t)/tauC2)/(-tauT2 + tauC2) + aC4*aT1*tauC3*np.exp((decay - t)/tauT1)/(tauT1 - tauC3) + aC4*aT1*tauC3*np.exp((decay - t)/tauC3)/(-tauT1 + tauC3) + aC4*aT2*tauC3*np.exp((decay - t)/tauT2)/(tauT2 - tauC3) + aC4*aT2*tauC3*np.exp((decay - t)/tauC3)/(-tauT2 + tauC3))*UnitStep(decay, -decay + t)

    return result 

def AGTPPRF_Constant_Exp(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, kPulseT, aT1, tauT1, aT2, tauT2, AACO2, decay, p, rotation):
   
    # AGTP 10
    term1 = (aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*(-tauT1*np.exp(t/tauT1) + tauT1 + t*np.exp(t/tauT1))*np.exp(t/tauT2) + aT2*(-tauT2*np.exp(t/tauT2) + tauT2 + t*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) - aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(tauT1*(aT1*(tauT2 - tauC1)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC1 + 1/tauT2)) + aT2*(tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC1) - tauC1*(np.exp(t/tauC1) - 1)*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2)) + tauC1*(-aT1*(tauT2 - tauC1)*(np.exp(t/tauC1) - 1)*np.exp(t/tauT2) - aT2*tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC1) + aT2*tauC1*(np.exp(t/tauC1) - 1)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1))) + (tauT1 - tauC1)*(-tauT2 + tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(-tauT2 + tauC3)*(tauT1*(aT1*(tauT2 - tauC2)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC2 + 1/tauT2)) + aT2*(tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC2) - tauC2*(np.exp(t/tauC2) - 1)*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC1)) + tauC2*(-aT1*(tauT2 - tauC2)*(np.exp(t/tauC2) - 1)*np.exp(t/tauT2) - aT2*tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC2) + aT2*tauC2*(np.exp(t/tauC2) - 1)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(tauT1*(-aT1*(tauT2 - tauC3)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauT2)) + aT2*(-tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC3) + tauC3*(np.exp(t/tauC3) - 1)*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC2 + 1/tauC1)) + tauC3*(aT1*(tauT2 - tauC3)*(np.exp(t/tauC3) - 1)*np.exp(t/tauT2) + aT2*tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC3) - aT2*tauC3*(np.exp(t/tauC3) - 1)*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))/(rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3))
    
    term2 = (-aC1*(-tauT1 + tauC1)*(-tauT1 + tauC2)*(-tauT1 + tauC3)*(-tauT2 + tauC1)*(-tauT2 + tauC2)*(-tauT2 + tauC3)*(decay - 3*tauC1)*(decay - 3*tauC2)*(decay - 3*tauC3)*(3*aT1*tauT1**2*(3*tauT2 - decay)*(np.exp(rotation/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 3/decay + 1/tauT2)) + tauT1*(-aT1*(3*tauT2 - decay)*(decay*(np.exp(rotation/tauT1) - 1) + 3*rotation*np.exp(rotation/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 3/decay + 1/tauT2)) + 3*aT2*(3*tauT2**2*(np.exp(rotation/tauT2) - 1)*np.exp(3*t/decay) - tauT2*(decay*(np.exp(rotation/tauT2) - 1) + 3*rotation*np.exp(rotation/tauT2))*np.exp(3*t/decay) + decay*rotation*np.exp(3*rotation/decay + t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1))) + decay*(aT1*rotation*(3*tauT2 - decay)*np.exp(3*rotation/decay + t/tauT2) + aT2*(-3*tauT2**2*(np.exp(rotation/tauT2) - 1)*np.exp(3*t/decay) + tauT2*(decay*(np.exp(rotation/tauT2) - 1) + 3*rotation*np.exp(rotation/tauT2))*np.exp(3*t/decay) - decay*rotation*np.exp(3*rotation/decay + t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1))) + aC2*tauC1*(-tauT1 + tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(decay - 3*tauC2)*(decay - 3*tauC3)*(3*tauT1**2*(aT1*(-3*tauT2 + decay)*(-tauT2 + tauC1)*(decay - 3*tauC1)*(np.exp(rotation/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 3/decay + 1/tauT2)) + aT2*(3*tauT2**2*(decay - 3*tauC1)*(np.exp(rotation/tauT2) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 3/decay + 1/tauT1)) + tauT2*(-decay**2*(np.exp(rotation/tauT2) - 1)*np.exp(t*(1/tauC1 + 3/decay)) + 3*decay*(rotation*np.exp(t*(1/tauC1 + 1/tauT2) + 3*rotation/decay) + tauC1*np.exp(t*(3/decay + 1/tauT2)) - tauC1*np.exp(t*(1/tauC1 + 3/decay)) - tauC1*np.exp(rotation/tauC1 + 3*t/decay + t/tauT2) + (-rotation + tauC1)*np.exp(t/tauC1 + 3*t/decay + rotation/tauT2)) + 9*tauC1*(rotation*np.exp(t/tauC1 + rotation/tauT2) - tauC1*np.exp(t/tauT2) + (-rotation + tauC1)*np.exp(rotation/tauC1 + t/tauT2))*np.exp(3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1)) + decay*tauC1*(decay*(np.exp(rotation/tauC1) - 1)*np.exp(3*t/decay) - 3*rotation*np.exp(t/tauC1 + 3*rotation/decay) + 3*tauC1*np.exp(3*t/decay) + 3*(rotation - tauC1)*np.exp(rotation/tauC1 + 3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)))) + tauT1*(aT1*(tauT2 - tauC1)*(3*tauT2 - decay)*(-decay**2*(np.exp(rotation/tauT1) - 1)*np.exp(t*(1/tauC1 + 3/decay)) + 3*decay*(rotation*np.exp(t*(1/tauC1 + 1/tauT1) + 3*rotation/decay) + tauC1*np.exp(t*(3/decay + 1/tauT1)) - tauC1*np.exp(t*(1/tauC1 + 3/decay)) - tauC1*np.exp(rotation/tauC1 + 3*t/decay + t/tauT1) + (-rotation + tauC1)*np.exp(t/tauC1 + 3*t/decay + rotation/tauT1)) + 9*tauC1*(rotation*np.exp(t/tauC1 + rotation/tauT1) - tauC1*np.exp(t/tauT1) + (-rotation + tauC1)*np.exp(rotation/tauC1 + t/tauT1))*np.exp(3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2)) + aT2*(decay + 3*tauC1)*(-3*tauT2**2*(decay - 3*tauC1)*(np.exp(rotation/tauT2) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 3/decay + 1/tauT1)) + tauT2*(decay**2*(np.exp(rotation/tauT2) - 1)*np.exp(t*(1/tauC1 + 3/decay)) - 3*decay*(rotation*np.exp(t*(1/tauC1 + 1/tauT2) + 3*rotation/decay) + tauC1*np.exp(t*(3/decay + 1/tauT2)) - tauC1*np.exp(t*(1/tauC1 + 3/decay)) - tauC1*np.exp(rotation/tauC1 + 3*t/decay + t/tauT2) + (-rotation + tauC1)*np.exp(t/tauC1 + 3*t/decay + rotation/tauT2)) + 9*tauC1*(-rotation*np.exp(t/tauC1 + rotation/tauT2) + tauC1*np.exp(t/tauT2) + (rotation - tauC1)*np.exp(rotation/tauC1 + t/tauT2))*np.exp(3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1)) + decay*tauC1*(-decay*(np.exp(rotation/tauC1) - 1)*np.exp(3*t/decay) + 3*rotation*np.exp(t/tauC1 + 3*rotation/decay) - 3*tauC1*np.exp(3*t/decay) - 3*(rotation - tauC1)*np.exp(rotation/tauC1 + 3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)))) + decay*tauC1*(aT1*(tauT2 - tauC1)*(3*tauT2 - decay)*(decay*(np.exp(rotation/tauC1) - 1)*np.exp(3*t/decay) - 3*rotation*np.exp(t/tauC1 + 3*rotation/decay) + 3*tauC1*np.exp(3*t/decay) + 3*(rotation - tauC1)*np.exp(rotation/tauC1 + 3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)) + aT2*(3*tauT2**2*(decay - 3*tauC1)*(np.exp(rotation/tauT2) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 3/decay + 1/tauT1)) + tauT2*(-decay**2*(np.exp(rotation/tauT2) - 1)*np.exp(t*(1/tauC1 + 3/decay)) + 3*decay*(rotation*np.exp(t*(1/tauC1 + 1/tauT2) + 3*rotation/decay) + tauC1*np.exp(t*(3/decay + 1/tauT2)) - tauC1*np.exp(t*(1/tauC1 + 3/decay)) - tauC1*np.exp(rotation/tauC1 + 3*t/decay + t/tauT2) + (-rotation + tauC1)*np.exp(t/tauC1 + 3*t/decay + rotation/tauT2)) + 9*tauC1*(rotation*np.exp(t/tauC1 + rotation/tauT2) - tauC1*np.exp(t/tauT2) + (-rotation + tauC1)*np.exp(rotation/tauC1 + t/tauT2))*np.exp(3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1)) + decay*tauC1*(decay*(np.exp(rotation/tauC1) - 1)*np.exp(3*t/decay) - 3*rotation*np.exp(t/tauC1 + 3*rotation/decay) + 3*tauC1*np.exp(3*t/decay) + 3*(rotation - tauC1)*np.exp(rotation/tauC1 + 3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1))))) + (-tauT1 + tauC1)*(-tauT2 + tauC1)*(decay - 3*tauC1)*(aC3*tauC2*(-tauT1 + tauC3)*(-tauT2 + tauC3)*(decay - 3*tauC3)*(3*tauT1**2*(aT1*(-3*tauT2 + decay)*(-tauT2 + tauC2)*(decay - 3*tauC2)*(np.exp(rotation/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 3/decay + 1/tauT2)) + aT2*(3*tauT2**2*(decay - 3*tauC2)*(np.exp(rotation/tauT2) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 3/decay + 1/tauT1)) + tauT2*(-decay**2*(np.exp(rotation/tauT2) - 1)*np.exp(t*(1/tauC2 + 3/decay)) + 3*decay*(rotation*np.exp(t*(1/tauC2 + 1/tauT2) + 3*rotation/decay) + tauC2*np.exp(t*(3/decay + 1/tauT2)) - tauC2*np.exp(t*(1/tauC2 + 3/decay)) - tauC2*np.exp(rotation/tauC2 + 3*t/decay + t/tauT2) + (-rotation + tauC2)*np.exp(t/tauC2 + 3*t/decay + rotation/tauT2)) + 9*tauC2*(rotation*np.exp(t/tauC2 + rotation/tauT2) - tauC2*np.exp(t/tauT2) + (-rotation + tauC2)*np.exp(rotation/tauC2 + t/tauT2))*np.exp(3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1)) + decay*tauC2*(decay*(np.exp(rotation/tauC2) - 1)*np.exp(3*t/decay) - 3*rotation*np.exp(t/tauC2 + 3*rotation/decay) + 3*tauC2*np.exp(3*t/decay) + 3*(rotation - tauC2)*np.exp(rotation/tauC2 + 3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)))) + tauT1*(aT1*(tauT2 - tauC2)*(3*tauT2 - decay)*(-decay**2*(np.exp(rotation/tauT1) - 1)*np.exp(t*(1/tauC2 + 3/decay)) + 3*decay*(rotation*np.exp(t*(1/tauC2 + 1/tauT1) + 3*rotation/decay) + tauC2*np.exp(t*(3/decay + 1/tauT1)) - tauC2*np.exp(t*(1/tauC2 + 3/decay)) - tauC2*np.exp(rotation/tauC2 + 3*t/decay + t/tauT1) + (-rotation + tauC2)*np.exp(t/tauC2 + 3*t/decay + rotation/tauT1)) + 9*tauC2*(rotation*np.exp(t/tauC2 + rotation/tauT1) - tauC2*np.exp(t/tauT1) + (-rotation + tauC2)*np.exp(rotation/tauC2 + t/tauT1))*np.exp(3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2)) + aT2*(decay + 3*tauC2)*(-3*tauT2**2*(decay - 3*tauC2)*(np.exp(rotation/tauT2) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 3/decay + 1/tauT1)) + tauT2*(decay**2*(np.exp(rotation/tauT2) - 1)*np.exp(t*(1/tauC2 + 3/decay)) - 3*decay*(rotation*np.exp(t*(1/tauC2 + 1/tauT2) + 3*rotation/decay) + tauC2*np.exp(t*(3/decay + 1/tauT2)) - tauC2*np.exp(t*(1/tauC2 + 3/decay)) - tauC2*np.exp(rotation/tauC2 + 3*t/decay + t/tauT2) + (-rotation + tauC2)*np.exp(t/tauC2 + 3*t/decay + rotation/tauT2)) + 9*tauC2*(-rotation*np.exp(t/tauC2 + rotation/tauT2) + tauC2*np.exp(t/tauT2) + (rotation - tauC2)*np.exp(rotation/tauC2 + t/tauT2))*np.exp(3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1)) + decay*tauC2*(-decay*(np.exp(rotation/tauC2) - 1)*np.exp(3*t/decay) + 3*rotation*np.exp(t/tauC2 + 3*rotation/decay) - 3*tauC2*np.exp(3*t/decay) - 3*(rotation - tauC2)*np.exp(rotation/tauC2 + 3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)))) + decay*tauC2*(aT1*(tauT2 - tauC2)*(3*tauT2 - decay)*(decay*(np.exp(rotation/tauC2) - 1)*np.exp(3*t/decay) - 3*rotation*np.exp(t/tauC2 + 3*rotation/decay) + 3*tauC2*np.exp(3*t/decay) + 3*(rotation - tauC2)*np.exp(rotation/tauC2 + 3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(3*tauT2**2*(decay - 3*tauC2)*(np.exp(rotation/tauT2) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 3/decay + 1/tauT1)) + tauT2*(-decay**2*(np.exp(rotation/tauT2) - 1)*np.exp(t*(1/tauC2 + 3/decay)) + 3*decay*(rotation*np.exp(t*(1/tauC2 + 1/tauT2) + 3*rotation/decay) + tauC2*np.exp(t*(3/decay + 1/tauT2)) - tauC2*np.exp(t*(1/tauC2 + 3/decay)) - tauC2*np.exp(rotation/tauC2 + 3*t/decay + t/tauT2) + (-rotation + tauC2)*np.exp(t/tauC2 + 3*t/decay + rotation/tauT2)) + 9*tauC2*(rotation*np.exp(t/tauC2 + rotation/tauT2) - tauC2*np.exp(t/tauT2) + (-rotation + tauC2)*np.exp(rotation/tauC2 + t/tauT2))*np.exp(3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1)) + decay*tauC2*(decay*(np.exp(rotation/tauC2) - 1)*np.exp(3*t/decay) - 3*rotation*np.exp(t/tauC2 + 3*rotation/decay) + 3*tauC2*np.exp(3*t/decay) + 3*(rotation - tauC2)*np.exp(rotation/tauC2 + 3*t/decay))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1))))) + aC4*tauC3*(-tauT1 + tauC2)*(-tauT2 + tauC2)*(decay - 3*tauC2)*(3*tauT1**2*(aT1*(-3*tauT2 + decay)*(-tauT2 + tauC3)*(decay - 3*tauC3)*(np.exp(rotation/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 3/decay + 1/tauT2)) + aT2*(3*tauT2**2*(decay - 3*tauC3)*(np.exp(rotation/tauT2) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 3/decay + 1/tauT1)) + tauT2*(-decay**2*(np.exp(rotation/tauT2) - 1)*np.exp(t*(1/tauC3 + 3/decay)) + 3*decay*(rotation*np.exp(t*(1/tauC3 + 1/tauT2) + 3*rotation/decay) + tauC3*np.exp(t*(3/decay + 1/tauT2)) - tauC3*np.exp(t*(1/tauC3 + 3/decay)) - tauC3*np.exp(rotation/tauC3 + 3*t/decay + t/tauT2) + (-rotation + tauC3)*np.exp(t/tauC3 + 3*t/decay + rotation/tauT2)) + 9*tauC3*(rotation*np.exp(t/tauC3 + rotation/tauT2) - tauC3*np.exp(t/tauT2) + (-rotation + tauC3)*np.exp(rotation/tauC3 + t/tauT2))*np.exp(3*t/decay))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)) + decay*tauC3*(decay*(np.exp(rotation/tauC3) - 1)*np.exp(3*t/decay) - 3*rotation*np.exp(t/tauC3 + 3*rotation/decay) + 3*tauC3*np.exp(3*t/decay) + 3*(rotation - tauC3)*np.exp(rotation/tauC3 + 3*t/decay))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)))) + tauT1*(aT1*(tauT2 - tauC3)*(3*tauT2 - decay)*(-decay**2*(np.exp(rotation/tauT1) - 1)*np.exp(t*(1/tauC3 + 3/decay)) + 3*decay*(rotation*np.exp(t*(1/tauC3 + 1/tauT1) + 3*rotation/decay) + tauC3*np.exp(t*(3/decay + 1/tauT1)) - tauC3*np.exp(t*(1/tauC3 + 3/decay)) - tauC3*np.exp(rotation/tauC3 + 3*t/decay + t/tauT1) + (-rotation + tauC3)*np.exp(t/tauC3 + 3*t/decay + rotation/tauT1)) + 9*tauC3*(rotation*np.exp(t/tauC3 + rotation/tauT1) - tauC3*np.exp(t/tauT1) + (-rotation + tauC3)*np.exp(rotation/tauC3 + t/tauT1))*np.exp(3*t/decay))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2)) + aT2*(decay + 3*tauC3)*(-3*tauT2**2*(decay - 3*tauC3)*(np.exp(rotation/tauT2) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 3/decay + 1/tauT1)) + tauT2*(decay**2*(np.exp(rotation/tauT2) - 1)*np.exp(t*(1/tauC3 + 3/decay)) - 3*decay*(rotation*np.exp(t*(1/tauC3 + 1/tauT2) + 3*rotation/decay) + tauC3*np.exp(t*(3/decay + 1/tauT2)) - tauC3*np.exp(t*(1/tauC3 + 3/decay)) - tauC3*np.exp(rotation/tauC3 + 3*t/decay + t/tauT2) + (-rotation + tauC3)*np.exp(t/tauC3 + 3*t/decay + rotation/tauT2)) + 9*tauC3*(-rotation*np.exp(t/tauC3 + rotation/tauT2) + tauC3*np.exp(t/tauT2) + (rotation - tauC3)*np.exp(rotation/tauC3 + t/tauT2))*np.exp(3*t/decay))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)) + decay*tauC3*(-decay*(np.exp(rotation/tauC3) - 1)*np.exp(3*t/decay) + 3*rotation*np.exp(t/tauC3 + 3*rotation/decay) - 3*tauC3*np.exp(3*t/decay) - 3*(rotation - tauC3)*np.exp(rotation/tauC3 + 3*t/decay))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)))) + decay*tauC3*(aT1*(tauT2 - tauC3)*(3*tauT2 - decay)*(decay*(np.exp(rotation/tauC3) - 1)*np.exp(3*t/decay) - 3*rotation*np.exp(t/tauC3 + 3*rotation/decay) + 3*tauC3*np.exp(3*t/decay) + 3*(rotation - tauC3)*np.exp(rotation/tauC3 + 3*t/decay))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(3*tauT2**2*(decay - 3*tauC3)*(np.exp(rotation/tauT2) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 3/decay + 1/tauT1)) + tauT2*(-decay**2*(np.exp(rotation/tauT2) - 1)*np.exp(t*(1/tauC3 + 3/decay)) + 3*decay*(rotation*np.exp(t*(1/tauC3 + 1/tauT2) + 3*rotation/decay) + tauC3*np.exp(t*(3/decay + 1/tauT2)) - tauC3*np.exp(t*(1/tauC3 + 3/decay)) - tauC3*np.exp(rotation/tauC3 + 3*t/decay + t/tauT2) + (-rotation + tauC3)*np.exp(t/tauC3 + 3*t/decay + rotation/tauT2)) + 9*tauC3*(rotation*np.exp(t/tauC3 + rotation/tauT2) - tauC3*np.exp(t/tauT2) + (-rotation + tauC3)*np.exp(rotation/tauC3 + t/tauT2))*np.exp(3*t/decay))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)) + decay*tauC3*(decay*(np.exp(rotation/tauC3) - 1)*np.exp(3*t/decay) - 3*rotation*np.exp(t/tauC3 + 3*rotation/decay) + 3*tauC3*np.exp(3*t/decay) + 3*(rotation - tauC3)*np.exp(rotation/tauC3 + 3*t/decay))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)))))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 3/decay + 1/tauT2 + 1/tauT1))/(rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(3*tauT1 - decay)*(-3*tauT2 + decay)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(decay - 3*tauC1)*(decay - 3*tauC2)*(decay - 3*tauC3))
    
    condition1 = (rotation >= t) & (t > 0)

    condition2 = (t > rotation)

    
    
    result = np.where(condition1, term1,
                    np.where(condition2, term2, 0
                                                ))

    return result * AACO2 * kPulseT

def AGTPPRF_Constant_Linear(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, kPulseT, aT1, tauT1, aT2, tauT2, AACO2, decay, p, rotation):

    # AGTP 11
    term1 = (aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*(-tauT1*np.exp(t/tauT1) + tauT1 + t*np.exp(t/tauT1))*np.exp(t/tauT2) + aT2*(-tauT2*np.exp(t/tauT2) + tauT2 + t*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) - aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(tauT1*(aT1*(tauT2 - tauC1)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC1 + 1/tauT2)) + aT2*(tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC1) - tauC1*(np.exp(t/tauC1) - 1)*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2)) + tauC1*(-aT1*(tauT2 - tauC1)*(np.exp(t/tauC1) - 1)*np.exp(t/tauT2) - aT2*tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC1) + aT2*tauC1*(np.exp(t/tauC1) - 1)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1))) + (tauT1 - tauC1)*(-tauT2 + tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(-tauT2 + tauC3)*(tauT1*(aT1*(tauT2 - tauC2)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC2 + 1/tauT2)) + aT2*(tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC2) - tauC2*(np.exp(t/tauC2) - 1)*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC1)) + tauC2*(-aT1*(tauT2 - tauC2)*(np.exp(t/tauC2) - 1)*np.exp(t/tauT2) - aT2*tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC2) + aT2*tauC2*(np.exp(t/tauC2) - 1)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(tauT1*(-aT1*(tauT2 - tauC3)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauT2)) + aT2*(-tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC3) + tauC3*(np.exp(t/tauC3) - 1)*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC2 + 1/tauC1)) + tauC3*(aT1*(tauT2 - tauC3)*(np.exp(t/tauC3) - 1)*np.exp(t/tauT2) + aT2*tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC3) - aT2*tauC3*(np.exp(t/tauC3) - 1)*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))/(rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3))

    term2 = (aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*tauT1*(2*tauT1*rotation*(np.exp(decay/tauT1) - 1)*np.exp(rotation/tauT1) - decay**2*(np.exp(rotation/tauT1) - 1) - 2*decay*rotation*np.exp(rotation/tauT1))*np.exp(t/tauT2) + aT2*tauT2*(2*tauT2*rotation*(np.exp(decay/tauT2) - 1)*np.exp(rotation/tauT2) - decay**2*(np.exp(rotation/tauT2) - 1) - 2*decay*rotation*np.exp(rotation/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(2*aT1*tauT1**2*rotation*(tauT2 - tauC1)*(np.exp(decay/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2) + rotation/tauT1) - aT1*tauT1*decay*(tauT2 - tauC1)*(decay*(np.exp(rotation/tauT1) - 1) + 2*rotation*np.exp(rotation/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - aT1*tauC1*(tauT2 - tauC1)*(-decay**2*(np.exp(rotation/tauC1) - 1) - 2*decay*rotation*np.exp(rotation/tauC1) + 2*rotation*tauC1*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)) + tauT1*aT2*(2*tauT2**2*rotation*(np.exp(decay/tauT2) - 1)*np.exp(t/tauC1 + rotation/tauT2) - tauT2*decay*(decay*(np.exp(rotation/tauT2) - 1) + 2*rotation*np.exp(rotation/tauT2))*np.exp(t/tauC1) + tauC1*(decay**2*(np.exp(rotation/tauC1) - 1) + 2*decay*rotation*np.exp(rotation/tauC1) - 2*rotation*tauC1*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1)) + aT2*tauC1*(-2*tauT2**2*rotation*(np.exp(decay/tauT2) - 1)*np.exp(t/tauC1 + rotation/tauT2) + tauT2*decay*(decay*(np.exp(rotation/tauT2) - 1) + 2*rotation*np.exp(rotation/tauT2))*np.exp(t/tauC1) + tauC1*(-decay**2*(np.exp(rotation/tauC1) - 1) - 2*decay*rotation*np.exp(rotation/tauC1) + 2*rotation*tauC1*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1))) + (tauT1 - tauC1)*(-tauT2 + tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(tauT2 - tauC3)*(2*aT1*tauT1**2*rotation*(tauT2 - tauC2)*(np.exp(decay/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2) + rotation/tauT1) - aT1*tauT1*decay*(tauT2 - tauC2)*(decay*(np.exp(rotation/tauT1) - 1) + 2*rotation*np.exp(rotation/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - aT1*tauC2*(tauT2 - tauC2)*(-decay**2*(np.exp(rotation/tauC2) - 1) - 2*decay*rotation*np.exp(rotation/tauC2) + 2*rotation*tauC2*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + tauT1*aT2*(2*tauT2**2*rotation*(np.exp(decay/tauT2) - 1)*np.exp(t/tauC2 + rotation/tauT2) - tauT2*decay*(decay*(np.exp(rotation/tauT2) - 1) + 2*rotation*np.exp(rotation/tauT2))*np.exp(t/tauC2) + tauC2*(decay**2*(np.exp(rotation/tauC2) - 1) + 2*decay*rotation*np.exp(rotation/tauC2) - 2*rotation*tauC2*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1)) + aT2*tauC2*(-2*tauT2**2*rotation*(np.exp(decay/tauT2) - 1)*np.exp(t/tauC2 + rotation/tauT2) + tauT2*decay*(decay*(np.exp(rotation/tauT2) - 1) + 2*rotation*np.exp(rotation/tauT2))*np.exp(t/tauC2) + tauC2*(-decay**2*(np.exp(rotation/tauC2) - 1) - 2*decay*rotation*np.exp(rotation/tauC2) + 2*rotation*tauC2*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(2*aT1*tauT1**2*rotation*(tauT2 - tauC3)*(np.exp(decay/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2) + rotation/tauT1) - aT1*tauT1*decay*(tauT2 - tauC3)*(decay*(np.exp(rotation/tauT1) - 1) + 2*rotation*np.exp(rotation/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - aT1*tauC3*(tauT2 - tauC3)*(-decay**2*(np.exp(rotation/tauC3) - 1) - 2*decay*rotation*np.exp(rotation/tauC3) + 2*rotation*tauC3*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + tauT1*aT2*(2*tauT2**2*rotation*(np.exp(decay/tauT2) - 1)*np.exp(t/tauC3 + rotation/tauT2) - tauT2*decay*(decay*(np.exp(rotation/tauT2) - 1) + 2*rotation*np.exp(rotation/tauT2))*np.exp(t/tauC3) + tauC3*(decay**2*(np.exp(rotation/tauC3) - 1) + 2*decay*rotation*np.exp(rotation/tauC3) - 2*rotation*tauC3*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)) - aT2*tauC3*(2*tauT2**2*rotation*(np.exp(decay/tauT2) - 1)*np.exp(t/tauC3 + rotation/tauT2) - tauT2*decay*(decay*(np.exp(rotation/tauT2) - 1) + 2*rotation*np.exp(rotation/tauT2))*np.exp(t/tauC3) + tauC3*(decay**2*(np.exp(rotation/tauC3) - 1) + 2*decay*rotation*np.exp(rotation/tauC3) - 2*rotation*tauC3*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))/(decay**2*rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3))

    term3 = (-aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*(2*tauT1**2*rotation*(np.exp(rotation/tauT1) - np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(decay**2*(np.exp(rotation/tauT1) - 1) + 2*decay*rotation*(np.exp(rotation/tauT1) - np.exp(t/tauT1)) + 2*rotation*(-rotation + t)*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - rotation*(decay + rotation - t)**2*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))) + aT2*(2*tauT2**2*rotation*(np.exp(rotation/tauT2) - np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*(decay**2*(np.exp(rotation/tauT2) - 1) + 2*decay*rotation*(np.exp(rotation/tauT2) - np.exp(t/tauT2)) + 2*rotation*(-rotation + t)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) - rotation*(decay + rotation - t)**2*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)))) + aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(-2*aT1*tauT1**2*rotation*(tauT2 - tauC1)*(np.exp(rotation/tauT1) - np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - aT1*tauT1*(tauT2 - tauC1)*(decay**2*(np.exp(rotation/tauT1) - 1) + 2*decay*rotation*(np.exp(rotation/tauT1) - np.exp(t/tauT1)) + 2*rotation*(-rotation + t)*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT1*tauC1*(tauT2 - tauC1)*(decay**2*(np.exp(rotation/tauC1) - 1) + 2*decay*rotation*(np.exp(rotation/tauC1) - np.exp(t/tauC1)) + 2*rotation*(tauC1*np.exp(rotation/tauC1) + (-rotation + t - tauC1)*np.exp(t/tauC1)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)) + tauT1*aT2*(-2*tauT2**2*rotation*(np.exp(rotation/tauT2) - np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*(-decay**2*(np.exp(rotation/tauT2) - 1) - 2*decay*rotation*(np.exp(rotation/tauT2) - np.exp(t/tauT2)) - 2*rotation*(-rotation + t)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauC1*(decay**2*(np.exp(rotation/tauC1) - 1) + 2*decay*rotation*(np.exp(rotation/tauC1) - np.exp(t/tauC1)) + 2*rotation*(tauC1*np.exp(rotation/tauC1) + (-rotation + t - tauC1)*np.exp(t/tauC1)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1))) + aT2*tauC1*(2*tauT2**2*rotation*(np.exp(rotation/tauT2) - np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*(decay**2*(np.exp(rotation/tauT2) - 1) + 2*decay*rotation*(np.exp(rotation/tauT2) - np.exp(t/tauT2)) + 2*rotation*(-rotation + t)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauC1*(-decay**2*(np.exp(rotation/tauC1) - 1) - 2*decay*rotation*(np.exp(rotation/tauC1) - np.exp(t/tauC1)) - 2*rotation*tauC1*np.exp(rotation/tauC1) + 2*rotation*(rotation - t + tauC1)*np.exp(t/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)))) + (tauT1 - tauC1)*(tauT2 - tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(-tauT2 + tauC3)*(-2*aT1*tauT1**2*rotation*(tauT2 - tauC2)*(np.exp(rotation/tauT1) - np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - aT1*tauT1*(tauT2 - tauC2)*(decay**2*(np.exp(rotation/tauT1) - 1) + 2*decay*rotation*(np.exp(rotation/tauT1) - np.exp(t/tauT1)) + 2*rotation*(-rotation + t)*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT1*tauC2*(tauT2 - tauC2)*(decay**2*(np.exp(rotation/tauC2) - 1) + 2*decay*rotation*(np.exp(rotation/tauC2) - np.exp(t/tauC2)) + 2*rotation*(tauC2*np.exp(rotation/tauC2) + (-rotation + t - tauC2)*np.exp(t/tauC2)))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + tauT1*aT2*(-2*tauT2**2*rotation*(np.exp(rotation/tauT2) - np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*(-decay**2*(np.exp(rotation/tauT2) - 1) - 2*decay*rotation*(np.exp(rotation/tauT2) - np.exp(t/tauT2)) - 2*rotation*(-rotation + t)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauC2*(decay**2*(np.exp(rotation/tauC2) - 1) + 2*decay*rotation*(np.exp(rotation/tauC2) - np.exp(t/tauC2)) + 2*rotation*(tauC2*np.exp(rotation/tauC2) + (-rotation + t - tauC2)*np.exp(t/tauC2)))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1))) + aT2*tauC2*(2*tauT2**2*rotation*(np.exp(rotation/tauT2) - np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*(decay**2*(np.exp(rotation/tauT2) - 1) + 2*decay*rotation*(np.exp(rotation/tauT2) - np.exp(t/tauT2)) + 2*rotation*(-rotation + t)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauC2*(-decay**2*(np.exp(rotation/tauC2) - 1) - 2*decay*rotation*(np.exp(rotation/tauC2) - np.exp(t/tauC2)) - 2*rotation*tauC2*np.exp(rotation/tauC2) + 2*rotation*(rotation - t + tauC2)*np.exp(t/tauC2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)))) + aC4*tauC3*(tauT1 - tauC2)*(-tauT2 + tauC2)*(-2*aT1*tauT1**2*rotation*(tauT2 - tauC3)*(np.exp(rotation/tauT1) - np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - aT1*tauT1*(tauT2 - tauC3)*(decay**2*(np.exp(rotation/tauT1) - 1) + 2*decay*rotation*(np.exp(rotation/tauT1) - np.exp(t/tauT1)) + 2*rotation*(-rotation + t)*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT1*tauC3*(tauT2 - tauC3)*(decay**2*(np.exp(rotation/tauC3) - 1) + 2*decay*rotation*(np.exp(rotation/tauC3) - np.exp(t/tauC3)) + 2*rotation*(tauC3*np.exp(rotation/tauC3) + (-rotation + t - tauC3)*np.exp(t/tauC3)))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + tauT1*aT2*(-2*tauT2**2*rotation*(np.exp(rotation/tauT2) - np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*(-decay**2*(np.exp(rotation/tauT2) - 1) - 2*decay*rotation*(np.exp(rotation/tauT2) - np.exp(t/tauT2)) - 2*rotation*(-rotation + t)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauC3*(decay**2*(np.exp(rotation/tauC3) - 1) + 2*decay*rotation*(np.exp(rotation/tauC3) - np.exp(t/tauC3)) + 2*rotation*(tauC3*np.exp(rotation/tauC3) + (-rotation + t - tauC3)*np.exp(t/tauC3)))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))) + aT2*tauC3*(2*tauT2**2*rotation*(np.exp(rotation/tauT2) - np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*(decay**2*(np.exp(rotation/tauT2) - 1) + 2*decay*rotation*(np.exp(rotation/tauT2) - np.exp(t/tauT2)) + 2*rotation*(-rotation + t)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauC3*(-decay**2*(np.exp(rotation/tauC3) - 1) - 2*decay*rotation*(np.exp(rotation/tauC3) - np.exp(t/tauC3)) - 2*rotation*tauC3*np.exp(rotation/tauC3) + 2*rotation*(rotation - t + tauC3)*np.exp(t/tauC3))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))))))*np.exp(t*(-1/tauC3 - 1/tauC2 - 1/tauC1 - 1/tauT2 - 1/tauT1))/(decay**2*rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3))

    condition1 = (rotation >= t) & (t > 0) & (decay + rotation >= t)

    condition2 = (rotation < t) & (decay + rotation < t)

    condition3 = (rotation < t) & (decay + rotation >= t)

    
    
    result = np.where(condition1, term1,
                    np.where(condition2, term2,
                            np.where(condition3, term3, 0
                                                )))

    return result * AACO2 * kPulseT

def AGTPPRF_Constant_Constant(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, kPulseT, aT1, tauT1, aT2, tauT2, AACO2, decay, p, rotation):

    # AGTP 12
    term1 = (aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*(-tauT1*np.exp(t/tauT1) + tauT1 + t*np.exp(t/tauT1))*np.exp(t/tauT2) + aT2*(-tauT2*np.exp(t/tauT2) + tauT2 + t*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) - aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(tauT1*(aT1*(tauT2 - tauC1)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC1 + 1/tauT2)) + aT2*(tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC1) - tauC1*(np.exp(t/tauC1) - 1)*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2)) + tauC1*(-aT1*(tauT2 - tauC1)*(np.exp(t/tauC1) - 1)*np.exp(t/tauT2) - aT2*tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC1) + aT2*tauC1*(np.exp(t/tauC1) - 1)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1))) + (tauT1 - tauC1)*(-tauT2 + tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(-tauT2 + tauC3)*(tauT1*(aT1*(tauT2 - tauC2)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC2 + 1/tauT2)) + aT2*(tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC2) - tauC2*(np.exp(t/tauC2) - 1)*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC1)) + tauC2*(-aT1*(tauT2 - tauC2)*(np.exp(t/tauC2) - 1)*np.exp(t/tauT2) - aT2*tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC2) + aT2*tauC2*(np.exp(t/tauC2) - 1)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(tauT1*(-aT1*(tauT2 - tauC3)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauT2)) + aT2*(-tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC3) + tauC3*(np.exp(t/tauC3) - 1)*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC2 + 1/tauC1)) + tauC3*(aT1*(tauT2 - tauC3)*(np.exp(t/tauC3) - 1)*np.exp(t/tauT2) + aT2*tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC3) - aT2*tauC3*(np.exp(t/tauC3) - 1)*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))/(rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3))

    term2 = (aC1*(-tauT1 + tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*tauT1*(decay*(np.exp(rotation/tauT1) - 1) - rotation*(np.exp(decay/tauT1) - 1)*np.exp(rotation/tauT1))*np.exp(t/tauT2) + aT2*tauT2*(decay*(np.exp(rotation/tauT2) - 1) - rotation*(np.exp(decay/tauT2) - 1)*np.exp(rotation/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(-aT1*tauT1*(tauT2 - tauC1)*(decay*(np.exp(rotation/tauT1) - 1) - rotation*(np.exp(decay/tauT1) - 1)*np.exp(rotation/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - aT1*tauC1*(tauT2 - tauC1)*(-decay*np.exp(rotation/tauC1) + decay + rotation*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)) + tauT1*aT2*(-tauT2*(decay*(np.exp(rotation/tauT2) - 1) - rotation*(np.exp(decay/tauT2) - 1)*np.exp(rotation/tauT2))*np.exp(t/tauC1) + tauC1*(decay*(np.exp(rotation/tauC1) - 1) - rotation*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1)) + aT2*tauC1*(tauT2*(decay*(np.exp(rotation/tauT2) - 1) - rotation*(np.exp(decay/tauT2) - 1)*np.exp(rotation/tauT2))*np.exp(t/tauC1) - tauC1*(decay*(np.exp(rotation/tauC1) - 1) - rotation*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1))) + (tauT1 - tauC1)*(tauT2 - tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(-tauT2 + tauC3)*(-aT1*tauT1*(tauT2 - tauC2)*(decay*(np.exp(rotation/tauT1) - 1) - rotation*(np.exp(decay/tauT1) - 1)*np.exp(rotation/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - aT1*tauC2*(tauT2 - tauC2)*(-decay*np.exp(rotation/tauC2) + decay + rotation*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + tauT1*aT2*(-tauT2*(decay*(np.exp(rotation/tauT2) - 1) - rotation*(np.exp(decay/tauT2) - 1)*np.exp(rotation/tauT2))*np.exp(t/tauC2) + tauC2*(decay*(np.exp(rotation/tauC2) - 1) - rotation*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1)) + aT2*tauC2*(tauT2*(decay*(np.exp(rotation/tauT2) - 1) - rotation*(np.exp(decay/tauT2) - 1)*np.exp(rotation/tauT2))*np.exp(t/tauC2) - tauC2*(decay*(np.exp(rotation/tauC2) - 1) - rotation*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(aT1*tauT1*(tauT2 - tauC3)*(decay*(np.exp(rotation/tauT1) - 1) - rotation*(np.exp(decay/tauT1) - 1)*np.exp(rotation/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT1*tauC3*(tauT2 - tauC3)*(-decay*np.exp(rotation/tauC3) + decay + rotation*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + tauT1*aT2*(tauT2*(decay*(np.exp(rotation/tauT2) - 1) - rotation*(np.exp(decay/tauT2) - 1)*np.exp(rotation/tauT2))*np.exp(t/tauC3) - tauC3*(decay*(np.exp(rotation/tauC3) - 1) - rotation*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)) - aT2*tauC3*(tauT2*(decay*(np.exp(rotation/tauT2) - 1) - rotation*(np.exp(decay/tauT2) - 1)*np.exp(rotation/tauT2))*np.exp(t/tauC3) - tauC3*(decay*(np.exp(rotation/tauC3) - 1) - rotation*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))/(decay*rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3))

    term3 = (-aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*(tauT1*decay*(np.exp(rotation/tauT1) - 1) + tauT1*rotation*(np.exp(rotation/tauT1) - np.exp(t/tauT1)) - rotation*(decay + rotation - t)*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT2*(tauT2*decay*(np.exp(rotation/tauT2) - 1) + tauT2*rotation*(np.exp(rotation/tauT2) - np.exp(t/tauT2)) - rotation*(decay + rotation - t)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1))) + aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(-aT1*tauT1*(tauT2 - tauC1)*(decay*(np.exp(rotation/tauT1) - 1) + rotation*(np.exp(rotation/tauT1) - np.exp(t/tauT1)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT1*tauC1*(tauT2 - tauC1)*(decay*(np.exp(rotation/tauC1) - 1) + rotation*(np.exp(rotation/tauC1) - np.exp(t/tauC1)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)) + tauT1*aT2*(tauT2*(-decay*np.exp(rotation/tauT2) + decay + rotation*(-np.exp(rotation/tauT2) + np.exp(t/tauT2)))*np.exp(t/tauC1) + tauC1*(decay*(np.exp(rotation/tauC1) - 1) + rotation*(np.exp(rotation/tauC1) - np.exp(t/tauC1)))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1)) + aT2*tauC1*(tauT2*(decay*(np.exp(rotation/tauT2) - 1) + rotation*(np.exp(rotation/tauT2) - np.exp(t/tauT2)))*np.exp(t/tauC1) + tauC1*(-decay*np.exp(rotation/tauC1) + decay + rotation*(-np.exp(rotation/tauC1) + np.exp(t/tauC1)))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1))) + (tauT1 - tauC1)*(tauT2 - tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(-tauT2 + tauC3)*(-aT1*tauT1*(tauT2 - tauC2)*(decay*(np.exp(rotation/tauT1) - 1) + rotation*(np.exp(rotation/tauT1) - np.exp(t/tauT1)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT1*tauC2*(tauT2 - tauC2)*(decay*(np.exp(rotation/tauC2) - 1) + rotation*(np.exp(rotation/tauC2) - np.exp(t/tauC2)))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + tauT1*aT2*(tauT2*(-decay*np.exp(rotation/tauT2) + decay + rotation*(-np.exp(rotation/tauT2) + np.exp(t/tauT2)))*np.exp(t/tauC2) + tauC2*(decay*(np.exp(rotation/tauC2) - 1) + rotation*(np.exp(rotation/tauC2) - np.exp(t/tauC2)))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1)) + aT2*tauC2*(tauT2*(decay*(np.exp(rotation/tauT2) - 1) + rotation*(np.exp(rotation/tauT2) - np.exp(t/tauT2)))*np.exp(t/tauC2) + tauC2*(-decay*np.exp(rotation/tauC2) + decay + rotation*(-np.exp(rotation/tauC2) + np.exp(t/tauC2)))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(aT1*tauT1*(tauT2 - tauC3)*(decay*(np.exp(rotation/tauT1) - 1) + rotation*(np.exp(rotation/tauT1) - np.exp(t/tauT1)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT1*tauC3*(tauT2 - tauC3)*(-decay*np.exp(rotation/tauC3) + decay + rotation*(-np.exp(rotation/tauC3) + np.exp(t/tauC3)))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + tauT1*aT2*(tauT2*(decay*(np.exp(rotation/tauT2) - 1) + rotation*(np.exp(rotation/tauT2) - np.exp(t/tauT2)))*np.exp(t/tauC3) + tauC3*(-decay*np.exp(rotation/tauC3) + decay + rotation*(-np.exp(rotation/tauC3) + np.exp(t/tauC3)))*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)) - aT2*tauC3*(tauT2*(decay*(np.exp(rotation/tauT2) - 1) + rotation*(np.exp(rotation/tauT2) - np.exp(t/tauT2)))*np.exp(t/tauC3) + tauC3*(-decay*np.exp(rotation/tauC3) + decay + rotation*(-np.exp(rotation/tauC3) + np.exp(t/tauC3)))*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))/(decay*rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3))

    condition1 = (rotation >= t) & (t > 0) & (decay + rotation >= t)

    condition2 = (rotation < t) & (decay + rotation < t)

    condition3 = (rotation < t) & (decay + rotation >= t)

    
    result = np.where(condition1, term1,
                    np.where(condition2, term2,
                            np.where(condition3, term3, 0
                                                )))

    return result * AACO2 * kPulseT

def AGTPPRF_Constant_Impulse(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, kPulseT, aT1, tauT1, aT2, tauT2, AACO2, decay, p, rotation):

    term1 = (-aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*(tauT1*(np.exp(rotation/tauT1) - 1) - rotation*np.exp(t/tauT1))*np.exp(t/tauT2) + aT2*(tauT2*(np.exp(rotation/tauT2) - 1) - rotation*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(tauT1*(-aT1*(tauT2 - tauC1)*(np.exp(rotation/tauT1) - 1)*np.exp(t*(1/tauC1 + 1/tauT2)) + aT2*(-tauT2*(np.exp(rotation/tauT2) - 1)*np.exp(t/tauC1) + tauC1*(np.exp(rotation/tauC1) - 1)*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2)) + tauC1*(aT1*(tauT2 - tauC1)*(np.exp(rotation/tauC1) - 1)*np.exp(t/tauT2) + aT2*tauT2*(np.exp(rotation/tauT2) - 1)*np.exp(t/tauC1) - aT2*tauC1*(np.exp(rotation/tauC1) - 1)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1))) + (tauT1 - tauC1)*(tauT2 - tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(-tauT2 + tauC3)*(tauT1*(-aT1*(tauT2 - tauC2)*(np.exp(rotation/tauT1) - 1)*np.exp(t*(1/tauC2 + 1/tauT2)) + aT2*(-tauT2*(np.exp(rotation/tauT2) - 1)*np.exp(t/tauC2) + tauC2*(np.exp(rotation/tauC2) - 1)*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC1)) + tauC2*(aT1*(tauT2 - tauC2)*(np.exp(rotation/tauC2) - 1)*np.exp(t/tauT2) + aT2*tauT2*(np.exp(rotation/tauT2) - 1)*np.exp(t/tauC2) - aT2*tauC2*(np.exp(rotation/tauC2) - 1)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(tauT1*(aT1*(tauT2 - tauC3)*(np.exp(rotation/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauT2)) + aT2*(tauT2*(np.exp(rotation/tauT2) - 1)*np.exp(t/tauC3) - tauC3*(np.exp(rotation/tauC3) - 1)*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC2 + 1/tauC1)) + tauC3*(-aT1*(tauT2 - tauC3)*(np.exp(rotation/tauC3) - 1)*np.exp(t/tauT2) - aT2*tauT2*(np.exp(rotation/tauT2) - 1)*np.exp(t/tauC3) + aT2*tauC3*(np.exp(rotation/tauC3) - 1)*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))/(rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3))

    term2 = (aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*(-tauT1*np.exp(t/tauT1) + tauT1 + t*np.exp(t/tauT1))*np.exp(t/tauT2) + aT2*(-tauT2*np.exp(t/tauT2) + tauT2 + t*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) - aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(tauT1*(aT1*(tauT2 - tauC1)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC1 + 1/tauT2)) + aT2*(tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC1) - tauC1*(np.exp(t/tauC1) - 1)*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2)) + tauC1*(-aT1*(tauT2 - tauC1)*(np.exp(t/tauC1) - 1)*np.exp(t/tauT2) - aT2*tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC1) + aT2*tauC1*(np.exp(t/tauC1) - 1)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1))) + (tauT1 - tauC1)*(-tauT2 + tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(-tauT2 + tauC3)*(tauT1*(aT1*(tauT2 - tauC2)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC2 + 1/tauT2)) + aT2*(tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC2) - tauC2*(np.exp(t/tauC2) - 1)*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC1)) + tauC2*(-aT1*(tauT2 - tauC2)*(np.exp(t/tauC2) - 1)*np.exp(t/tauT2) - aT2*tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC2) + aT2*tauC2*(np.exp(t/tauC2) - 1)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(tauT1*(-aT1*(tauT2 - tauC3)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauT2)) + aT2*(-tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC3) + tauC3*(np.exp(t/tauC3) - 1)*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC2 + 1/tauC1)) + tauC3*(aT1*(tauT2 - tauC3)*(np.exp(t/tauC3) - 1)*np.exp(t/tauT2) + aT2*tauT2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC3) - aT2*tauC3*(np.exp(t/tauC3) - 1)*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))/(rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3))

    commonterm = AACO2*kPulseT*(aC1*(-aT1*np.exp((decay + rotation - t)/tauT1) + aT1 - aT2*np.exp((decay + rotation - t)/tauT2) + aT2) + aC2*tauC1*(aT1*(np.exp((decay + rotation - t)/tauT1) - np.exp((decay + rotation - t)/tauC1))/(tauT1 - tauC1) + aT2*(np.exp((decay + rotation - t)/tauT2) - np.exp((decay + rotation - t)/tauC1))/(tauT2 - tauC1)) + aC3*aT1*tauC2*np.exp((decay + rotation - t)/tauT1)/(tauT1 - tauC2) + aC3*aT1*tauC2*np.exp((decay + rotation - t)/tauC2)/(-tauT1 + tauC2) + aC3*aT2*tauC2*np.exp((decay + rotation - t)/tauT2)/(tauT2 - tauC2) + aC3*aT2*tauC2*np.exp((decay + rotation - t)/tauC2)/(-tauT2 + tauC2) + aC4*aT1*tauC3*np.exp((decay + rotation - t)/tauT1)/(tauT1 - tauC3) + aC4*aT1*tauC3*np.exp((decay + rotation - t)/tauC3)/(-tauT1 + tauC3) + aC4*aT2*tauC3*np.exp((decay + rotation - t)/tauT2)/(tauT2 - tauC3) + aC4*aT2*tauC3*np.exp((decay + rotation - t)/tauC3)/(-tauT2 + tauC3))*UnitStep(decay + rotation, -decay - rotation + t)

    condition1 = (t>rotation)

    condition2 = (t>0) & (rotation>=t)

    result = AACO2 * kPulseT * np.where(condition1, term1,
                        np.where(condition2, term2, 0
                                )) 

    result += commonterm

    return result

def AGTPPRF_Trian_Linear(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, kPulseT, aT1, tauT1, aT2, tauT2, AACO2, decay, p, rotation):

    # AGTP 14
    condition1 = (rotation >= t) & (t > 0) & (decay + rotation >= t) & ((p >= rotation) | (p >= t))
    condition2 = (rotation >= t) & (p < rotation) & (p < t) & (decay + rotation >= t)
    condition3 = (p >= rotation) & (rotation < t) & (decay + rotation < t)
    condition4 = (p >= rotation) & (rotation < t) & (decay + rotation >= t)
    condition5 = (p < rotation) & (p < t) & (rotation < t) & (decay + rotation < t)
    condition6 = (p < rotation) & (p < t) & (rotation < t) & (decay + rotation >= t)

    term1 = (aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*(2*tauT1**2*(np.exp(t/tauT1) - 1) - 2*tauT1*t*np.exp(t/tauT1) + t**2*np.exp(t/tauT1))*np.exp(t/tauT2) + aT2*(2*tauT2**2*(np.exp(t/tauT2) - 1) - 2*tauT2*t*np.exp(t/tauT2) + t**2*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + 2*aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(aT1*tauT1**2*(tauT2 - tauC1)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*t*(tauT2 - tauC1)*np.exp(t*(1/tauC1 + 1/tauT2)) + aT2*(tauT2**2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC1) - tauT2*t*np.exp(t*(1/tauC1 + 1/tauT2)) + tauC1*(tauC1 + (t - tauC1)*np.exp(t/tauC1))*np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1)) + tauC1*(aT1*(tauT2 - tauC1)*(tauC1 + (t - tauC1)*np.exp(t/tauC1))*np.exp(t/tauT2) + aT2*(-tauT2**2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC1) + tauT2*t*np.exp(t*(1/tauC1 + 1/tauT2)) - tauC1*(tauC1 + (t - tauC1)*np.exp(t/tauC1))*np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1))) + 2*(tauT1 - tauC1)*(-tauT2 + tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(tauT2 - tauC3)*(aT1*tauT1**2*(tauT2 - tauC2)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*t*(tauT2 - tauC2)*np.exp(t*(1/tauC2 + 1/tauT2)) + aT2*(tauT2**2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC2) - tauT2*t*np.exp(t*(1/tauC2 + 1/tauT2)) + tauC2*(tauC2 + (t - tauC2)*np.exp(t/tauC2))*np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1)) + tauC2*(aT1*(tauT2 - tauC2)*(tauC2 + (t - tauC2)*np.exp(t/tauC2))*np.exp(t/tauT2) + aT2*(-tauT2**2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC2) + tauT2*t*np.exp(t*(1/tauC2 + 1/tauT2)) - tauC2*(tauC2 + (t - tauC2)*np.exp(t/tauC2))*np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(aT1*tauT1**2*(tauT2 - tauC3)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*t*(tauT2 - tauC3)*np.exp(t*(1/tauC3 + 1/tauT2)) + aT2*(tauT2**2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC3) - tauT2*t*np.exp(t*(1/tauC3 + 1/tauT2)) + tauC3*(tauC3 + (t - tauC3)*np.exp(t/tauC3))*np.exp(t/tauT2)))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)) + tauC3*(aT1*(tauT2 - tauC3)*(tauC3 + (t - tauC3)*np.exp(t/tauC3))*np.exp(t/tauT2) + aT2*(-tauT2**2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC3) + tauT2*t*np.exp(t*(1/tauC3 + 1/tauT2)) - tauC3*(tauC3 + (t - tauC3)*np.exp(t/tauC3))*np.exp(t/tauT2)))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))/(p*rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3))

    term2 = (-aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(-aT1*(2*tauT1**2*(p*(np.exp(t/tauT1) - 1) - rotation*np.exp(p/tauT1) + rotation) - 2*tauT1*p*(-rotation + t)*np.exp(t/tauT1) + p*(p*rotation + t*(-2*rotation + t))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - aT2*(2*tauT2**2*(p*(np.exp(t/tauT2) - 1) - rotation*np.exp(p/tauT2) + rotation) - 2*tauT2*p*(-rotation + t)*np.exp(t/tauT2) + p*(p*rotation + t*(-2*rotation + t))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1))) + 2*aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(aT1*tauT1**2*(tauT2 - tauC1)*(p*(np.exp(t/tauT1) - 1) - rotation*np.exp(p/tauT1) + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*p*(tauT2 - tauC1)*(-rotation + t)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(p*(np.exp(t/tauT2) - 1) - rotation*np.exp(p/tauT2) + rotation)*np.exp(t/tauC1) - tauT2*p*(-rotation + t)*np.exp(t*(1/tauC1 + 1/tauT2)) + tauC1*(p*(-rotation + t - tauC1)*np.exp(t/tauC1) + rotation*tauC1*np.exp(p/tauC1) + tauC1*(p - rotation))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1))) + tauC1*(aT1*(tauT2 - tauC1)*(p*(-rotation + t - tauC1)*np.exp(t/tauC1) + rotation*tauC1*np.exp(p/tauC1) + tauC1*(p - rotation))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(-p*np.exp(t/tauT2) + p + rotation*(np.exp(p/tauT2) - 1))*np.exp(t/tauC1) + tauT2*p*(-rotation + t)*np.exp(t*(1/tauC1 + 1/tauT2)) + tauC1*(p*(rotation - t + tauC1)*np.exp(t/tauC1) - rotation*tauC1*np.exp(p/tauC1) + tauC1*(-p + rotation))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1)))) + 2*(tauT1 - tauC1)*(-tauT2 + tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(tauT2 - tauC3)*(aT1*tauT1**2*(tauT2 - tauC2)*(p*(np.exp(t/tauT1) - 1) - rotation*np.exp(p/tauT1) + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*p*(tauT2 - tauC2)*(-rotation + t)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(p*(np.exp(t/tauT2) - 1) - rotation*np.exp(p/tauT2) + rotation)*np.exp(t/tauC2) - tauT2*p*(-rotation + t)*np.exp(t*(1/tauC2 + 1/tauT2)) + tauC2*(p*(-rotation + t - tauC2)*np.exp(t/tauC2) + rotation*tauC2*np.exp(p/tauC2) + tauC2*(p - rotation))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1))) + tauC2*(aT1*(tauT2 - tauC2)*(p*(-rotation + t - tauC2)*np.exp(t/tauC2) + rotation*tauC2*np.exp(p/tauC2) + tauC2*(p - rotation))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(-p*np.exp(t/tauT2) + p + rotation*(np.exp(p/tauT2) - 1))*np.exp(t/tauC2) + tauT2*p*(-rotation + t)*np.exp(t*(1/tauC2 + 1/tauT2)) + tauC2*(p*(rotation - t + tauC2)*np.exp(t/tauC2) - rotation*tauC2*np.exp(p/tauC2) + tauC2*(-p + rotation))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1)))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(aT1*tauT1**2*(tauT2 - tauC3)*(p*(np.exp(t/tauT1) - 1) - rotation*np.exp(p/tauT1) + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*p*(tauT2 - tauC3)*(-rotation + t)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(p*(np.exp(t/tauT2) - 1) - rotation*np.exp(p/tauT2) + rotation)*np.exp(t/tauC3) - tauT2*p*(-rotation + t)*np.exp(t*(1/tauC3 + 1/tauT2)) + tauC3*(p*(-rotation + t - tauC3)*np.exp(t/tauC3) + rotation*tauC3*np.exp(p/tauC3) + tauC3*(p - rotation))*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1))) + tauC3*(aT1*(tauT2 - tauC3)*(p*(-rotation + t - tauC3)*np.exp(t/tauC3) + rotation*tauC3*np.exp(p/tauC3) + tauC3*(p - rotation))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(-p*np.exp(t/tauT2) + p + rotation*(np.exp(p/tauT2) - 1))*np.exp(t/tauC3) + tauT2*p*(-rotation + t)*np.exp(t*(1/tauC3 + 1/tauT2)) + tauC3*(p*(rotation - t + tauC3)*np.exp(t/tauC3) - rotation*tauC3*np.exp(p/tauC3) + tauC3*(-p + rotation))*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1))))))*np.exp(t*(-1/tauC3 - 1/tauC2 - 1/tauC1 - 1/tauT2 - 1/tauT1))/(p*rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(p - rotation))

    term3 = (aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*(2*tauT1**2*(decay**2*(np.exp(rotation/tauT1) - 1) + p*rotation*(np.exp(decay/tauT1) - 1)*np.exp(rotation/tauT1)) - 2*tauT1*decay*rotation*(decay + p)*np.exp(rotation/tauT1) - decay**2*rotation*(p - rotation)*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT2*(2*tauT2**2*(decay**2*(np.exp(rotation/tauT2) - 1) + p*rotation*(np.exp(decay/tauT2) - 1)*np.exp(rotation/tauT2)) - 2*tauT2*decay*rotation*(decay + p)*np.exp(rotation/tauT2) - decay**2*rotation*(p - rotation)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1))) - 2*aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*tauT1**2*(tauT2 - tauC1)*(decay**2*(np.exp(rotation/tauT1) - 1) + p*rotation*(np.exp(decay/tauT1) - 1)*np.exp(rotation/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*decay*rotation*(tauT2 - tauC1)*(decay + p)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2) + rotation/tauT1) + aT2*(tauT2**2*(decay**2*(np.exp(rotation/tauT2) - 1) + p*rotation*(np.exp(decay/tauT2) - 1)*np.exp(rotation/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) - tauT2*decay*rotation*(decay + p)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1) + rotation/tauT2) + tauC1*(decay**2*(tauC1 + (rotation - tauC1)*np.exp(rotation/tauC1)) + decay*p*rotation*np.exp(rotation/tauC1) - p*rotation*tauC1*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)))) + tauC1*(aT1*(tauT2 - tauC1)*(decay**2*(tauC1 + (rotation - tauC1)*np.exp(rotation/tauC1)) + decay*p*rotation*np.exp(rotation/tauC1) - p*rotation*tauC1*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)) + aT2*(-tauT2**2*(decay**2*(np.exp(rotation/tauT2) - 1) + p*rotation*(np.exp(decay/tauT2) - 1)*np.exp(rotation/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*decay*rotation*(decay + p)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1) + rotation/tauT2) - tauC1*(decay**2*(tauC1 + (rotation - tauC1)*np.exp(rotation/tauC1)) + decay*p*rotation*np.exp(rotation/tauC1) - p*rotation*tauC1*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1))))) - 2*(tauT1 - tauC1)*(tauT2 - tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(tauT2 - tauC3)*(aT1*tauT1**2*(tauT2 - tauC2)*(decay**2*(np.exp(rotation/tauT1) - 1) + p*rotation*(np.exp(decay/tauT1) - 1)*np.exp(rotation/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*decay*rotation*(tauT2 - tauC2)*(decay + p)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2) + rotation/tauT1) + aT2*(tauT2**2*(decay**2*(np.exp(rotation/tauT2) - 1) + p*rotation*(np.exp(decay/tauT2) - 1)*np.exp(rotation/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) - tauT2*decay*rotation*(decay + p)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1) + rotation/tauT2) + tauC2*(decay**2*(tauC2 + (rotation - tauC2)*np.exp(rotation/tauC2)) + decay*p*rotation*np.exp(rotation/tauC2) - p*rotation*tauC2*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)))) + tauC2*(aT1*(tauT2 - tauC2)*(decay**2*(tauC2 + (rotation - tauC2)*np.exp(rotation/tauC2)) + decay*p*rotation*np.exp(rotation/tauC2) - p*rotation*tauC2*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(-tauT2**2*(decay**2*(np.exp(rotation/tauT2) - 1) + p*rotation*(np.exp(decay/tauT2) - 1)*np.exp(rotation/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*decay*rotation*(decay + p)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1) + rotation/tauT2) - tauC2*(decay**2*(tauC2 + (rotation - tauC2)*np.exp(rotation/tauC2)) + decay*p*rotation*np.exp(rotation/tauC2) - p*rotation*tauC2*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1))))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(aT1*tauT1**2*(tauT2 - tauC3)*(decay**2*(np.exp(rotation/tauT1) - 1) + p*rotation*(np.exp(decay/tauT1) - 1)*np.exp(rotation/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*decay*rotation*(tauT2 - tauC3)*(decay + p)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2) + rotation/tauT1) + aT2*(tauT2**2*(decay**2*(np.exp(rotation/tauT2) - 1) + p*rotation*(np.exp(decay/tauT2) - 1)*np.exp(rotation/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) - tauT2*decay*rotation*(decay + p)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1) + rotation/tauT2) + tauC3*(decay**2*(tauC3 + (rotation - tauC3)*np.exp(rotation/tauC3)) + decay*p*rotation*np.exp(rotation/tauC3) - p*rotation*tauC3*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)))) + tauC3*(aT1*(tauT2 - tauC3)*(decay**2*(tauC3 + (rotation - tauC3)*np.exp(rotation/tauC3)) + decay*p*rotation*np.exp(rotation/tauC3) - p*rotation*tauC3*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(-tauT2**2*(decay**2*(np.exp(rotation/tauT2) - 1) + p*rotation*(np.exp(decay/tauT2) - 1)*np.exp(rotation/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*decay*rotation*(decay + p)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1) + rotation/tauT2) - tauC3*(decay**2*(tauC3 + (rotation - tauC3)*np.exp(rotation/tauC3)) + decay*p*rotation*np.exp(rotation/tauC3) - p*rotation*tauC3*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)))))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))/(decay**2*p*rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3))

    term4 = (aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*(2*tauT1**2*(decay**2*(np.exp(rotation/tauT1) - 1) + p*rotation*(-np.exp(rotation/tauT1) + np.exp(t/tauT1)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - 2*tauT1*rotation*(decay**2*np.exp(rotation/tauT1) + decay*p*(np.exp(rotation/tauT1) - np.exp(t/tauT1)) + p*(-rotation + t)*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + rotation*(decay**2*rotation + 2*decay*p*(rotation - t) + p*(rotation - t)**2)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))) + aT2*(2*tauT2**2*(decay**2*(np.exp(rotation/tauT2) - 1) + p*rotation*(-np.exp(rotation/tauT2) + np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) - 2*tauT2*rotation*(decay**2*np.exp(rotation/tauT2) + decay*p*(np.exp(rotation/tauT2) - np.exp(t/tauT2)) + p*(-rotation + t)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + rotation*(decay**2*rotation + 2*decay*p*(rotation - t) + p*(rotation - t)**2)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)))) - 2*aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*tauT1**2*(tauT2 - tauC1)*(decay**2*(np.exp(rotation/tauT1) - 1) + p*rotation*(-np.exp(rotation/tauT1) + np.exp(t/tauT1)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(aT1*rotation*(tauT2 - tauC1)*(-decay**2*np.exp(rotation/tauT1) - decay*p*(np.exp(rotation/tauT1) - np.exp(t/tauT1)) - p*(-rotation + t)*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT2*(tauT2**2*(decay**2*(np.exp(rotation/tauT2) - 1) + p*rotation*(-np.exp(rotation/tauT2) + np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*rotation*(-decay**2*np.exp(rotation/tauT2) - decay*p*(np.exp(rotation/tauT2) - np.exp(t/tauT2)) - p*(-rotation + t)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauC1*(decay**2*(tauC1 + (rotation - tauC1)*np.exp(rotation/tauC1)) + decay*p*rotation*(np.exp(rotation/tauC1) - np.exp(t/tauC1)) + p*rotation*(tauC1*np.exp(rotation/tauC1) + (-rotation + t - tauC1)*np.exp(t/tauC1)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)))) + tauC1*(aT1*(tauT2 - tauC1)*(decay**2*(tauC1 + (rotation - tauC1)*np.exp(rotation/tauC1)) + decay*p*rotation*(np.exp(rotation/tauC1) - np.exp(t/tauC1)) + p*rotation*(tauC1*np.exp(rotation/tauC1) + (-rotation + t - tauC1)*np.exp(t/tauC1)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(-decay**2*(np.exp(rotation/tauT2) - 1) + p*rotation*(np.exp(rotation/tauT2) - np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*rotation*(decay**2*np.exp(rotation/tauT2) + decay*p*(np.exp(rotation/tauT2) - np.exp(t/tauT2)) + p*(-rotation + t)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauC1*(-decay**2*(tauC1 + (rotation - tauC1)*np.exp(rotation/tauC1)) - decay*p*rotation*(np.exp(rotation/tauC1) - np.exp(t/tauC1)) + p*rotation*(-tauC1*np.exp(rotation/tauC1) + (rotation - t + tauC1)*np.exp(t/tauC1)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1))))) - 2*(tauT1 - tauC1)*(tauT2 - tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(tauT2 - tauC3)*(aT1*tauT1**2*(tauT2 - tauC2)*(decay**2*(np.exp(rotation/tauT1) - 1) + p*rotation*(-np.exp(rotation/tauT1) + np.exp(t/tauT1)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(aT1*rotation*(tauT2 - tauC2)*(-decay**2*np.exp(rotation/tauT1) - decay*p*(np.exp(rotation/tauT1) - np.exp(t/tauT1)) - p*(-rotation + t)*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT2*(tauT2**2*(decay**2*(np.exp(rotation/tauT2) - 1) + p*rotation*(-np.exp(rotation/tauT2) + np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*rotation*(-decay**2*np.exp(rotation/tauT2) - decay*p*(np.exp(rotation/tauT2) - np.exp(t/tauT2)) - p*(-rotation + t)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauC2*(decay**2*(tauC2 + (rotation - tauC2)*np.exp(rotation/tauC2)) + decay*p*rotation*(np.exp(rotation/tauC2) - np.exp(t/tauC2)) + p*rotation*(tauC2*np.exp(rotation/tauC2) + (-rotation + t - tauC2)*np.exp(t/tauC2)))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)))) + tauC2*(aT1*(tauT2 - tauC2)*(decay**2*(tauC2 + (rotation - tauC2)*np.exp(rotation/tauC2)) + decay*p*rotation*(np.exp(rotation/tauC2) - np.exp(t/tauC2)) + p*rotation*(tauC2*np.exp(rotation/tauC2) + (-rotation + t - tauC2)*np.exp(t/tauC2)))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(-decay**2*(np.exp(rotation/tauT2) - 1) + p*rotation*(np.exp(rotation/tauT2) - np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*rotation*(decay**2*np.exp(rotation/tauT2) + decay*p*(np.exp(rotation/tauT2) - np.exp(t/tauT2)) + p*(-rotation + t)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauC2*(-decay**2*(tauC2 + (rotation - tauC2)*np.exp(rotation/tauC2)) - decay*p*rotation*(np.exp(rotation/tauC2) - np.exp(t/tauC2)) + p*rotation*(-tauC2*np.exp(rotation/tauC2) + (rotation - t + tauC2)*np.exp(t/tauC2)))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1))))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(aT1*tauT1**2*(tauT2 - tauC3)*(decay**2*(np.exp(rotation/tauT1) - 1) + p*rotation*(-np.exp(rotation/tauT1) + np.exp(t/tauT1)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(aT1*rotation*(tauT2 - tauC3)*(-decay**2*np.exp(rotation/tauT1) - decay*p*(np.exp(rotation/tauT1) - np.exp(t/tauT1)) - p*(-rotation + t)*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT2*(tauT2**2*(decay**2*(np.exp(rotation/tauT2) - 1) + p*rotation*(-np.exp(rotation/tauT2) + np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*rotation*(-decay**2*np.exp(rotation/tauT2) - decay*p*(np.exp(rotation/tauT2) - np.exp(t/tauT2)) - p*(-rotation + t)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauC3*(decay**2*(tauC3 + (rotation - tauC3)*np.exp(rotation/tauC3)) + decay*p*rotation*(np.exp(rotation/tauC3) - np.exp(t/tauC3)) + p*rotation*(tauC3*np.exp(rotation/tauC3) + (-rotation + t - tauC3)*np.exp(t/tauC3)))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)))) + tauC3*(aT1*(tauT2 - tauC3)*(decay**2*(tauC3 + (rotation - tauC3)*np.exp(rotation/tauC3)) + decay*p*rotation*(np.exp(rotation/tauC3) - np.exp(t/tauC3)) + p*rotation*(tauC3*np.exp(rotation/tauC3) + (-rotation + t - tauC3)*np.exp(t/tauC3)))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(-decay**2*(np.exp(rotation/tauT2) - 1) + p*rotation*(np.exp(rotation/tauT2) - np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*rotation*(decay**2*np.exp(rotation/tauT2) + decay*p*(np.exp(rotation/tauT2) - np.exp(t/tauT2)) + p*(-rotation + t)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauC3*(-decay**2*(tauC3 + (rotation - tauC3)*np.exp(rotation/tauC3)) - decay*p*rotation*(np.exp(rotation/tauC3) - np.exp(t/tauC3)) + p*rotation*(-tauC3*np.exp(rotation/tauC3) + (rotation - t + tauC3)*np.exp(t/tauC3)))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)))))))*np.exp(t*(-1/tauC3 - 1/tauC2 - 1/tauC1 - 1/tauT2 - 1/tauT1))/(decay**2*p*rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3))

    term5 = (-2*aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*tauT1*(tauT1*decay**2*(-p*np.exp(rotation/tauT1) + p + rotation*(np.exp(p/tauT1) - 1)) + tauT1*p*rotation*(-p + rotation)*(np.exp(decay/tauT1) - 1)*np.exp(rotation/tauT1) + decay*p*rotation*(p - rotation)*np.exp(rotation/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT2*tauT2*(tauT2*decay**2*(-p*np.exp(rotation/tauT2) + p + rotation*(np.exp(p/tauT2) - 1)) + tauT2*p*rotation*(-p + rotation)*(np.exp(decay/tauT2) - 1)*np.exp(rotation/tauT2) + decay*p*rotation*(p - rotation)*np.exp(rotation/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1))) + 2*aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(aT1*tauT1**2*(tauT2 - tauC1)*(decay**2*(p*(np.exp(rotation/tauT1) - 1) - rotation*np.exp(p/tauT1) + rotation) + p*rotation*(p - rotation)*(np.exp(decay/tauT1) - 1)*np.exp(rotation/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(aT1*decay*p*rotation*(tauT2 - tauC1)*(-p + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2) + rotation/tauT1) + aT2*(tauT2**2*(decay**2*(p*(np.exp(rotation/tauT2) - 1) - rotation*np.exp(p/tauT2) + rotation) + p*rotation*(p - rotation)*(np.exp(decay/tauT2) - 1)*np.exp(rotation/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*decay*p*rotation*(-p + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1) + rotation/tauT2) - tauC1*(decay**2*tauC1*(p*(np.exp(rotation/tauC1) - 1) - rotation*np.exp(p/tauC1) + rotation) + decay*p*rotation*(-p + rotation)*np.exp(rotation/tauC1) + p*rotation*tauC1*(p - rotation)*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)))) + tauC1*(-aT1*(tauT2 - tauC1)*(decay**2*tauC1*(p*(np.exp(rotation/tauC1) - 1) - rotation*np.exp(p/tauC1) + rotation) + decay*p*rotation*(-p + rotation)*np.exp(rotation/tauC1) + p*rotation*tauC1*(p - rotation)*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(decay**2*(-p*np.exp(rotation/tauT2) + p + rotation*(np.exp(p/tauT2) - 1)) + p*rotation*(-p + rotation)*(np.exp(decay/tauT2) - 1)*np.exp(rotation/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) - tauT2*decay*p*rotation*(-p + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1) + rotation/tauT2) + tauC1*(decay**2*tauC1*(p*(np.exp(rotation/tauC1) - 1) - rotation*np.exp(p/tauC1) + rotation) + decay*p*rotation*(-p + rotation)*np.exp(rotation/tauC1) + p*rotation*tauC1*(p - rotation)*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1))))) + 2*(tauT1 - tauC1)*(tauT2 - tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(-tauT2 + tauC3)*(aT1*tauT1**2*(tauT2 - tauC2)*(decay**2*(p*(np.exp(rotation/tauT1) - 1) - rotation*np.exp(p/tauT1) + rotation) + p*rotation*(p - rotation)*(np.exp(decay/tauT1) - 1)*np.exp(rotation/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(aT1*decay*p*rotation*(tauT2 - tauC2)*(-p + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2) + rotation/tauT1) + aT2*(tauT2**2*(decay**2*(p*(np.exp(rotation/tauT2) - 1) - rotation*np.exp(p/tauT2) + rotation) + p*rotation*(p - rotation)*(np.exp(decay/tauT2) - 1)*np.exp(rotation/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*decay*p*rotation*(-p + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1) + rotation/tauT2) - tauC2*(decay**2*tauC2*(p*(np.exp(rotation/tauC2) - 1) - rotation*np.exp(p/tauC2) + rotation) + decay*p*rotation*(-p + rotation)*np.exp(rotation/tauC2) + p*rotation*tauC2*(p - rotation)*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)))) + tauC2*(-aT1*(tauT2 - tauC2)*(decay**2*tauC2*(p*(np.exp(rotation/tauC2) - 1) - rotation*np.exp(p/tauC2) + rotation) + decay*p*rotation*(-p + rotation)*np.exp(rotation/tauC2) + p*rotation*tauC2*(p - rotation)*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(decay**2*(-p*np.exp(rotation/tauT2) + p + rotation*(np.exp(p/tauT2) - 1)) + p*rotation*(-p + rotation)*(np.exp(decay/tauT2) - 1)*np.exp(rotation/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) - tauT2*decay*p*rotation*(-p + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1) + rotation/tauT2) + tauC2*(decay**2*tauC2*(p*(np.exp(rotation/tauC2) - 1) - rotation*np.exp(p/tauC2) + rotation) + decay*p*rotation*(-p + rotation)*np.exp(rotation/tauC2) + p*rotation*tauC2*(p - rotation)*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1))))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(-aT1*tauT1**2*(tauT2 - tauC3)*(decay**2*(p*(np.exp(rotation/tauT1) - 1) - rotation*np.exp(p/tauT1) + rotation) + p*rotation*(p - rotation)*(np.exp(decay/tauT1) - 1)*np.exp(rotation/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(aT1*decay*p*rotation*(tauT2 - tauC3)*(p - rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2) + rotation/tauT1) + aT2*(tauT2**2*(decay**2*(-p*np.exp(rotation/tauT2) + p + rotation*(np.exp(p/tauT2) - 1)) + p*rotation*(-p + rotation)*(np.exp(decay/tauT2) - 1)*np.exp(rotation/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) - tauT2*decay*p*rotation*(-p + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1) + rotation/tauT2) + tauC3*(decay**2*tauC3*(p*(np.exp(rotation/tauC3) - 1) - rotation*np.exp(p/tauC3) + rotation) + decay*p*rotation*(-p + rotation)*np.exp(rotation/tauC3) + p*rotation*tauC3*(p - rotation)*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)))) + tauC3*(aT1*(tauT2 - tauC3)*(decay**2*tauC3*(p*(np.exp(rotation/tauC3) - 1) - rotation*np.exp(p/tauC3) + rotation) + decay*p*rotation*(-p + rotation)*np.exp(rotation/tauC3) + p*rotation*tauC3*(p - rotation)*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(decay**2*(p*(np.exp(rotation/tauT2) - 1) - rotation*np.exp(p/tauT2) + rotation) + p*rotation*(p - rotation)*(np.exp(decay/tauT2) - 1)*np.exp(rotation/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*decay*p*rotation*(-p + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1) + rotation/tauT2) - tauC3*(decay**2*tauC3*(p*(np.exp(rotation/tauC3) - 1) - rotation*np.exp(p/tauC3) + rotation) + decay*p*rotation*(-p + rotation)*np.exp(rotation/tauC3) + p*rotation*tauC3*(p - rotation)*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)))))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))/(decay**2*p*rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(p - rotation))

    term6 = (aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*(2*tauT1**2*(decay**2*(-p*np.exp(rotation/tauT1) + p + rotation*(np.exp(p/tauT1) - 1)) + p*rotation*(p - rotation)*(np.exp(rotation/tauT1) - np.exp(t/tauT1)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - 2*tauT1*p*rotation*(p - rotation)*(decay*(-np.exp(rotation/tauT1) + np.exp(t/tauT1)) + (rotation - t)*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - p*rotation*(p - rotation)*(decay + rotation - t)**2*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))) + aT2*(2*tauT2**2*(decay**2*(-p*np.exp(rotation/tauT2) + p + rotation*(np.exp(p/tauT2) - 1)) + p*rotation*(p - rotation)*(np.exp(rotation/tauT2) - np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) - 2*tauT2*p*rotation*(p - rotation)*(decay*(-np.exp(rotation/tauT2) + np.exp(t/tauT2)) + (rotation - t)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) - p*rotation*(p - rotation)*(decay + rotation - t)**2*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)))) - 2*aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(aT1*tauT1**2*(tauT2 - tauC1)*(decay**2*(p*(np.exp(rotation/tauT1) - 1) - rotation*np.exp(p/tauT1) + rotation) + p*rotation*(-p + rotation)*(np.exp(rotation/tauT1) - np.exp(t/tauT1)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(aT1*p*rotation*(tauT2 - tauC1)*(p - rotation)*(decay*(-np.exp(rotation/tauT1) + np.exp(t/tauT1)) + (rotation - t)*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT2*(tauT2**2*(decay**2*(p*(np.exp(rotation/tauT2) - 1) - rotation*np.exp(p/tauT2) + rotation) + p*rotation*(-p + rotation)*(np.exp(rotation/tauT2) - np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*p*rotation*(p - rotation)*(decay*(-np.exp(rotation/tauT2) + np.exp(t/tauT2)) + (rotation - t)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauC1*(decay**2*tauC1*(-p*np.exp(rotation/tauC1) + p + rotation*(np.exp(p/tauC1) - 1)) + decay*p*rotation*(-p + rotation)*(-np.exp(rotation/tauC1) + np.exp(t/tauC1)) + p*rotation*(-p + rotation)*(-tauC1*np.exp(rotation/tauC1) + (rotation - t + tauC1)*np.exp(t/tauC1)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)))) + tauC1*(-aT1*(tauT2 - tauC1)*(decay**2*tauC1*(p*(np.exp(rotation/tauC1) - 1) - rotation*np.exp(p/tauC1) + rotation) + decay*p*rotation*(-p + rotation)*(np.exp(rotation/tauC1) - np.exp(t/tauC1)) + p*rotation*(p - rotation)*(-tauC1*np.exp(rotation/tauC1) + (rotation - t + tauC1)*np.exp(t/tauC1)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(decay**2*(-p*np.exp(rotation/tauT2) + p + rotation*(np.exp(p/tauT2) - 1)) + p*rotation*(p - rotation)*(np.exp(rotation/tauT2) - np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) - tauT2*p*rotation*(p - rotation)*(decay*(-np.exp(rotation/tauT2) + np.exp(t/tauT2)) + (rotation - t)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauC1*(decay**2*tauC1*(p*(np.exp(rotation/tauC1) - 1) - rotation*np.exp(p/tauC1) + rotation) + decay*p*rotation*(-p + rotation)*(np.exp(rotation/tauC1) - np.exp(t/tauC1)) + p*rotation*(p - rotation)*(-tauC1*np.exp(rotation/tauC1) + (rotation - t + tauC1)*np.exp(t/tauC1)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1))))) - 2*(tauT1 - tauC1)*(tauT2 - tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(-tauT2 + tauC3)*(aT1*tauT1**2*(tauT2 - tauC2)*(decay**2*(p*(np.exp(rotation/tauT1) - 1) - rotation*np.exp(p/tauT1) + rotation) + p*rotation*(-p + rotation)*(np.exp(rotation/tauT1) - np.exp(t/tauT1)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(aT1*p*rotation*(tauT2 - tauC2)*(p - rotation)*(decay*(-np.exp(rotation/tauT1) + np.exp(t/tauT1)) + (rotation - t)*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT2*(tauT2**2*(decay**2*(p*(np.exp(rotation/tauT2) - 1) - rotation*np.exp(p/tauT2) + rotation) + p*rotation*(-p + rotation)*(np.exp(rotation/tauT2) - np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*p*rotation*(p - rotation)*(decay*(-np.exp(rotation/tauT2) + np.exp(t/tauT2)) + (rotation - t)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauC2*(decay**2*tauC2*(-p*np.exp(rotation/tauC2) + p + rotation*(np.exp(p/tauC2) - 1)) + decay*p*rotation*(-p + rotation)*(-np.exp(rotation/tauC2) + np.exp(t/tauC2)) + p*rotation*(-p + rotation)*(-tauC2*np.exp(rotation/tauC2) + (rotation - t + tauC2)*np.exp(t/tauC2)))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)))) + tauC2*(-aT1*(tauT2 - tauC2)*(decay**2*tauC2*(p*(np.exp(rotation/tauC2) - 1) - rotation*np.exp(p/tauC2) + rotation) + decay*p*rotation*(-p + rotation)*(np.exp(rotation/tauC2) - np.exp(t/tauC2)) + p*rotation*(p - rotation)*(-tauC2*np.exp(rotation/tauC2) + (rotation - t + tauC2)*np.exp(t/tauC2)))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(decay**2*(-p*np.exp(rotation/tauT2) + p + rotation*(np.exp(p/tauT2) - 1)) + p*rotation*(p - rotation)*(np.exp(rotation/tauT2) - np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) - tauT2*p*rotation*(p - rotation)*(decay*(-np.exp(rotation/tauT2) + np.exp(t/tauT2)) + (rotation - t)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauC2*(decay**2*tauC2*(p*(np.exp(rotation/tauC2) - 1) - rotation*np.exp(p/tauC2) + rotation) + decay*p*rotation*(-p + rotation)*(np.exp(rotation/tauC2) - np.exp(t/tauC2)) + p*rotation*(p - rotation)*(-tauC2*np.exp(rotation/tauC2) + (rotation - t + tauC2)*np.exp(t/tauC2)))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1))))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(aT1*tauT1**2*(tauT2 - tauC3)*(decay**2*(-p*np.exp(rotation/tauT1) + p + rotation*(np.exp(p/tauT1) - 1)) + p*rotation*(p - rotation)*(np.exp(rotation/tauT1) - np.exp(t/tauT1)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*p*rotation*(tauT2 - tauC3)*(p - rotation)*(decay*(-np.exp(rotation/tauT1) + np.exp(t/tauT1)) + (rotation - t)*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT2*(tauT2**2*(decay**2*(-p*np.exp(rotation/tauT2) + p + rotation*(np.exp(p/tauT2) - 1)) + p*rotation*(p - rotation)*(np.exp(rotation/tauT2) - np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) - tauT2*p*rotation*(p - rotation)*(decay*(-np.exp(rotation/tauT2) + np.exp(t/tauT2)) + (rotation - t)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauC3*(decay**2*tauC3*(p*(np.exp(rotation/tauC3) - 1) - rotation*np.exp(p/tauC3) + rotation) + decay*p*rotation*(-p + rotation)*(np.exp(rotation/tauC3) - np.exp(t/tauC3)) + p*rotation*(p - rotation)*(-tauC3*np.exp(rotation/tauC3) + (rotation - t + tauC3)*np.exp(t/tauC3)))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)))) + tauC3*(aT1*(tauT2 - tauC3)*(decay**2*tauC3*(p*(np.exp(rotation/tauC3) - 1) - rotation*np.exp(p/tauC3) + rotation) + decay*p*rotation*(-p + rotation)*(np.exp(rotation/tauC3) - np.exp(t/tauC3)) + p*rotation*(p - rotation)*(-tauC3*np.exp(rotation/tauC3) + (rotation - t + tauC3)*np.exp(t/tauC3)))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(decay**2*(p*(np.exp(rotation/tauT2) - 1) - rotation*np.exp(p/tauT2) + rotation) + p*rotation*(-p + rotation)*(np.exp(rotation/tauT2) - np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*p*rotation*(p - rotation)*(decay*(-np.exp(rotation/tauT2) + np.exp(t/tauT2)) + (rotation - t)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauC3*(decay**2*tauC3*(-p*np.exp(rotation/tauC3) + p + rotation*(np.exp(p/tauC3) - 1)) + decay*p*rotation*(-p + rotation)*(-np.exp(rotation/tauC3) + np.exp(t/tauC3)) + p*rotation*(-p + rotation)*(-tauC3*np.exp(rotation/tauC3) + (rotation - t + tauC3)*np.exp(t/tauC3)))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)))))))*np.exp(t*(-1/tauC3 - 1/tauC2 - 1/tauC1 - 1/tauT2 - 1/tauT1))/(decay**2*p*rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(-p + rotation))



    
    result = np.where(condition1, term1,
                    np.where(condition2, term2,
                            np.where(condition3, term3,
                                        np.where(condition4, term4,
                                                 np.where(condition5, term5,
                                                          np.where(condition6, term6, 0
                                                ))))))

    return result * AACO2 * kPulseT

def AGTPPRF_Trian_Constant(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, kPulseT, aT1, tauT1, aT2, tauT2, AACO2, decay, p, rotation):

    condition1 = (p >= rotation) & (rotation < t) & (decay + rotation < t)

    condition2 = (p >= rotation) & (rotation < t) & (decay + rotation >= t)

    condition3 = (rotation >= t) & (t > 0) & (decay + rotation >= t) & ((p >= rotation) | (p >= t))

    condition4 = (p < rotation) & (p < t) & (rotation < t) & (decay + rotation < t)

    condition5 = (p < rotation) & (p < t) & (rotation < t) & (decay + rotation >= t)

    condition6 = (rotation >= t) & (p < rotation) & (p < t) & (decay + rotation >= t)

    term1 = (aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*(2*tauT1**2*decay*(np.exp(rotation/tauT1) - 1) - tauT1*rotation*(2*decay - p*np.exp(decay/tauT1) + p)*np.exp(rotation/tauT1) - decay*rotation*(p - rotation)*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT2*(2*tauT2**2*decay*(np.exp(rotation/tauT2) - 1) - tauT2*rotation*(2*decay - p*np.exp(decay/tauT2) + p)*np.exp(rotation/tauT2) - decay*rotation*(p - rotation)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1))) + aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(2*aT1*tauT1**2*decay*(tauT2 - tauC1)*(np.exp(rotation/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - aT1*tauT1*rotation*(tauT2 - tauC1)*(2*decay - p*np.exp(decay/tauT1) + p)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2) + rotation/tauT1) + aT1*tauC1*(tauT2 - tauC1)*(2*decay*(tauC1 + (rotation - tauC1)*np.exp(rotation/tauC1)) - p*rotation*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)) + tauT1*aT2*(2*tauT2**2*decay*(np.exp(rotation/tauT2) - 1)*np.exp(t/tauC1) - tauT2*rotation*(2*decay - p*np.exp(decay/tauT2) + p)*np.exp(t/tauC1 + rotation/tauT2) + tauC1*(2*decay*(tauC1 + (rotation - tauC1)*np.exp(rotation/tauC1)) - p*rotation*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1)) + aT2*tauC1*(-2*tauT2**2*decay*(np.exp(rotation/tauT2) - 1)*np.exp(t/tauC1) + tauT2*rotation*(2*decay - p*np.exp(decay/tauT2) + p)*np.exp(t/tauC1 + rotation/tauT2) + tauC1*(-2*decay*(tauC1 + (rotation - tauC1)*np.exp(rotation/tauC1)) + p*rotation*(np.exp(decay/tauC1) - 1)*np.exp(rotation/tauC1))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1))) + (tauT1 - tauC1)*(-tauT2 + tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(tauT2 - tauC3)*(2*aT1*tauT1**2*decay*(tauT2 - tauC2)*(np.exp(rotation/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - aT1*tauT1*rotation*(tauT2 - tauC2)*(2*decay - p*np.exp(decay/tauT1) + p)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2) + rotation/tauT1) + aT1*tauC2*(tauT2 - tauC2)*(2*decay*(tauC2 + (rotation - tauC2)*np.exp(rotation/tauC2)) - p*rotation*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + tauT1*aT2*(2*tauT2**2*decay*(np.exp(rotation/tauT2) - 1)*np.exp(t/tauC2) - tauT2*rotation*(2*decay - p*np.exp(decay/tauT2) + p)*np.exp(t/tauC2 + rotation/tauT2) + tauC2*(2*decay*(tauC2 + (rotation - tauC2)*np.exp(rotation/tauC2)) - p*rotation*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1)) + aT2*tauC2*(-2*tauT2**2*decay*(np.exp(rotation/tauT2) - 1)*np.exp(t/tauC2) + tauT2*rotation*(2*decay - p*np.exp(decay/tauT2) + p)*np.exp(t/tauC2 + rotation/tauT2) + tauC2*(-2*decay*(tauC2 + (rotation - tauC2)*np.exp(rotation/tauC2)) + p*rotation*(np.exp(decay/tauC2) - 1)*np.exp(rotation/tauC2))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(2*aT1*tauT1**2*decay*(tauT2 - tauC3)*(np.exp(rotation/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - aT1*tauT1*rotation*(tauT2 - tauC3)*(2*decay - p*np.exp(decay/tauT1) + p)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2) + rotation/tauT1) + aT1*tauC3*(tauT2 - tauC3)*(2*decay*(tauC3 + (rotation - tauC3)*np.exp(rotation/tauC3)) - p*rotation*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + tauT1*aT2*(2*tauT2**2*decay*(np.exp(rotation/tauT2) - 1)*np.exp(t/tauC3) - tauT2*rotation*(2*decay - p*np.exp(decay/tauT2) + p)*np.exp(t/tauC3 + rotation/tauT2) + tauC3*(2*decay*(tauC3 + (rotation - tauC3)*np.exp(rotation/tauC3)) - p*rotation*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)) + aT2*tauC3*(-2*tauT2**2*decay*(np.exp(rotation/tauT2) - 1)*np.exp(t/tauC3) + tauT2*rotation*(2*decay - p*np.exp(decay/tauT2) + p)*np.exp(t/tauC3 + rotation/tauT2) + tauC3*(-2*decay*(tauC3 + (rotation - tauC3)*np.exp(rotation/tauC3)) + p*rotation*(np.exp(decay/tauC3) - 1)*np.exp(rotation/tauC3))*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))/(decay*p*rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3))

    term2 = (aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*(2*tauT1**2*decay*(np.exp(rotation/tauT1) - 1) - tauT1*rotation*(2*decay*np.exp(rotation/tauT1) + p*(np.exp(rotation/tauT1) - np.exp(t/tauT1))) + rotation*(decay*rotation + p*(rotation - t))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT2*(2*tauT2**2*decay*(np.exp(rotation/tauT2) - 1) - tauT2*rotation*(2*decay*np.exp(rotation/tauT2) + p*(np.exp(rotation/tauT2) - np.exp(t/tauT2))) + rotation*(decay*rotation + p*(rotation - t))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1))) + aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(2*aT1*tauT1**2*decay*(tauT2 - tauC1)*(np.exp(rotation/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - aT1*tauT1*rotation*(tauT2 - tauC1)*(2*decay*np.exp(rotation/tauT1) + p*(np.exp(rotation/tauT1) - np.exp(t/tauT1)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT1*tauC1*(tauT2 - tauC1)*(2*decay*(tauC1 + (rotation - tauC1)*np.exp(rotation/tauC1)) + p*rotation*(np.exp(rotation/tauC1) - np.exp(t/tauC1)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)) + tauT1*aT2*(2*tauT2**2*decay*(np.exp(rotation/tauT2) - 1)*np.exp(t/tauC1) - tauT2*rotation*(2*decay*np.exp(rotation/tauT2) + p*(np.exp(rotation/tauT2) - np.exp(t/tauT2)))*np.exp(t/tauC1) + tauC1*(2*decay*(tauC1 + (rotation - tauC1)*np.exp(rotation/tauC1)) + p*rotation*(np.exp(rotation/tauC1) - np.exp(t/tauC1)))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1)) + aT2*tauC1*(-2*tauT2**2*decay*(np.exp(rotation/tauT2) - 1)*np.exp(t/tauC1) + tauT2*rotation*(2*decay*np.exp(rotation/tauT2) + p*(np.exp(rotation/tauT2) - np.exp(t/tauT2)))*np.exp(t/tauC1) + tauC1*(-2*decay*(tauC1 + (rotation - tauC1)*np.exp(rotation/tauC1)) + p*rotation*(-np.exp(rotation/tauC1) + np.exp(t/tauC1)))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1))) + (tauT1 - tauC1)*(-tauT2 + tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(tauT2 - tauC3)*(2*aT1*tauT1**2*decay*(tauT2 - tauC2)*(np.exp(rotation/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - aT1*tauT1*rotation*(tauT2 - tauC2)*(2*decay*np.exp(rotation/tauT1) + p*(np.exp(rotation/tauT1) - np.exp(t/tauT1)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT1*tauC2*(tauT2 - tauC2)*(2*decay*(tauC2 + (rotation - tauC2)*np.exp(rotation/tauC2)) + p*rotation*(np.exp(rotation/tauC2) - np.exp(t/tauC2)))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + tauT1*aT2*(2*tauT2**2*decay*(np.exp(rotation/tauT2) - 1)*np.exp(t/tauC2) - tauT2*rotation*(2*decay*np.exp(rotation/tauT2) + p*(np.exp(rotation/tauT2) - np.exp(t/tauT2)))*np.exp(t/tauC2) + tauC2*(2*decay*(tauC2 + (rotation - tauC2)*np.exp(rotation/tauC2)) + p*rotation*(np.exp(rotation/tauC2) - np.exp(t/tauC2)))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1)) + aT2*tauC2*(-2*tauT2**2*decay*(np.exp(rotation/tauT2) - 1)*np.exp(t/tauC2) + tauT2*rotation*(2*decay*np.exp(rotation/tauT2) + p*(np.exp(rotation/tauT2) - np.exp(t/tauT2)))*np.exp(t/tauC2) + tauC2*(-2*decay*(tauC2 + (rotation - tauC2)*np.exp(rotation/tauC2)) + p*rotation*(-np.exp(rotation/tauC2) + np.exp(t/tauC2)))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(2*aT1*tauT1**2*decay*(tauT2 - tauC3)*(np.exp(rotation/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - aT1*tauT1*rotation*(tauT2 - tauC3)*(2*decay*np.exp(rotation/tauT1) + p*(np.exp(rotation/tauT1) - np.exp(t/tauT1)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT1*tauC3*(tauT2 - tauC3)*(2*decay*(tauC3 + (rotation - tauC3)*np.exp(rotation/tauC3)) + p*rotation*(np.exp(rotation/tauC3) - np.exp(t/tauC3)))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + tauT1*aT2*(2*tauT2**2*decay*(np.exp(rotation/tauT2) - 1)*np.exp(t/tauC3) - tauT2*rotation*(2*decay*np.exp(rotation/tauT2) + p*(np.exp(rotation/tauT2) - np.exp(t/tauT2)))*np.exp(t/tauC3) + tauC3*(2*decay*(tauC3 + (rotation - tauC3)*np.exp(rotation/tauC3)) + p*rotation*(np.exp(rotation/tauC3) - np.exp(t/tauC3)))*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)) + aT2*tauC3*(-2*tauT2**2*decay*(np.exp(rotation/tauT2) - 1)*np.exp(t/tauC3) + tauT2*rotation*(2*decay*np.exp(rotation/tauT2) + p*(np.exp(rotation/tauT2) - np.exp(t/tauT2)))*np.exp(t/tauC3) + tauC3*(-2*decay*(tauC3 + (rotation - tauC3)*np.exp(rotation/tauC3)) + p*rotation*(-np.exp(rotation/tauC3) + np.exp(t/tauC3)))*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))/(decay*p*rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3))

    term3 = (aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*(2*tauT1**2*(np.exp(t/tauT1) - 1) - 2*tauT1*t*np.exp(t/tauT1) + t**2*np.exp(t/tauT1))*np.exp(t/tauT2) + aT2*(2*tauT2**2*(np.exp(t/tauT2) - 1) - 2*tauT2*t*np.exp(t/tauT2) + t**2*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + 2*aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(aT1*tauT1**2*(tauT2 - tauC1)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*t*(tauT2 - tauC1)*np.exp(t*(1/tauC1 + 1/tauT2)) + aT2*(tauT2**2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC1) - tauT2*t*np.exp(t*(1/tauC1 + 1/tauT2)) + tauC1*(tauC1 + (t - tauC1)*np.exp(t/tauC1))*np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1)) + tauC1*(aT1*(tauT2 - tauC1)*(tauC1 + (t - tauC1)*np.exp(t/tauC1))*np.exp(t/tauT2) + aT2*(-tauT2**2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC1) + tauT2*t*np.exp(t*(1/tauC1 + 1/tauT2)) - tauC1*(tauC1 + (t - tauC1)*np.exp(t/tauC1))*np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1))) + 2*(tauT1 - tauC1)*(-tauT2 + tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(tauT2 - tauC3)*(aT1*tauT1**2*(tauT2 - tauC2)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*t*(tauT2 - tauC2)*np.exp(t*(1/tauC2 + 1/tauT2)) + aT2*(tauT2**2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC2) - tauT2*t*np.exp(t*(1/tauC2 + 1/tauT2)) + tauC2*(tauC2 + (t - tauC2)*np.exp(t/tauC2))*np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1)) + tauC2*(aT1*(tauT2 - tauC2)*(tauC2 + (t - tauC2)*np.exp(t/tauC2))*np.exp(t/tauT2) + aT2*(-tauT2**2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC2) + tauT2*t*np.exp(t*(1/tauC2 + 1/tauT2)) - tauC2*(tauC2 + (t - tauC2)*np.exp(t/tauC2))*np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(aT1*tauT1**2*(tauT2 - tauC3)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*t*(tauT2 - tauC3)*np.exp(t*(1/tauC3 + 1/tauT2)) + aT2*(tauT2**2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC3) - tauT2*t*np.exp(t*(1/tauC3 + 1/tauT2)) + tauC3*(tauC3 + (t - tauC3)*np.exp(t/tauC3))*np.exp(t/tauT2)))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)) + tauC3*(aT1*(tauT2 - tauC3)*(tauC3 + (t - tauC3)*np.exp(t/tauC3))*np.exp(t/tauT2) + aT2*(-tauT2**2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC3) + tauT2*t*np.exp(t*(1/tauC3 + 1/tauT2)) - tauC3*(tauC3 + (t - tauC3)*np.exp(t/tauC3))*np.exp(t/tauT2)))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))/(p*rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3))

    term4 = (-aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*tauT1*(2*tauT1*decay*(-p*np.exp(rotation/tauT1) + p + rotation*(np.exp(p/tauT1) - 1)) + p*rotation*(-p + rotation)*(np.exp(decay/tauT1) - 1)*np.exp(rotation/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT2*tauT2*(2*tauT2*decay*(-p*np.exp(rotation/tauT2) + p + rotation*(np.exp(p/tauT2) - 1)) + p*rotation*(-p + rotation)*(np.exp(decay/tauT2) - 1)*np.exp(rotation/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1))) + aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(2*aT1*tauT1**2*decay*(tauT2 - tauC1)*(p*(np.exp(rotation/tauT1) - 1) - rotation*np.exp(p/tauT1) + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(aT1*p*rotation*(tauT2 - tauC1)*(p - rotation)*(np.exp(decay/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2) + rotation/tauT1) + aT2*(2*tauT2**2*decay*(p*(np.exp(rotation/tauT2) - 1) - rotation*np.exp(p/tauT2) + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) - tauT2*p*rotation*(-p + rotation)*(np.exp(decay/tauT2) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1) + rotation/tauT2) + tauC1*(2*decay*rotation*tauC1*np.exp(p/tauC1) + 2*decay*tauC1*(p - rotation) + p*rotation*(-p + rotation)*np.exp((decay + rotation)/tauC1) + p*(-2*decay*tauC1 + p*rotation - rotation**2)*np.exp(rotation/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)))) + tauC1*(aT1*(tauT2 - tauC1)*(2*decay*rotation*tauC1*np.exp(p/tauC1) + 2*decay*tauC1*(p - rotation) + p*rotation*(-p + rotation)*np.exp((decay + rotation)/tauC1) + p*(-2*decay*tauC1 + p*rotation - rotation**2)*np.exp(rotation/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)) + aT2*(2*tauT2**2*decay*(-p*np.exp(rotation/tauT2) + p + rotation*(np.exp(p/tauT2) - 1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*p*rotation*(-p + rotation)*(np.exp(decay/tauT2) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1) + rotation/tauT2) + tauC1*(-2*decay*rotation*tauC1*np.exp(p/tauC1) + 2*decay*tauC1*(-p + rotation) - p*rotation*(-p + rotation)*np.exp((decay + rotation)/tauC1) + p*(2*decay*tauC1 - p*rotation + rotation**2)*np.exp(rotation/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1))))) + (tauT1 - tauC1)*(tauT2 - tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(-tauT2 + tauC3)*(2*aT1*tauT1**2*decay*(tauT2 - tauC2)*(p*(np.exp(rotation/tauT1) - 1) - rotation*np.exp(p/tauT1) + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(aT1*p*rotation*(tauT2 - tauC2)*(p - rotation)*(np.exp(decay/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2) + rotation/tauT1) + aT2*(2*tauT2**2*decay*(p*(np.exp(rotation/tauT2) - 1) - rotation*np.exp(p/tauT2) + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) - tauT2*p*rotation*(-p + rotation)*(np.exp(decay/tauT2) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1) + rotation/tauT2) + tauC2*(2*decay*rotation*tauC2*np.exp(p/tauC2) + 2*decay*tauC2*(p - rotation) + p*rotation*(-p + rotation)*np.exp((decay + rotation)/tauC2) + p*(-2*decay*tauC2 + p*rotation - rotation**2)*np.exp(rotation/tauC2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)))) + tauC2*(aT1*(tauT2 - tauC2)*(2*decay*rotation*tauC2*np.exp(p/tauC2) + 2*decay*tauC2*(p - rotation) + p*rotation*(-p + rotation)*np.exp((decay + rotation)/tauC2) + p*(-2*decay*tauC2 + p*rotation - rotation**2)*np.exp(rotation/tauC2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(2*tauT2**2*decay*(-p*np.exp(rotation/tauT2) + p + rotation*(np.exp(p/tauT2) - 1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*p*rotation*(-p + rotation)*(np.exp(decay/tauT2) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1) + rotation/tauT2) + tauC2*(-2*decay*rotation*tauC2*np.exp(p/tauC2) + 2*decay*tauC2*(-p + rotation) - p*rotation*(-p + rotation)*np.exp((decay + rotation)/tauC2) + p*(2*decay*tauC2 - p*rotation + rotation**2)*np.exp(rotation/tauC2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1))))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(2*aT1*tauT1**2*decay*(tauT2 - tauC3)*(-p*np.exp(rotation/tauT1) + p + rotation*(np.exp(p/tauT1) - 1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(aT1*p*rotation*(tauT2 - tauC3)*(-p + rotation)*(np.exp(decay/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2) + rotation/tauT1) + aT2*(2*tauT2**2*decay*(-p*np.exp(rotation/tauT2) + p + rotation*(np.exp(p/tauT2) - 1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*p*rotation*(-p + rotation)*(np.exp(decay/tauT2) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1) + rotation/tauT2) + tauC3*(-2*decay*rotation*tauC3*np.exp(p/tauC3) + 2*decay*tauC3*(-p + rotation) - p*rotation*(-p + rotation)*np.exp((decay + rotation)/tauC3) + p*(2*decay*tauC3 - p*rotation + rotation**2)*np.exp(rotation/tauC3))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)))) + tauC3*(aT1*(tauT2 - tauC3)*(-2*decay*rotation*tauC3*np.exp(p/tauC3) + 2*decay*tauC3*(-p + rotation) - p*rotation*(-p + rotation)*np.exp((decay + rotation)/tauC3) + p*(2*decay*tauC3 - p*rotation + rotation**2)*np.exp(rotation/tauC3))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(2*tauT2**2*decay*(p*(np.exp(rotation/tauT2) - 1) - rotation*np.exp(p/tauT2) + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) - tauT2*p*rotation*(-p + rotation)*(np.exp(decay/tauT2) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1) + rotation/tauT2) + tauC3*(2*decay*rotation*tauC3*np.exp(p/tauC3) + 2*decay*tauC3*(p - rotation) + p*rotation*(-p + rotation)*np.exp((decay + rotation)/tauC3) + p*(-2*decay*tauC3 + p*rotation - rotation**2)*np.exp(rotation/tauC3))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)))))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))/(decay*p*rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(p - rotation))

    term5 = (-aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*(2*tauT1**2*decay*(-p*np.exp(rotation/tauT1) + p + rotation*(np.exp(p/tauT1) - 1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - tauT1*p*rotation*(-p + rotation)*(np.exp(rotation/tauT1) - np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + p*rotation*(-p + rotation)*(decay + rotation - t)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))) + aT2*(2*tauT2**2*decay*(-p*np.exp(rotation/tauT2) + p + rotation*(np.exp(p/tauT2) - 1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) - tauT2*p*rotation*(-p + rotation)*(np.exp(rotation/tauT2) - np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + p*rotation*(-p + rotation)*(decay + rotation - t)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)))) + aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(2*aT1*tauT1**2*decay*(tauT2 - tauC1)*(p*(np.exp(rotation/tauT1) - 1) - rotation*np.exp(p/tauT1) + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(aT1*p*rotation*(tauT2 - tauC1)*(-p + rotation)*(np.exp(rotation/tauT1) - np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT2*(2*tauT2**2*decay*(p*(np.exp(rotation/tauT2) - 1) - rotation*np.exp(p/tauT2) + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*p*rotation*(-p + rotation)*(np.exp(rotation/tauT2) - np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) - tauC1*(-2*decay*rotation*tauC1*np.exp(p/tauC1) + 2*decay*tauC1*(-p + rotation) + p*rotation*(p - rotation)*np.exp(t/tauC1) + p*(2*decay*tauC1 - p*rotation + rotation**2)*np.exp(rotation/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)))) + tauC1*(-aT1*(tauT2 - tauC1)*(-2*decay*rotation*tauC1*np.exp(p/tauC1) + 2*decay*tauC1*(-p + rotation) + p*rotation*(p - rotation)*np.exp(t/tauC1) + p*(2*decay*tauC1 - p*rotation + rotation**2)*np.exp(rotation/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)) + aT2*(2*tauT2**2*decay*(-p*np.exp(rotation/tauT2) + p + rotation*(np.exp(p/tauT2) - 1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) - tauT2*p*rotation*(-p + rotation)*(np.exp(rotation/tauT2) - np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauC1*(-2*decay*rotation*tauC1*np.exp(p/tauC1) + 2*decay*tauC1*(-p + rotation) + p*rotation*(p - rotation)*np.exp(t/tauC1) + p*(2*decay*tauC1 - p*rotation + rotation**2)*np.exp(rotation/tauC1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1))))) + (tauT1 - tauC1)*(tauT2 - tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(-tauT2 + tauC3)*(2*aT1*tauT1**2*decay*(tauT2 - tauC2)*(p*(np.exp(rotation/tauT1) - 1) - rotation*np.exp(p/tauT1) + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(aT1*p*rotation*(tauT2 - tauC2)*(-p + rotation)*(np.exp(rotation/tauT1) - np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT2*(2*tauT2**2*decay*(p*(np.exp(rotation/tauT2) - 1) - rotation*np.exp(p/tauT2) + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*p*rotation*(-p + rotation)*(np.exp(rotation/tauT2) - np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) - tauC2*(-2*decay*rotation*tauC2*np.exp(p/tauC2) + 2*decay*tauC2*(-p + rotation) + p*rotation*(p - rotation)*np.exp(t/tauC2) + p*(2*decay*tauC2 - p*rotation + rotation**2)*np.exp(rotation/tauC2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)))) + tauC2*(-aT1*(tauT2 - tauC2)*(-2*decay*rotation*tauC2*np.exp(p/tauC2) + 2*decay*tauC2*(-p + rotation) + p*rotation*(p - rotation)*np.exp(t/tauC2) + p*(2*decay*tauC2 - p*rotation + rotation**2)*np.exp(rotation/tauC2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(2*tauT2**2*decay*(-p*np.exp(rotation/tauT2) + p + rotation*(np.exp(p/tauT2) - 1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) - tauT2*p*rotation*(-p + rotation)*(np.exp(rotation/tauT2) - np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauC2*(-2*decay*rotation*tauC2*np.exp(p/tauC2) + 2*decay*tauC2*(-p + rotation) + p*rotation*(p - rotation)*np.exp(t/tauC2) + p*(2*decay*tauC2 - p*rotation + rotation**2)*np.exp(rotation/tauC2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1))))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(2*aT1*tauT1**2*decay*(tauT2 - tauC3)*(-p*np.exp(rotation/tauT1) + p + rotation*(np.exp(p/tauT1) - 1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(aT1*p*rotation*(tauT2 - tauC3)*(p - rotation)*(np.exp(rotation/tauT1) - np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT2*(2*tauT2**2*decay*(-p*np.exp(rotation/tauT2) + p + rotation*(np.exp(p/tauT2) - 1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) - tauT2*p*rotation*(-p + rotation)*(np.exp(rotation/tauT2) - np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauC3*(-2*decay*rotation*tauC3*np.exp(p/tauC3) + 2*decay*tauC3*(-p + rotation) + p*rotation*(p - rotation)*np.exp(t/tauC3) + p*(2*decay*tauC3 - p*rotation + rotation**2)*np.exp(rotation/tauC3))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)))) + tauC3*(aT1*(tauT2 - tauC3)*(-2*decay*rotation*tauC3*np.exp(p/tauC3) + 2*decay*tauC3*(-p + rotation) + p*rotation*(p - rotation)*np.exp(t/tauC3) + p*(2*decay*tauC3 - p*rotation + rotation**2)*np.exp(rotation/tauC3))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(2*tauT2**2*decay*(p*(np.exp(rotation/tauT2) - 1) - rotation*np.exp(p/tauT2) + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) + tauT2*p*rotation*(-p + rotation)*(np.exp(rotation/tauT2) - np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1)) - tauC3*(-2*decay*rotation*tauC3*np.exp(p/tauC3) + 2*decay*tauC3*(-p + rotation) + p*rotation*(p - rotation)*np.exp(t/tauC3) + p*(2*decay*tauC3 - p*rotation + rotation**2)*np.exp(rotation/tauC3))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)))))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))/(decay*p*rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(p - rotation))

    term6 = (-aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(-aT1*(2*tauT1**2*(p*(np.exp(t/tauT1) - 1) - rotation*np.exp(p/tauT1) + rotation) - 2*tauT1*p*(-rotation + t)*np.exp(t/tauT1) + p*(p*rotation + t*(-2*rotation + t))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - aT2*(2*tauT2**2*(p*(np.exp(t/tauT2) - 1) - rotation*np.exp(p/tauT2) + rotation) - 2*tauT2*p*(-rotation + t)*np.exp(t/tauT2) + p*(p*rotation + t*(-2*rotation + t))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1))) + 2*aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(aT1*tauT1**2*(tauT2 - tauC1)*(p*(np.exp(t/tauT1) - 1) - rotation*np.exp(p/tauT1) + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*p*(tauT2 - tauC1)*(-rotation + t)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(p*(np.exp(t/tauT2) - 1) - rotation*np.exp(p/tauT2) + rotation)*np.exp(t/tauC1) - tauT2*p*(-rotation + t)*np.exp(t*(1/tauC1 + 1/tauT2)) + tauC1*(p*(-rotation + t - tauC1)*np.exp(t/tauC1) + rotation*tauC1*np.exp(p/tauC1) + tauC1*(p - rotation))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1))) + tauC1*(aT1*(tauT2 - tauC1)*(p*(-rotation + t - tauC1)*np.exp(t/tauC1) + rotation*tauC1*np.exp(p/tauC1) + tauC1*(p - rotation))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(-p*np.exp(t/tauT2) + p + rotation*(np.exp(p/tauT2) - 1))*np.exp(t/tauC1) + tauT2*p*(-rotation + t)*np.exp(t*(1/tauC1 + 1/tauT2)) + tauC1*(p*(rotation - t + tauC1)*np.exp(t/tauC1) - rotation*tauC1*np.exp(p/tauC1) + tauC1*(-p + rotation))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1)))) + 2*(tauT1 - tauC1)*(-tauT2 + tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(tauT2 - tauC3)*(aT1*tauT1**2*(tauT2 - tauC2)*(p*(np.exp(t/tauT1) - 1) - rotation*np.exp(p/tauT1) + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*p*(tauT2 - tauC2)*(-rotation + t)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(p*(np.exp(t/tauT2) - 1) - rotation*np.exp(p/tauT2) + rotation)*np.exp(t/tauC2) - tauT2*p*(-rotation + t)*np.exp(t*(1/tauC2 + 1/tauT2)) + tauC2*(p*(-rotation + t - tauC2)*np.exp(t/tauC2) + rotation*tauC2*np.exp(p/tauC2) + tauC2*(p - rotation))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1))) + tauC2*(aT1*(tauT2 - tauC2)*(p*(-rotation + t - tauC2)*np.exp(t/tauC2) + rotation*tauC2*np.exp(p/tauC2) + tauC2*(p - rotation))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(-p*np.exp(t/tauT2) + p + rotation*(np.exp(p/tauT2) - 1))*np.exp(t/tauC2) + tauT2*p*(-rotation + t)*np.exp(t*(1/tauC2 + 1/tauT2)) + tauC2*(p*(rotation - t + tauC2)*np.exp(t/tauC2) - rotation*tauC2*np.exp(p/tauC2) + tauC2*(-p + rotation))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1)))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(aT1*tauT1**2*(tauT2 - tauC3)*(p*(np.exp(t/tauT1) - 1) - rotation*np.exp(p/tauT1) + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*p*(tauT2 - tauC3)*(-rotation + t)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(p*(np.exp(t/tauT2) - 1) - rotation*np.exp(p/tauT2) + rotation)*np.exp(t/tauC3) - tauT2*p*(-rotation + t)*np.exp(t*(1/tauC3 + 1/tauT2)) + tauC3*(p*(-rotation + t - tauC3)*np.exp(t/tauC3) + rotation*tauC3*np.exp(p/tauC3) + tauC3*(p - rotation))*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1))) + tauC3*(aT1*(tauT2 - tauC3)*(p*(-rotation + t - tauC3)*np.exp(t/tauC3) + rotation*tauC3*np.exp(p/tauC3) + tauC3*(p - rotation))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(-p*np.exp(t/tauT2) + p + rotation*(np.exp(p/tauT2) - 1))*np.exp(t/tauC3) + tauT2*p*(-rotation + t)*np.exp(t*(1/tauC3 + 1/tauT2)) + tauC3*(p*(rotation - t + tauC3)*np.exp(t/tauC3) - rotation*tauC3*np.exp(p/tauC3) + tauC3*(-p + rotation))*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1))))))*np.exp(t*(-1/tauC3 - 1/tauC2 - 1/tauC1 - 1/tauT2 - 1/tauT1))/(p*rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(p - rotation))



    
    result = np.where(condition1, term1,
                    np.where(condition2, term2,
                            np.where(condition3, term3,
                                        np.where(condition4, term4,
                                                 np.where(condition5, term5,
                                                          np.where(condition6, term6, 0
                                                ))))))

    return result * AACO2 * kPulseT

def AGTPPRF_Trian_Impulse(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, kPulseT, aT1, tauT1, aT2, tauT2, AACO2, decay, p, rotation):


    condition1 = (p>=rotation) & (p<t)

    condition2 = (p >= t) & ((p == t) | (t > 0)) & ((p >= rotation) | (rotation >= t))

    condition3 = (p < rotation) & (p < t) & (rotation < t)

    condition4 = (rotation >= t) & (p < rotation) & (p < t)


    commonterm = AACO2*kPulseT*(aC1*(-aT1*np.exp((decay + rotation - t)/tauT1) + aT1 - aT2*np.exp((decay + rotation - t)/tauT2) + aT2) + aC2*tauC1*(aT1*(np.exp((decay + rotation - t)/tauT1) - np.exp((decay + rotation - t)/tauC1))/(tauT1 - tauC1) + aT2*(np.exp((decay + rotation - t)/tauT2) - np.exp((decay + rotation - t)/tauC1))/(tauT2 - tauC1)) + aC3*aT1*tauC2*np.exp((decay + rotation - t)/tauT1)/(tauT1 - tauC2) + aC3*aT1*tauC2*np.exp((decay + rotation - t)/tauC2)/(-tauT1 + tauC2) + aC3*aT2*tauC2*np.exp((decay + rotation - t)/tauT2)/(tauT2 - tauC2) + aC3*aT2*tauC2*np.exp((decay + rotation - t)/tauC2)/(-tauT2 + tauC2) + aC4*aT1*tauC3*np.exp((decay + rotation - t)/tauT1)/(tauT1 - tauC3) + aC4*aT1*tauC3*np.exp((decay + rotation - t)/tauC3)/(-tauT1 + tauC3) + aC4*aT2*tauC3*np.exp((decay + rotation - t)/tauT2)/(tauT2 - tauC3) + aC4*aT2*tauC3*np.exp((decay + rotation - t)/tauC3)/(-tauT2 + tauC3))*UnitStep(decay + rotation, -decay - rotation + t)

    term1 = (aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*(2*tauT1**2*(np.exp(p/tauT1) - 1) - 2*tauT1*p*np.exp(p/tauT1) + p**2*np.exp(t/tauT1))*np.exp(t/tauT2) + aT2*(2*tauT2**2*(np.exp(p/tauT2) - 1) - 2*tauT2*p*np.exp(p/tauT2) + p**2*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) - 2*aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*tauT1**2*(tauT2 - tauC1)*(np.exp(p/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*p*(tauT2 - tauC1)*np.exp(t*(1/tauC1 + 1/tauT2) + p/tauT1) + aT2*(tauT2**2*(np.exp(p/tauT2) - 1)*np.exp(t/tauC1) - tauT2*p*np.exp(t/tauC1 + p/tauT2) + tauC1*(tauC1 + (p - tauC1)*np.exp(p/tauC1))*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2)) + tauC1*(aT1*(tauT2 - tauC1)*(tauC1 + (p - tauC1)*np.exp(p/tauC1))*np.exp(t/tauT2) + aT2*(-tauT2**2*(np.exp(p/tauT2) - 1)*np.exp(t/tauC1) + tauT2*p*np.exp(t/tauC1 + p/tauT2) - tauC1*(tauC1 + (p - tauC1)*np.exp(p/tauC1))*np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1))) - 2*(tauT1 - tauC1)*(tauT2 - tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(tauT2 - tauC3)*(aT1*tauT1**2*(tauT2 - tauC2)*(np.exp(p/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*p*(tauT2 - tauC2)*np.exp(t*(1/tauC2 + 1/tauT2) + p/tauT1) + aT2*(tauT2**2*(np.exp(p/tauT2) - 1)*np.exp(t/tauC2) - tauT2*p*np.exp(t/tauC2 + p/tauT2) + tauC2*(tauC2 + (p - tauC2)*np.exp(p/tauC2))*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC1)) + tauC2*(aT1*(tauT2 - tauC2)*(tauC2 + (p - tauC2)*np.exp(p/tauC2))*np.exp(t/tauT2) + aT2*(-tauT2**2*(np.exp(p/tauT2) - 1)*np.exp(t/tauC2) + tauT2*p*np.exp(t/tauC2 + p/tauT2) - tauC2*(tauC2 + (p - tauC2)*np.exp(p/tauC2))*np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(aT1*tauT1**2*(tauT2 - tauC3)*(np.exp(p/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*p*(tauT2 - tauC3)*np.exp(t*(1/tauC3 + 1/tauT2) + p/tauT1) + aT2*(tauT2**2*(np.exp(p/tauT2) - 1)*np.exp(t/tauC3) - tauT2*p*np.exp(t/tauC3 + p/tauT2) + tauC3*(tauC3 + (p - tauC3)*np.exp(p/tauC3))*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC2 + 1/tauC1)) + tauC3*(aT1*(tauT2 - tauC3)*(tauC3 + (p - tauC3)*np.exp(p/tauC3))*np.exp(t/tauT2) + aT2*(-tauT2**2*(np.exp(p/tauT2) - 1)*np.exp(t/tauC3) + tauT2*p*np.exp(t/tauC3 + p/tauT2) - tauC3*(tauC3 + (p - tauC3)*np.exp(p/tauC3))*np.exp(t/tauT2)))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))/(p*rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3))

    term2 = (aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*(2*tauT1**2*(np.exp(t/tauT1) - 1) - 2*tauT1*t*np.exp(t/tauT1) + t**2*np.exp(t/tauT1))*np.exp(t/tauT2) + aT2*(2*tauT2**2*(np.exp(t/tauT2) - 1) - 2*tauT2*t*np.exp(t/tauT2) + t**2*np.exp(t/tauT2))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1)) + 2*aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(aT1*tauT1**2*(tauT2 - tauC1)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*t*(tauT2 - tauC1)*np.exp(t*(1/tauC1 + 1/tauT2)) + aT2*(tauT2**2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC1) - tauT2*t*np.exp(t*(1/tauC1 + 1/tauT2)) + tauC1*(tauC1 + (t - tauC1)*np.exp(t/tauC1))*np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1)) + tauC1*(aT1*(tauT2 - tauC1)*(tauC1 + (t - tauC1)*np.exp(t/tauC1))*np.exp(t/tauT2) + aT2*(-tauT2**2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC1) + tauT2*t*np.exp(t*(1/tauC1 + 1/tauT2)) - tauC1*(tauC1 + (t - tauC1)*np.exp(t/tauC1))*np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1))) + 2*(tauT1 - tauC1)*(-tauT2 + tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(tauT2 - tauC3)*(aT1*tauT1**2*(tauT2 - tauC2)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*t*(tauT2 - tauC2)*np.exp(t*(1/tauC2 + 1/tauT2)) + aT2*(tauT2**2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC2) - tauT2*t*np.exp(t*(1/tauC2 + 1/tauT2)) + tauC2*(tauC2 + (t - tauC2)*np.exp(t/tauC2))*np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1)) + tauC2*(aT1*(tauT2 - tauC2)*(tauC2 + (t - tauC2)*np.exp(t/tauC2))*np.exp(t/tauT2) + aT2*(-tauT2**2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC2) + tauT2*t*np.exp(t*(1/tauC2 + 1/tauT2)) - tauC2*(tauC2 + (t - tauC2)*np.exp(t/tauC2))*np.exp(t/tauT2)))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(aT1*tauT1**2*(tauT2 - tauC3)*(np.exp(t/tauT1) - 1)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*t*(tauT2 - tauC3)*np.exp(t*(1/tauC3 + 1/tauT2)) + aT2*(tauT2**2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC3) - tauT2*t*np.exp(t*(1/tauC3 + 1/tauT2)) + tauC3*(tauC3 + (t - tauC3)*np.exp(t/tauC3))*np.exp(t/tauT2)))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)) + tauC3*(aT1*(tauT2 - tauC3)*(tauC3 + (t - tauC3)*np.exp(t/tauC3))*np.exp(t/tauT2) + aT2*(-tauT2**2*(np.exp(t/tauT2) - 1)*np.exp(t/tauC3) + tauT2*t*np.exp(t*(1/tauC3 + 1/tauT2)) - tauC3*(tauC3 + (t - tauC3)*np.exp(t/tauC3))*np.exp(t/tauT2)))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))/(p*rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3))

    term3 = (aC1*(-tauT1 + tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(aT1*(2*tauT1**2*(-p*np.exp(rotation/tauT1) + p + rotation*(np.exp(p/tauT1) - 1)) + p*rotation*(-p + rotation)*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + aT2*(2*tauT2**2*(-p*np.exp(rotation/tauT2) + p + rotation*(np.exp(p/tauT2) - 1)) + p*rotation*(-p + rotation)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1))) + 2*aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(aT1*tauT1**2*(tauT2 - tauC1)*(p*(np.exp(rotation/tauT1) - 1) - rotation*np.exp(p/tauT1) + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - tauT1*aT2*(tauT2**2*(-p*np.exp(rotation/tauT2) + p + rotation*(np.exp(p/tauT2) - 1))*np.exp(t/tauC1) + tauC1**2*(p*(np.exp(rotation/tauC1) - 1) - rotation*np.exp(p/tauC1) + rotation)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1)) + tauC1*(aT1*tauC1*(tauT2 - tauC1)*(-p*np.exp(rotation/tauC1) + p + rotation*(np.exp(p/tauC1) - 1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(-p*np.exp(rotation/tauT2) + p + rotation*(np.exp(p/tauT2) - 1))*np.exp(t/tauC1) + tauC1**2*(p*(np.exp(rotation/tauC1) - 1) - rotation*np.exp(p/tauC1) + rotation)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1)))) + 2*(tauT1 - tauC1)*(tauT2 - tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(-tauT2 + tauC3)*(aT1*tauT1**2*(tauT2 - tauC2)*(p*(np.exp(rotation/tauT1) - 1) - rotation*np.exp(p/tauT1) + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - tauT1*aT2*(tauT2**2*(-p*np.exp(rotation/tauT2) + p + rotation*(np.exp(p/tauT2) - 1))*np.exp(t/tauC2) + tauC2**2*(p*(np.exp(rotation/tauC2) - 1) - rotation*np.exp(p/tauC2) + rotation)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1)) + tauC2*(aT1*tauC2*(tauT2 - tauC2)*(-p*np.exp(rotation/tauC2) + p + rotation*(np.exp(p/tauC2) - 1))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(-p*np.exp(rotation/tauT2) + p + rotation*(np.exp(p/tauT2) - 1))*np.exp(t/tauC2) + tauC2**2*(p*(np.exp(rotation/tauC2) - 1) - rotation*np.exp(p/tauC2) + rotation)*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1)))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(aT1*tauT1**2*(tauT2 - tauC3)*(-p*np.exp(rotation/tauT1) + p + rotation*(np.exp(p/tauT1) - 1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*aT2*(tauT2**2*(-p*np.exp(rotation/tauT2) + p + rotation*(np.exp(p/tauT2) - 1))*np.exp(t/tauC3) + tauC3**2*(p*(np.exp(rotation/tauC3) - 1) - rotation*np.exp(p/tauC3) + rotation)*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1)) + tauC3*(aT1*tauC3*(tauT2 - tauC3)*(p*(np.exp(rotation/tauC3) - 1) - rotation*np.exp(p/tauC3) + rotation)*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(p*(np.exp(rotation/tauT2) - 1) - rotation*np.exp(p/tauT2) + rotation)*np.exp(t/tauC3) + tauC3**2*(-p*np.exp(rotation/tauC3) + p + rotation*(np.exp(p/tauC3) - 1))*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1))))))*np.exp(-t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1))/(p*rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(p - rotation))

    term4 = (-aC1*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(tauT2 - tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(-aT1*(2*tauT1**2*(p*(np.exp(t/tauT1) - 1) - rotation*np.exp(p/tauT1) + rotation) - 2*tauT1*p*(-rotation + t)*np.exp(t/tauT1) + p*(p*rotation + t*(-2*rotation + t))*np.exp(t/tauT1))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) - aT2*(2*tauT2**2*(p*(np.exp(t/tauT2) - 1) - rotation*np.exp(p/tauT2) + rotation) - 2*tauT2*p*(-rotation + t)*np.exp(t/tauT2) + p*(p*rotation + t*(-2*rotation + t))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT1))) + 2*aC2*tauC1*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC2)*(tauT2 - tauC3)*(aT1*tauT1**2*(tauT2 - tauC1)*(p*(np.exp(t/tauT1) - 1) - rotation*np.exp(p/tauT1) + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*p*(tauT2 - tauC1)*(-rotation + t)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(p*(np.exp(t/tauT2) - 1) - rotation*np.exp(p/tauT2) + rotation)*np.exp(t/tauC1) - tauT2*p*(-rotation + t)*np.exp(t*(1/tauC1 + 1/tauT2)) + tauC1*(p*(-rotation + t - tauC1)*np.exp(t/tauC1) + rotation*tauC1*np.exp(p/tauC1) + tauC1*(p - rotation))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1))) + tauC1*(aT1*(tauT2 - tauC1)*(p*(-rotation + t - tauC1)*np.exp(t/tauC1) + rotation*tauC1*np.exp(p/tauC1) + tauC1*(p - rotation))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(-p*np.exp(t/tauT2) + p + rotation*(np.exp(p/tauT2) - 1))*np.exp(t/tauC1) + tauT2*p*(-rotation + t)*np.exp(t*(1/tauC1 + 1/tauT2)) + tauC1*(p*(rotation - t + tauC1)*np.exp(t/tauC1) - rotation*tauC1*np.exp(p/tauC1) + tauC1*(-p + rotation))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauT1)))) + 2*(tauT1 - tauC1)*(-tauT2 + tauC1)*(aC3*tauC2*(tauT1 - tauC3)*(tauT2 - tauC3)*(aT1*tauT1**2*(tauT2 - tauC2)*(p*(np.exp(t/tauT1) - 1) - rotation*np.exp(p/tauT1) + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*p*(tauT2 - tauC2)*(-rotation + t)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(p*(np.exp(t/tauT2) - 1) - rotation*np.exp(p/tauT2) + rotation)*np.exp(t/tauC2) - tauT2*p*(-rotation + t)*np.exp(t*(1/tauC2 + 1/tauT2)) + tauC2*(p*(-rotation + t - tauC2)*np.exp(t/tauC2) + rotation*tauC2*np.exp(p/tauC2) + tauC2*(p - rotation))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1))) + tauC2*(aT1*(tauT2 - tauC2)*(p*(-rotation + t - tauC2)*np.exp(t/tauC2) + rotation*tauC2*np.exp(p/tauC2) + tauC2*(p - rotation))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(-p*np.exp(t/tauT2) + p + rotation*(np.exp(p/tauT2) - 1))*np.exp(t/tauC2) + tauT2*p*(-rotation + t)*np.exp(t*(1/tauC2 + 1/tauT2)) + tauC2*(p*(rotation - t + tauC2)*np.exp(t/tauC2) - rotation*tauC2*np.exp(p/tauC2) + tauC2*(-p + rotation))*np.exp(t/tauT2))*np.exp(t*(1/tauC3 + 1/tauC1 + 1/tauT1)))) + aC4*tauC3*(tauT1 - tauC2)*(tauT2 - tauC2)*(aT1*tauT1**2*(tauT2 - tauC3)*(p*(np.exp(t/tauT1) - 1) - rotation*np.exp(p/tauT1) + rotation)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2)) + tauT1*(-aT1*p*(tauT2 - tauC3)*(-rotation + t)*np.exp(t*(1/tauC3 + 1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(p*(np.exp(t/tauT2) - 1) - rotation*np.exp(p/tauT2) + rotation)*np.exp(t/tauC3) - tauT2*p*(-rotation + t)*np.exp(t*(1/tauC3 + 1/tauT2)) + tauC3*(p*(-rotation + t - tauC3)*np.exp(t/tauC3) + rotation*tauC3*np.exp(p/tauC3) + tauC3*(p - rotation))*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1))) + tauC3*(aT1*(tauT2 - tauC3)*(p*(-rotation + t - tauC3)*np.exp(t/tauC3) + rotation*tauC3*np.exp(p/tauC3) + tauC3*(p - rotation))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT2 + 1/tauT1)) + aT2*(tauT2**2*(-p*np.exp(t/tauT2) + p + rotation*(np.exp(p/tauT2) - 1))*np.exp(t/tauC3) + tauT2*p*(-rotation + t)*np.exp(t*(1/tauC3 + 1/tauT2)) + tauC3*(p*(rotation - t + tauC3)*np.exp(t/tauC3) - rotation*tauC3*np.exp(p/tauC3) + tauC3*(-p + rotation))*np.exp(t/tauT2))*np.exp(t*(1/tauC2 + 1/tauC1 + 1/tauT1))))))*np.exp(t*(-1/tauC3 - 1/tauC2 - 1/tauC1 - 1/tauT2 - 1/tauT1))/(p*rotation*(tauT1 - tauC1)*(tauT1 - tauC2)*(tauT1 - tauC3)*(-tauT2 + tauC1)*(tauT2 - tauC2)*(tauT2 - tauC3)*(p - rotation))

    
    result = AACO2 * kPulseT * np.where(condition1, term1,
                                        np.where(condition2, term2,
                                                np.where(condition3, term3,
                                                            np.where(condition4, term4, 0
                                                                    ))))
    
    result += commonterm

    return result 


# CH4 fossil vs biogenic
def DAGWPCH4toCO2(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2):
    return AACO2*M_CO2*Y*(aC1*tauOH*(t + tauOH*(-1 + np.exp(-t/tauOH))) - aC2*tauC1**2*tauOH*(-np.exp(-t/tauOH) + np.exp(-t/tauC1))/(tauC1 - tauOH) + aC2*tauC1*(tauOH - tauOH*np.exp(-t/tauOH)) - aC3*tauC2**2*tauOH*(-np.exp(-t/tauOH) + np.exp(-t/tauC2))/(tauC2 - tauOH) + aC3*tauC2*(tauOH - tauOH*np.exp(-t/tauOH)) - aC4*tauC3**2*tauOH*(-np.exp(-t/tauOH) + np.exp(-t/tauC3))/(tauC3 - tauOH) + aC4*tauC3*(tauOH - tauOH*np.exp(-t/tauOH)))/(M_CH4*tauOH)

def DAGTPCH4toCO2(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, kPulseT, aT1, tauT1, aT2, tauT2, AACO2):
    return AACO2*M_CO2*Y*kPulseT*(-aC1*aT1*tauOH*tauT1*(-np.exp(-t/tauT1) + np.exp(-t/tauOH))/(tauOH - tauT1) + aC1*aT1*(tauOH - tauOH*np.exp(-t/tauOH)) - aC1*aT2*tauOH*tauT2*(-np.exp(-t/tauT2) + np.exp(-t/tauOH))/(tauOH - tauT2) + aC1*aT2*(tauOH - tauOH*np.exp(-t/tauOH)) - aC2*aT1*tauC1**2*tauOH*(-np.exp(-t/tauOH) + np.exp(-t/tauC1))/((-tauC1 + tauT1)*(tauC1 - tauOH)) + aC2*aT1*tauC1*tauOH*tauT1*(-np.exp(-t/tauT1) + np.exp(-t/tauOH))/((-tauC1 + tauT1)*(tauOH - tauT1)) - aC2*aT2*tauC1**2*tauOH*(-np.exp(-t/tauOH) + np.exp(-t/tauC1))/((-tauC1 + tauT2)*(tauC1 - tauOH)) + aC2*aT2*tauC1*tauOH*tauT2*(-np.exp(-t/tauT2) + np.exp(-t/tauOH))/((-tauC1 + tauT2)*(tauOH - tauT2)) - aC3*aT1*tauC2**2*tauOH*(-np.exp(-t/tauOH) + np.exp(-t/tauC2))/((-tauC2 + tauT1)*(tauC2 - tauOH)) + aC3*aT1*tauC2*tauOH*tauT1*(-np.exp(-t/tauT1) + np.exp(-t/tauOH))/((-tauC2 + tauT1)*(tauOH - tauT1)) - aC3*aT2*tauC2**2*tauOH*(-np.exp(-t/tauOH) + np.exp(-t/tauC2))/((-tauC2 + tauT2)*(tauC2 - tauOH)) + aC3*aT2*tauC2*tauOH*tauT2*(-np.exp(-t/tauT2) + np.exp(-t/tauOH))/((-tauC2 + tauT2)*(tauOH - tauT2)) - aC4*aT1*tauC3**2*tauOH*(-np.exp(-t/tauOH) + np.exp(-t/tauC3))/((-tauC3 + tauT1)*(tauC3 - tauOH)) + aC4*aT1*tauC3*tauOH*tauT1*(-np.exp(-t/tauT1) + np.exp(-t/tauOH))/((-tauC3 + tauT1)*(tauOH - tauT1)) - aC4*aT2*tauC3**2*tauOH*(-np.exp(-t/tauOH) + np.exp(-t/tauC3))/((-tauC3 + tauT2)*(tauC3 - tauOH)) + aC4*aT2*tauC3*tauOH*tauT2*(-np.exp(-t/tauT2) + np.exp(-t/tauOH))/((-tauC3 + tauT2)*(tauOH - tauT2)))/(M_CH4*tauOH)

def AGWPCH4Fossil_Final(t, tauNonCO2, kPulseT, aT1, tauT1, aT2, tauT2, AANonCO2, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, gamma, aS1, aS2, aS3, tauS1, tauS2, tauS3):

    return AGWPNonCO2_Final(t, tauNonCO2, kPulseT, aT1, tauT1, aT2, tauT2, AANonCO2, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, gamma, aS1, aS2, aS3, tauS1, tauS2, tauS3) + DAGWPCH4toCO2(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2)

def AGTPCH4Fossil_Final(t, tauNonCO2, kPulseT, aT1, tauT1, aT2, tauT2, AANonCO2, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, gamma, aS1, aS2, aS3, tauS1, tauS2, tauS3):

    return AGTPNonCO2_Final(t, tauNonCO2, kPulseT, aT1, tauT1, aT2, tauT2, AANonCO2, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, gamma, aS1, aS2, aS3, tauS1, tauS2, tauS3) + DAGTPCH4toCO2(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, kPulseT, aT1, tauT1, aT2, tauT2, AACO2)

def AGWPCH4NonFossil_Final(t, tauNonCO2, kPulseT, aT1, tauT1, aT2, tauT2, AANonCO2, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, gamma, aS1, aS2, aS3, tauS1, tauS2, tauS3):

    return AGWPNonCO2_Final(t, tauNonCO2, kPulseT, aT1, tauT1, aT2, tauT2, AANonCO2, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, gamma, aS1, aS2, aS3, tauS1, tauS2, tauS3) + DAGWPCH4toCO2(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2) - (M_CO2/M_CH4)*AGWPCO2(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2)

def AGTPCH4NonFossil_Final(t, tauNonCO2, kPulseT, aT1, tauT1, aT2, tauT2, AANonCO2, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, gamma, aS1, aS2, aS3, tauS1, tauS2, tauS3):

    return AGTPNonCO2_Final(t, tauNonCO2, kPulseT, aT1, tauT1, aT2, tauT2, AANonCO2, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, AACO2, gamma, aS1, aS2, aS3, tauS1, tauS2, tauS3) + DAGTPCH4toCO2(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, kPulseT, aT1, tauT1, aT2, tauT2, AACO2) - (M_CO2/M_CH4)*AGTPCO2(t, aC1, aC2, aC3, aC4, tauC1, tauC2, tauC3, kPulseT, aT1, tauT1, aT2, tauT2, AACO2)